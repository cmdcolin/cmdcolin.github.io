(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[687],{3905:function(e,t,n){"use strict";n.d(t,{kt:function(){return m}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"===typeof e?e(t):o(o({},t),e)),n},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,s=e.originalType,l=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),m=c(n),h=i,d=m["".concat(l,".").concat(h)]||m[h]||p[h]||s;return n?r.createElement(d,o(o({ref:t},u),{},{components:n})):r.createElement(d,o({ref:t},u))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"===typeof e||i){var s=n.length,o=new Array(s);o[0]=u;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a.mdxType="string"===typeof e?e:i,o[1]=a;for(var c=2;c<s;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4995:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return i}});var r=n(5893);function i(e){var t=e.children;return(0,r.jsxs)("div",{children:[(0,r.jsx)("a",{href:"/",children:"Return home"}),(0,r.jsx)("div",{className:"blog",children:t})]})}},827:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return p}});var r=n(159),i=n(219),s=(n(7294),n(3905)),o=n(4995),a=["components"],l={},c=function(e){var t=e.children;return(0,s.kt)(o.default,null,t)};function p(e){var t=e.components,n=(0,i.Z)(e,a);return(0,s.kt)(c,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",null,"Creating a testing framework for JBrowse plugins"),(0,s.kt)("p",null,"Testing client side apps requires a couple of tedious steps: Organizing\nthe git clone, the dependencies, wrangling up a web server, the test\nframework, etc."),(0,s.kt)("p",null,'When testing a plugin for jbrowse, the dependency tree is interesting\nbecause the plugin "depends" on JBrowse to run, but we will use\ntravis-CI and bower inside the git repo for our plugin to accomplish\nthis.'),(0,s.kt)("p",null,"In this scenario, we will"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"Use bower to install jasmine and JBrowse (our platform that we write\nthe plugin for)")),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"Use nginx to launch a webserver on travis-CI")),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"Use the phantomjs run-jasmine.js script to check jasmine test\nresults"))),(0,s.kt)("p",null,"Without further ado"),(0,s.kt)("p",null,"Here is the .travis.yml"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"sudo: false\naddons:\n  apt:\n    packages:\n    - nginx\ncache:\n  apt: true\n  directories:\n  - $HOME/.cache/bower\nbefore_install:\n  - npm install -g jshint bower\ninstall:\n  - bower install\nbefore_script:\n  - cat test/travis.conf | envsubst > test/travis-envsubst.conf\n  - nginx -c `pwd`/test/travis-envsubst.conf\nscript:\n  - phantomjs test/run-jasmine.js http://localhost:9000/test/\n  - jshint js\n")),(0,s.kt)("p",null,"Refer to\n",(0,s.kt)("a",{parentName:"p",href:"http://searchvoidstar.tumblr.com/post/141858047213/running-nginx-on-containerised-travis-ci-pt-2"},"http://searchvoidstar.tumblr.com/post/141858047213/running-nginx-on-containerised-travis-ci-pt-2"),"\nfor details on the nginx setup"),(0,s.kt)("p",null,"Here is the bower.json"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'{\n  "name": "sashimiplot",\n  "homepage": "https://github.com/cmdcolin/sashimiplot",\n  "description": "Sashimi track type for jbrowse",\n  "main": "js/main.js",\n  "keywords": [\n    "bioinformatics",\n    "jbrowse"\n  ],\n  "license": "MIT",\n  "ignore": [\n    "**/.*",\n    "node_modules",\n    "bower_components",\n    "src",\n    "test",\n    "tests"\n  ],\n  "devDependencies": {\n    "jasmine-core": "jasmine#^2.4.1",\n    "jbrowse": "git://github.com/GMOD/jbrowse.git#master"\n  }\n}\n')),(0,s.kt)("p",null,'The key thing here is that it installs jasmine and JBrowse. I set\n.bowerrc to install both jasmine and JBrowse to the "test" directory'),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'{\n    "directory": "test"\n}\n')),(0,s.kt)("p",null,'With this setup, bower will make a "flat dependency tree" in the test\ndirectory, so it will look like this'),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"$ ls -1 test\nFileSaver\ndbind\ndgrid\ndijit\ndojo\ndojox\n*index.html*\njDataView\njasmine-core\njbrowse\njson-schema\njszlib\nlazyload\nput-selector\n*run-jasmine.js*\n*spec*\n*travis.conf*\nutil\nxstyle\n")),(0,s.kt)("p",null,"Here the asterisks indicate things that are part of our app, other's are\nautomatically installed by bower (jbrowse, jasmine-core, the dojo\ndependencies, and other things)"),(0,s.kt)("p",null,"Then we can create the jasmine test/index.html to be something like this"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\n  \"http://www.w3.org/TR/html4/loose.dtd\">\n\n\n  <meta>\n  Jasmine Spec Runner\n\n  <link rel=\"stylesheet\" href=\"jasmine-core/lib/jasmine-core/jasmine.css\"><script src=\"jasmine-core/lib/jasmine-core/jasmine.js\"><\/script><script src=\"jasmine-core/lib/jasmine-core/boot.js\"><\/script><script type=\"text/javascript\" src=\"dojo/dojo.js\" data-dojo-config=\"async: 1\"><\/script><script type=\"text/javascript\">\n    require( { baseUrl: '.',\n               packages: [\n                   'dojo',\n                   'dijit',\n                   'dojox',\n                   'jszlib',\n                   { name: 'lazyload', location: 'lazyload', main: 'lazyload' },\n                   'dgrid',\n                   'xstyle',\n                   'put-selector',\n                   'FileSaver',\n                   { name: 'jDataView', location: 'jDataView/src', main: 'jdataview' },\n                   { name: 'JBrowse', location: 'jbrowse/src/JBrowse' },\n                   { name: 'SashimiPlot', location: '../js' }\n               ]\n    });\n  <\/script><script type=\"text/javascript\" src=\"spec/SashimiPlot.spec.js\"><\/script><div id=\"sandbox\" style=\"overflow:hidden; height:1px;\"></div>\n")),(0,s.kt)("p",null,'The "packages" in the require statement puts all these packages in the\nright "namespace" for the AMD includes, and the "specs" are defined like\n',(0,s.kt)("inlineCode",{parentName:"p"},'<script type="text/javascript" src="spec/Projection.spec.js"><\/script>')),(0,s.kt)("p",null,"Finally, run-jasmine.js is used to check the results of the jasmine\ntests (it is run via phantomjs in the travis-CI script). It is a special\nversion for the most recent version of jasmine (2.4)\n",(0,s.kt)("a",{parentName:"p",href:"https://gist.github.com/vmeln/b6cbb319d9a0efc816be"},"https://gist.github.com/vmeln/b6cbb319d9a0efc816be")),(0,s.kt)("p",null,"For an example of the project using this, see\n",(0,s.kt)("a",{parentName:"p",href:"https://github.com/cmdcolin/sashimiplot"},"https://github.com/cmdcolin/sashimiplot")),(0,s.kt)("p",null,"::: {#footer}\n","[ April 19th, 2016 11:19am ]","{#timestamp} ","[testing]","{.tag}\n","[unittesting]","{.tag} ","[software]","{.tag} ","[engineering]","{.tag}\n:::"))}p.isMDXComponent=!0},4529:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/2016-04-19",function(){return n(827)}])},159:function(e,t,n){"use strict";function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}n.d(t,{Z:function(){return r}})},219:function(e,t,n){"use strict";function r(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}n.d(t,{Z:function(){return r}})}},function(e){e.O(0,[774,888,179],(function(){return t=4529,e(e.s=t);var t}));var t=e.O();_N_E=t}]);