(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[4022],{3905:function(e,t,n){"use strict";n.d(t,{kt:function(){return p}});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=o.createContext({}),h=function(e){var t=o.useContext(l),n=t;return e&&(n="function"===typeof e?e(t):i(i({},t),e)),n},c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=h(n),d=a,m=p["".concat(l,".").concat(d)]||p[d]||c[d]||r;return n?o.createElement(m,i(i({ref:t},u),{},{components:n})):o.createElement(m,i({ref:t},u))}));function p(e,t){var n=arguments,a=t&&t.mdxType;if("string"===typeof e||a){var r=n.length,i=new Array(r);i[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"===typeof e?e:a,i[1]=s;for(var h=2;h<r;h++)i[h]=n[h];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4995:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return a}});var o=n(5893);function a(e){var t=e.children;return(0,o.jsxs)("div",{children:[(0,o.jsx)("a",{href:"/",children:"Return home"}),(0,o.jsx)("div",{className:"blog",children:t})]})}},8194:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return c}});var o=n(159),a=n(219),r=(n(7294),n(3905)),i=n(4995),s=["components"],l={},h=function(e){var t=e.children;return(0,r.kt)(i.default,null,t)};function c(e){var t=e.components,n=(0,a.Z)(e,s);return(0,r.kt)(h,(0,o.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",null,'Response to\xa0"You fired your top talent"'),(0,r.kt)("p",null,'This post is not necessarily against the post "you fired your top\ntalent" or "we fired our top talent". Just maybe an inquiry to why\nthings happen as they do with high performing and low performing workers'),(0,r.kt)("p",null,"\\"),(0,r.kt)("p",null,'In my experience, it seems like workers can be completely unproductive\neven when they are "coming into work every day". I can\'t really explain\nwhy, but I have been in unproductive roles where I was totally on dead\nends, and I don\'t think it\'s necessarily because I was unskilled. For\nexample, I have also \xa0been on projects where I just fully absorbed the\ncode\xa0and became a core contributor (maybe even became a "Rick"). Then it\nwas kind of insane because as a core contributor, when I looked around,\nI just saw other people doing unproductive and even counterproductive\nthings.'),(0,r.kt)("p",null,'Now, as the article says, where was "management"? Would they have\nhelped, for example to manage Rick better or spread work out, as the\narticle seems to suggest? IMO, I think not. Maybe the article is a plea\nfor better management (the article itself is a response to another one\nwhere management simply fired their "Rick") but I think it is just so\nfrequent that management is pretty incompetent in technical ways that I\nhave a hard idea of knowing whether my experience is bad or not (note\nthat I do believe, in many cases, that their diplomacy efforts and\npeople skills are pretty impressive so I don\'t believe in "no\nmanagement"). But can they manage the technical work? I am not sure. For\nexample, management I have worked under always seem to have a bunch of\n"pet project" features that they harped on about. We could have a\nmeeting every week, and this same thing would occur every other week,\nand you have to repeatedly explain why it is a problem in the current\ncodebase. In some sense, as a core dev, you might even start to believe\nthe management is psychotic for even wanting some of these features that\nthey harp on about because there are so many more important real things\nyou need, and implementing their pet project or fixing their pet peeve\nwould actually damage the codebase.\xa0'),(0,r.kt)("p",null,'The real work on the project isn\'t the pet projects that management has,\nit is plugging away at issues, enabling better code through good\nabstractions (functional, architectural, object oriented, or\nconfiguration abstractions). Good code often can just be a proliferation\nof existing good code patterns in a monkey-see monkey-do thing, and\neventually you don\'t always need to go to stackoverflow for an answer\neventually because the entire mental map you obtain enables you to pick\nand choose solutions from your own project. Abstractions can then enable\ncertain more productive things to happen down the line, make things\nflexible. Then many parts of code work in fixing issues should make\nthings more stable and accurate (hopefully you are not just working\nyourself into a hacky soup when you are "fixing" your issues). In the\nworst case, something you created actually just multiplies issues for\nyou because suddenly everything is dependent on a hack. Sometimes I feel\nlike some devs just really fail to see this and start to just hack\nthings to the fucking bone trying to make it work. If you are a\nproductive contributor working on the project, you might be able to\nrecognize a lot of these things, and hopefully realize that productive\nis not just\xa0"create hacks" or\xa0"we need to change frameworks" (how many\nconference calls have we had where management disparages library x as\nbeing unhip? or calling the old devs\xa0"dumb" for not having implemented\ntheir pet project before they quit? management can be dumb as a rock\nimo, and as I no longer work there, I\'m really happy to rip into their\nbad habits)'),(0,r.kt)("p",null,'What about the idea that things need "documenting" to enable other devs\nto work on the project? I think this is a red herring. In fact, "Rick"\nprobably is documenting things if he\'s a good developer. He probably has\nimportant notes that you would understand if you were actually even\nusing the product as it is meant to be used (and not, simply using the\nproduct to test whether your pet prioject was finally implemented, or\nworking on a crazy side project that is tangential to what most users\nuse the product for, these tangential misguided uses of your core\nproduct often comes from UNPRODUCTIVE DEVS and MANAGEMENT not from RICK!\nRick probably has the best knowledge about not only the code, but also\nthe future potential of the project and the current needs of users (if\nhe does mail list support for example, he\'s might be in correspondence\nwith users already). There might be a very deep configuration option\nthat Rick made that few people know about, but when you realize that\nconfig variable exists, you will be so appreciative. In fact, you are\noverjoyed because now you just flip that config switch instead of\nediting the codebase and recompiling to enable something. The entry\nprobably exists in documentation, but you don\'t care until you need it.\nAlso, the original article seems to claim that these config switches\nadd\xa0"complexity" and claim their trimmed down version that they made\n"without Rick" is more\xa0"bug free" but many times, config switches can be\ncompletely painless (e.g. read a global\xa0json object. that\'s absolutely\npainless in javascript. don\'t complain about globals to me for a read\nonly config) and don\'t add significant complexity, they actually just\nadd flexibility!'),(0,r.kt)("p",null,'Now, I\'ve had devs explain "architecture" to me, and afterwards it\ncompletely means nothing to me. They give me some crazy idea that\nessentially boils down to\xa0"oh this is MVC, and there are some crazy\nmodules at each layer, but yea, enjoy" and I really am not enlightened\nat all. To even get what\'s going on, I have to begin deeply working with\nthe code. Now because of that, there might be a sort of explanation of\nwhy a dev is unproductive, namely that for whatever reason or another,\nthey are not taking a dive into the code, and therefore, they just don\'t\nengage. Learning to use\xa0"grep" and everything to find what part of code\ndoes whatever thing is really important as far as this goes, but\neventually, you need to just get a big mental map of everything.\\'),(0,r.kt)("p",null,"The idea of a developer having a \"responsibility\" for their code is\nsomething that I truly think could be important too. You can really only\nbuild the mental map if you are doing things with the code, so for\nexample, a successful project would have a good system of getting\ndevelopers on tasks that are appropriate and reasonable. In a project I\nsucceeded in, the original developers left the project and I was\nbasically in a position where I could take up a lot of slack and\nresponsibility for the project, so I did so with eagerness. In another\nexample, I've been given projects that I don't feel like is part of the\ncore product or even the core codebase (being assigned smaller code\nprojects that may or may not find use in a core product)"),(0,r.kt)("p",null,"If I was to make an analogy, sometimes you need to really take some\npersonal responsibility to make a project happen. When I am working on\nhome repairs, of which I have a LOT of as I am basically fixing up\nhouses in my spare time now, I find that I can simply be of assistance\nmy friend who is also helping fix the house, or I can spearhead a\nproject on my own. Or, my friend (who is better at repairs than me) can\nkindly suggest a project that I can do. In one sense, he can be a\nmanager but only because he really knows what is also going on in the\ncodebase. But I can also, take the responsibility to make things happen\nmyself. If I have a good enough mental map of what to do, I can then\nperform all the google queries, the store trips, know what tools to use,\nand execute all on my own."),(0,r.kt)("p",null,'With my house-fixing-up project, if I was to have my parents be\n"management" (they love getting pictures of progress and making\nsuggestions) then literally what they keep telling me to do is put in a\nwasher and dryer in, even though we are not even finished with demo\n(demolition) work and the place is a mess. Surely they know some other\nstuff, and might even be able to suggest things to do or people to call\nif they were more deeply involved, but\xa0basically, the management can\'t\nhelp very deeply. Similarly, documentation of all my work isn\'t going to\nhelp, because really it is the process of being involved in the coding\nand fixing of existing issues\xa0that makes you know what needs work. The\ndocumentation, per se, is all online on google for example "how to put\nin light switch" but your mental map of what needs to go where in the\nhouse is what pushes the project forward.'),(0,r.kt)("p",null,"::: {#footer}\n","[ October 17th, 2017 2:43am ]","{#timestamp} ","[rant]","{.tag}\n:::"))}c.isMDXComponent=!0},3026:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/2017-10-17",function(){return n(8194)}])},159:function(e,t,n){"use strict";function o(){return(o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e}).apply(this,arguments)}n.d(t,{Z:function(){return o}})},219:function(e,t,n){"use strict";function o(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}n.d(t,{Z:function(){return o}})}},function(e){e.O(0,[9774,2888,179],(function(){return t=3026,e(e.s=t);var t}));var t=e.O();_N_E=t}]);