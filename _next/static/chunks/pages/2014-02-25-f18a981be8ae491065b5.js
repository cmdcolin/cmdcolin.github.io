(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[1879],{3905:function(e,t,n){"use strict";n.d(t,{kt:function(){return p}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"===typeof e?e(t):i(i({},t),e)),n},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,f=l(e,["components","mdxType","originalType","parentName"]),p=c(n),d=o,m=p["".concat(s,".").concat(d)]||p[d]||u[d]||a;return n?r.createElement(m,i(i({ref:t},f),{},{components:n})):r.createElement(m,i({ref:t},f))}));function p(e,t){var n=arguments,o=t&&t.mdxType;if("string"===typeof e||o){var a=n.length,i=new Array(a);i[0]=f;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"===typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},4995:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return o}});var r=n(5893);function o(e){var t=e.children;return(0,r.jsxs)("div",{children:[(0,r.jsx)("a",{href:"/",children:"Return home"}),(0,r.jsx)("div",{style:{margin:"0 auto",width:"75%"},children:t})]})}},9668:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return u}});var r=n(159),o=n(219),a=(n(7294),n(3905)),i=n(4995),l=["components"],s={},c=function(e){var t=e.children;return(0,a.kt)(i.default,null,t)};function u(e){var t=e.components,n=(0,o.Z)(e,l);return(0,a.kt)(c,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",null,"Merging VCF files"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Introduction")),(0,a.kt)("p",null,"Recently, I was looking at a bunch of variant call files (VCF) where\neach VCF represented it's own scaffold, and I sought to merge them\ntogether to create a unified view. I decided to use GATK CombineVariants\nand followed their guide for using it\n",(0,a.kt)("a",{parentName:"p",href:"http://www.broadinstitute.org/gatk/gatkdocs/org_broadinstitute_sting_gatk_walkers_variantutils_CombineVariants.html"},"here"),".\nIt was fairly straightforward but there were some hiccups that i'll go\nthrough here"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"../../media/77857883496_0.png",alt:null})),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Variant detail view in JBrowse showing genotype statistics")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"CombineVariants wants a dict and samtools index file for the reference\ngenome")),(0,a.kt)("p",null,"In order to use GATK you first need to format some files for the\nreference genome. I followed the GATK guide for doing so from\n",(0,a.kt)("a",{parentName:"p",href:"http://gatkforums.broadinstitute.org/discussion/1601/how-can-i-prepare-a-fasta-file-to-use-as-reference"},"here"),".\nThe steps for formatting the reference are as follows:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Create a dict file for the FASTA using picard"),(0,a.kt)("li",{parentName:"ul"},"Create a fai file using SAMtools")),(0,a.kt)("p",null,"Here's the commands we used (and the error messages that clued me to do\nit)"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"First create a fai\xa0index.\xa0Note: You should use this step to create an\nfai index if you get the error message:\xa0ERROR MESSAGE: Fasta index file\n... for reference ... does not exist.")),(0,a.kt)("blockquote",null,(0,a.kt)("pre",{parentName:"blockquote"},(0,a.kt)("code",{parentName:"pre"},"samtools faidx Amel_4.5_scaffolds.fa\n"))),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Then create a dict index.\xa0Note: You should use this step from the\npicard toolkit if you get this error:\xa0ERROR MESSAGE: Fasta dict file ...\nfor reference ... does not exist.\xa0")),(0,a.kt)("blockquote",null,(0,a.kt)("pre",{parentName:"blockquote"},(0,a.kt)("code",{parentName:"pre"}," java -jar CreateSequenceDictionary.jar R= ~/Amel_4.5_scaffolds.fa O= ~/Amel_4.5_scaffolds.fa.dict\n"))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"CombineVariants needs a sorted VCF\\\n")),(0,a.kt)("p",null,"GATK CombineVariants can be used after the reference is formatted, but\nit gives errors if the VCF isn't sorted. I found the ",(0,a.kt)("a",{parentName:"p",href:"http://seqanswers.com/forums/showthread.php?t=11909%20"},"following\ndiscussion thread on\nseqanswers")," and\nused vcfsorter to fix that problem ",(0,a.kt)("a",{parentName:"p",href:"http://code.google.com/p/vcfsorter/"},"http://code.google.com/p/vcfsorter/")),(0,a.kt)("blockquote",null,(0,a.kt)("pre",{parentName:"blockquote"},(0,a.kt)("code",{parentName:"pre"},'# Note: You should use vcfsorter if you get the error message:\n##### ERROR MESSAGE: Input files ../myvcf.vcf and reference have incompatible contigs:\n###### Relative ordering of overlapping contigs differs, which is unsafe.\n\xa0\nfor f in vcfGzip/*.vcf; do echo "Processing $f";\n    perl vcfsorter.pl ~/Amel_4.5_scaffolds.dict $f>$f.sorted.vcf;\ndone\n'))),(0,a.kt)("p",null,'This is probably just an alphanumeric sort on the chromosome names and a\nnumeric sort on the start position, so a custom unix\xa0"sort" might work\ntoo i.e. sort -k1,1 -k 2,2n or similar'),(0,a.kt)("p",null,"\\"),(0,a.kt)("p",null,"\\\n",(0,a.kt)("strong",{parentName:"p"},"Finally merge the variants with CombineVariants")),(0,a.kt)("p",null,"Generate a list of variants and then you are ready to piece together a\ncommand to combine all your VCFs"),(0,a.kt)("blockquote",null,(0,a.kt)("pre",{parentName:"blockquote"},(0,a.kt)("code",{parentName:"pre"},"\xa0CombineVariants java -jar GenomeAnalysisTK.jar -R Amel_4.5_scaffolds.fa -T CombineVariants \\\n--variant C181.vcf.sorted.vcf \\\n--variant C182.vcf.sorted.vcf \\\n--variant ...etc... \\\n-o combined.vcf -genotypeMergeOptions UNIQUIFY\n"))),(0,a.kt)("p",null,'I haven\'t explored all the genotypeMergeOptions, but this one was ok\nenough to create a\xa0"reasonable" output for our purposes.'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Finalize the VCF by creating a BGZip archive and a Tabix index file")),(0,a.kt)("p",null,"BGzip and Tabix are companions of SAMtools to finalize a VCF file. I ran\nprograms Bgzip and Tabix on the combined variant file"),(0,a.kt)("blockquote",null,(0,a.kt)("pre",{parentName:"blockquote"},(0,a.kt)("code",{parentName:"pre"},"./bgzip ~/combined.vcf\n./tabix -p vcf ~/combined.vcf.gz\n"))),(0,a.kt)("p",null,"\\\nThen this creates combined.vcf.gz and combined.vcf.gz.tbi that can be\nloaded into JBrowse easily."),(0,a.kt)("p",null,"\\"),(0,a.kt)("p",null,'Note: there is no custom VCF\xa0"loader" for jbrowse currently, but you can\njust manually add it to your track list pretty easily, e.g. add this to\nyour trackList.json.'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},' \xa0 \xa0 \xa0{\n \xa0 \xa0 \xa0 \xa0 "label" \xa0 \xa0 \xa0 \xa0 : "MyTrack",\n \xa0 \xa0 \xa0 \xa0 "storeClass" \xa0 \xa0: "JBrowse/Store/SeqFeature/VCFTabix",\n \xa0 \xa0 \xa0 \xa0 "urlTemplate" \xa0 : "combined.vcf.gz",\n \xa0 \xa0 \xa0 \xa0 "type" \xa0 \xa0 \xa0 \xa0 \xa0: "JBrowse/View/Track/HTMLVariants"\n \xa0 \xa0 \xa0}\n')),(0,a.kt)("p",null,'Also note: The tbiUrlTemplate is only necessary if your tabix index file\nisn\'t named combined.vcf.gz.tbi (i.e., it automatically checks for the\nurl of your .vcf.gz file +".tbi"). Similar thing for baiUrlTemplate,\nbecause it only needed if your BAM index isn\'t named bamfile.bam.bai\nbecause it automatically checks for your the url of your bamfile +\n".bai"'),(0,a.kt)("p",null,"::: {#footer}\n","[ February 25th, 2014 8:09pm ]","{#timestamp} ","[bioinformatics]","{.tag}\n","[tutorial]","{.tag} ","[vcf]","{.tag} ","[gatk]","{.tag} ","[samtools]","{.tag}\n:::"))}u.isMDXComponent=!0},6989:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/2014-02-25",function(){return n(9668)}])},159:function(e,t,n){"use strict";function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}n.d(t,{Z:function(){return r}})},219:function(e,t,n){"use strict";function r(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}n.d(t,{Z:function(){return r}})}},function(e){e.O(0,[9774,2888,179],(function(){return t=6989,e(e.s=t);var t}));var t=e.O();_N_E=t}]);