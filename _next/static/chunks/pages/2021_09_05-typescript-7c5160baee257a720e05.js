(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[484],{3905:function(e,t,r){"use strict";r.d(t,{kt:function(){return f}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"===typeof e?e(t):a(a({},t),e)),r},l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),f=u(r),h=o,m=f["".concat(s,".").concat(h)]||f[h]||l[h]||i;return r?n.createElement(m,a(a({ref:t},p),{},{components:r})):n.createElement(m,a({ref:t},p))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"===typeof e||o){var i=r.length,a=new Array(i);a[0]=p;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"===typeof e?e:o,a[1]=c;for(var u=2;u<i;u++)a[u]=r[u];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},4995:function(e,t,r){"use strict";r.r(t),r.d(t,{default:function(){return o}});var n=r(5893);function o(e){var t=e.children;return(0,n.jsxs)("div",{children:[(0,n.jsx)("a",{href:"/",children:"Return home"}),(0,n.jsx)("div",{className:"blog",children:t})]})}},3315:function(e,t,r){"use strict";r.r(t),r.d(t,{default:function(){return l}});var n=r(159),o=r(219),i=(r(7294),r(3905)),a=r(4995),c=["components"],s={},u=function(e){var t=e.children;return(0,i.kt)(a.default,null,t)};function l(e){var t=e.components,r=(0,o.Z)(e,c);return(0,i.kt)(u,(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",null,"Decrease your idle CPU usage when developing typescript apps with this one weird environment variable"),(0,i.kt)("p",null,"TL;DR:"),(0,i.kt)("p",null,"add this to your bashrc"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"export TSC_WATCHFILE=UseFsEventsWithFallbackDynamicPolling\n")),(0,i.kt)("p",null,"This particular watcher variable is not the default setting for typescript, but\nit changes the default from polling for file changes to a watcher. There is\ndiscussion here"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/microsoft/TypeScript/issues/31048"},"https://github.com/microsoft/TypeScript/issues/31048")),(0,i.kt)("p",null,"The issue thread shows that it can go from roughly ~7% idle CPU usage to 0.2%.\nThis corresponds roughly what I see too. Detailed docs for typescript discuss\nsome of the reasoning behing not making this the default"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/microsoft/TypeScript-Handbook/blob/master/pages/Configuring%20Watch.md#background"},"https://github.com/microsoft/TypeScript-Handbook/blob/master/pages/Configuring%20Watch.md#background")),(0,i.kt)("p",null,"It claims that some OS specific behaviors of file watching could be harmful to\nmaking it the default. For example, that (maybe?) on linux, it may use a large\nnumber of file watchers which can exceed notify handles (this is a setting I\ncommonly have to increase in linux, guide here\n",(0,i.kt)("a",{parentName:"p",href:"https://dev.to/rubiin/ubuntu-increase-inotify-watcher-file-watch-limit-kf4"},"https://dev.to/rubiin/ubuntu-increase-inotify-watcher-file-watch-limit-kf4"),")"),(0,i.kt)("p",null,"PS: you could also edit your package.json of your ",(0,i.kt)("inlineCode",{parentName:"p"},"create-react-app \u2013template\ntypescript")," for example like this\u2026then users of your app will get a similar\nbenefit."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'-"start": "react-scripts start"\n+"start": "cross-env TSC_WATCHFILE=UseFsEventsWithFallbackDynamicPolling react-scripts start"\n')),(0,i.kt)("p",null,"disclaimer: there may be reasons that typescript does not have this enabled by\ndefault so be aware"))}l.isMDXComponent=!0},6719:function(e,t,r){(window.__NEXT_P=window.__NEXT_P||[]).push(["/2021_09_05-typescript",function(){return r(3315)}])},159:function(e,t,r){"use strict";function n(){return(n=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}r.d(t,{Z:function(){return n}})},219:function(e,t,r){"use strict";function n(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}r.d(t,{Z:function(){return n}})}},function(e){e.O(0,[774,888,179],(function(){return t=6719,e(e.s=t);var t}));var t=e.O();_N_E=t}]);