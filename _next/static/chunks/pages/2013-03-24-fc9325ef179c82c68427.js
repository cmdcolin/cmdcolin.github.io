(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[2918],{3905:function(e,n,t){"use strict";t.d(n,{kt:function(){return p}});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=a.createContext({}),c=function(e){var n=a.useContext(l),t=n;return e&&(t="function"===typeof e?e(n):i(i({},n),e)),t},f={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(t),d=r,h=p["".concat(l,".").concat(d)]||p[d]||f[d]||o;return t?a.createElement(h,i(i({ref:n},u),{},{components:t})):a.createElement(h,i({ref:n},u))}));function p(e,n){var t=arguments,r=n&&n.mdxType;if("string"===typeof e||r){var o=t.length,i=new Array(o);i[0]=u;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"===typeof e?e:r,i[1]=s;for(var c=2;c<o;c++)i[c]=t[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},4995:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return r}});var a=t(5893);function r(e){var n=e.children;return(0,a.jsxs)("div",{children:[(0,a.jsx)("a",{href:"/",children:"Return home"}),(0,a.jsx)("div",{style:{margin:"0 auto",width:"75%"},children:n})]})}},4405:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return f}});var a=t(159),r=t(219),o=(t(7294),t(3905)),i=t(4995),s=["components"],l={},c=function(e){var n=e.children;return(0,o.kt)(i.default,null,n)};function f(e){var n=e.components,t=(0,r.Z)(e,s);return(0,o.kt)(c,(0,a.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",null,"Comparison of ChIP-seq data"),(0,o.kt)("p",null,"In my last post, we looked at how normalization can be used for\nanalyzing high throughput sequencing data. I am interested now in how to\nidentify differences across conditions."),(0,o.kt)("p",null,"To compare the ChIP-seq data from different experiments, we looked at\nthe yeast data from ","[","3","]",". To start, the reads overlapping each genome\nposition are binned into windows (spacing=10) using wiggle files in MACS\n","[","1","]",". Then MACS identifies peaks in the data, identifying potential\ntranscription factor binding sites, and we found overlapping and\nnon-overlapping (unique) peaks using bedtools ","[","2","]","."),(0,o.kt)("p",null,"When we compared biological replicate experiments of S96 yeast strain,\nwe see that most of the differences (unique peaks) are near y=x showing\nthat they are not significantly different from each other (Figure 1)"),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://64.media.tumblr.com/99914156f6f168f257e3b8a92d4654a1/52cfb33ae67369fa-df/s540x810/e7b2689282c31c34ca1bcd957d1985712ff86c28.png",alt:null})),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://64.media.tumblr.com/7c46f9cd5a8a2e95f117d8a3a633651a/52cfb33ae67369fa-2f/s540x810/5a5aa348ca34346159e2250f735a5b17909c339a.png",alt:null})),(0,o.kt)("p",null,"Figure 1. Comparison of S96 replicates shows high correlation (rho","~","0.9)\nand the peaks that are marked unique are clustered around the line of\nequality. The log2 plot does not show large differences either."),(0,o.kt)("p",null,"We can also use this same technique to show how the two different\nstrains compare by using the same procedure. In this case, we compared\nS96 and HS959 strains and found noticeable differences in the peaks that\nare called unique. The raw data shows large differences between the\npeaks that are called unique in each dataset. Looking at the\nlog-transform shows that most of these positions have fold-change\ndifferences greater than 2."),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://64.media.tumblr.com/8ac2909e501554b13f8407cc53ad7129/52cfb33ae67369fa-79/s540x810/3a14e861792cc9647fbbd2b936029100ea08cc44.png",alt:null})),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://64.media.tumblr.com/2db595fe53e2f9f70260a3ac90c6424f/52cfb33ae67369fa-b4/s540x810/38358a3b1f0a1acfab635625521a6095a9bb75b9.png",alt:null})),(0,o.kt)("p",null,"\\"),(0,o.kt)("p",null,"Figure 2. Comparison of the S96 and HS959 genomes. (Left) The raw read\nscores shows that the unique peaks have significantly different\ngroupings between each strain (Right) Log-transform shows large\nfold-change differences exist amongst the peaks called unique"),(0,o.kt)("p",null,'The comparison of the raw read scores is convincing that some of the\npeaks are differentiated but it is also clear from comparing some\nexperiments that the read depth is not equal which results in the\n"banana shape" (Figure 2). We explored several options for normalizing\nthe data including background subtraction, scaling, background\nsubtraction and scaling, and normalized difference (NormDiff) ',"[","3","]",". I\nwill include these in a new post..."),(0,o.kt)("p",null,"To process the data, plyr (R package) was used to fit a neat design\npattern called split-apply-combine. In this case I split data across\nfactors (chromosome) and apply functions (selections), and then results\nare combine automatically back into one table. This cut some of the fat\noff of my old overweight code!"),(0,o.kt)("p",null,"[","1","]"," Zhang et al. Model-based Analysis of ChIP-Seq (MACS). Genome Biol\n(2008) vol. 9 (9) pp. R137"),(0,o.kt)("p",null,"[","2","]"," Quinlan AR and Hall IM, 2010. BEDTools: a flexible suite of\nutilities for comparing genomic features. Bioinformatics. 26, 6, pp.\n841--842."),(0,o.kt)("p",null,"[","3","]"," Zheng et al. 2010 Genetic analysis of variation in transcription\nfactor binding in yeast"),(0,o.kt)("p",null,"additionally R packages plyr, stringr, and RColorBrewer were used to\nanalyze this data"),(0,o.kt)("p",null,"::: {#footer}\n","[ March 24th, 2013 1:28am ]","{#timestamp} ","[chip-seq]","{.tag} ","[graphs]","{.tag}\n","[bioinformatics]","{.tag}\n:::"))}f.isMDXComponent=!0},8708:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/2013-03-24",function(){return t(4405)}])},159:function(e,n,t){"use strict";function a(){return(a=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e}).apply(this,arguments)}t.d(n,{Z:function(){return a}})},219:function(e,n,t){"use strict";function a(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}t.d(n,{Z:function(){return a}})}},function(e){e.O(0,[9774,2888,179],(function(){return n=8708,e(e.s=n);var n}));var n=e.O();_N_E=n}]);