(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[7393],{3905:function(e,t,n){"use strict";n.d(t,{kt:function(){return h}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"===typeof e?e(t):i(i({},t),e)),n},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),h=u(n),d=o,m=h["".concat(l,".").concat(d)]||h[d]||p[d]||a;return n?r.createElement(m,i(i({ref:t},c),{},{components:n})):r.createElement(m,i({ref:t},c))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"===typeof e||o){var a=n.length,i=new Array(a);i[0]=c;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"===typeof e?e:o,i[1]=s;for(var u=2;u<a;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},4995:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return o}});var r=n(5893);function o(e){var t=e.children;return(0,r.jsxs)("div",{children:[(0,r.jsx)("a",{href:"/",children:"Return home"}),(0,r.jsx)("div",{style:{margin:"0 auto",width:"75%"},children:t})]})}},6529:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return p}});var r=n(159),o=n(219),a=(n(7294),n(3905)),i=n(4995),s=["components"],l={},u=function(e){var t=e.children;return(0,a.kt)(i.default,null,t)};function p(e){var t=e.components,n=(0,o.Z)(e,s);return(0,a.kt)(u,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",null,"Making PDFs from Markdown on Readthedocs.org using sphinx"),(0,a.kt)("p",null,"Readthedocs.org (RTD) is a great service to build a centralized resource\nfor your documentation. It works really well for programmers since you\ncan just push new documentation to your git repository and your\nreadthedocs.org webpage will be updated. On readthedocs, there are\nessentially two parsers: mkdocs and sphinx, and it is generally pretty\neasy to configure your Markdown builds with Mkdocs (not covered here),\nbut unfortunately, Mkdocs isn't able to generate a PDF of your\ndocumentation. Not to fear though, you can actually configure the sphinx\nbuild system to parse your markdown to build PDFs. The caveat is that\nnormally sphinx is not used for parsing markdown (it is used commonly\nfor reStructuredText), but with a little extra work, we can configure\nsphinx to parse Markdown."),(0,a.kt)("p",null,"When I realized that we could really use a nice PDF guide, I started\nconverting our documentation to RST since it would work with sphinx\nbetter, but then I saw this tweet talking about using Markdown with\nSphinx:"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Would you benefit from Markdown being available as a Sphinx input\nlanguage? ",(0,a.kt)("a",{parentName:"p",href:"http://t.co/XH0byxyV4Y"},"http://t.co/XH0byxyV4Y"),"\n",(0,a.kt)("a",{parentName:"p",href:"https://twitter.com/hashtag/scipy2015?src=hash"},"#scipy2015"),"\n",(0,a.kt)("a",{parentName:"p",href:"https://twitter.com/hashtag/sphinx?src=hash"},"#sphinx"),"\n",(0,a.kt)("a",{parentName:"p",href:"https://twitter.com/hashtag/markdown?src=hash"},"#markdown"),"\n",(0,a.kt)("a",{parentName:"p",href:"https://twitter.com/hashtag/python?src=hash"},"#python")),(0,a.kt)("div",null,(0,a.kt)("p",{parentName:"blockquote"},"--- Michael Aye (@michaelaye)")),(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("a",{parentName:"p",href:"https://twitter.com/michaelaye/status/621053125818908673"},"July 14,\n2015"))),(0,a.kt)("p",null,"I responded that this would be awesome, but Eric Holscher pointed out\nthat there is already some support for this, citing this repo\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/ericholscher/sphinx-markdown-test/"},"https://github.com/ericholscher/sphinx-markdown-test/"),"."),(0,a.kt)("p",null,"So, very interested to test this out, I converted our existing docs to\nparse Markdown and build awesome PDF and web-based docs on\nreadthedocs.org automatically."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Step one:")),(0,a.kt)("p",null,"On your local machine ",(0,a.kt)("inlineCode",{parentName:"p"},"pip install sphinx")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Step two:")),(0,a.kt)("p",null,"Run ",(0,a.kt)("inlineCode",{parentName:"p"},"sphinx-quickstart"),", probably in your docs directory"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Step three:")),(0,a.kt)("p",null,"Follow sphinx-quickstart's guide. You can basically follow the defaults,\nit is not too complicated. None of the options will really have any\nbearing on your success :) The output directories don't matter either.\nAfter completion, a conf.py and Makefile will typically be outputted.\nOnly the conf.py is needed by readthedocs.org. Readthedocs will scan the\nwhole repo for the conf.py file apparently, but I normally run the\nsphinx-quickstart in the docs subdirectory."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Step four:")),(0,a.kt)("p",null,"At the bottom of conf.py, add this:"),(0,a.kt)("blockquote",null,(0,a.kt)("h1",{parentName:"blockquote"},"The suffix of source filenames."),(0,a.kt)("p",{parentName:"blockquote"},"from recommonmark.parser import CommonMarkParser"),(0,a.kt)("h1",{parentName:"blockquote"},"The suffix of source filenames."),(0,a.kt)("p",{parentName:"blockquote"},"source_suffix = ","['.rst', '.md']"),(0,a.kt)("p",{parentName:"blockquote"},"source_parsers = {\n\xa0 \xa0'.md': CommonMarkParser,\n}")),(0,a.kt)("p",null,"This will enable the markdown parser for sphinx"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Step five:")),(0,a.kt)("p",null,"Replace your normal index.md with an index.rst. Having an index.rst will\nallow you to create a table of contents guide. I am not 100% sure that\nthis needs the RST, maybe the toctree can be made in Markdown too, but\nthis is a small compromise for having the rest of the docs in Markdown.\nFor our index.rst, it simply looks like this:"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Contents:"),(0,a.kt)("p",{parentName:"blockquote"},".. toctree::\n\xa0 :maxdepth: 2\n\xa0 :glob:"),(0,a.kt)("p",{parentName:"blockquote"},"\xa0 *")),(0,a.kt)("p",null,"Note: I think sphinx requires ",(0,a.kt)("em",{parentName:"p"},"three spaces")," for indentation. Besides\nthat, you can just use a wildcard (*) or use a list the filenames\n(without extension, both rst and md extension removed) in the toc list"),(0,a.kt)("p",null,"Now if you are following along, your docs directory might look like\nthis:"),(0,a.kt)("p",null,"docs/Prerequisites.md\ndocs/QuickStart.md\ndocs/Configure.md\n...\ndocs/index.rst\ndocs/conf.py"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Step six:")),(0,a.kt)("p",null,"Go to your admin tab on readthedocs.org and enable the sphinx builds.\nThis step frustrated me a lot because I had manually set builds to use\nMkdocs, which meant that the Sphinx/PDF builds wouldn't work. If your\nPDF builds are not working at all, make sure to check this step! The\nSphinx HTML option will also build PDFs."),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"../../media/125486358368_0.png",alt:null})),(0,a.kt)("p",null,"Figure 1: That moment when I finally figured out how to enable Sphinx\nbuilds on readthedocs...go to the admin panel for your project. After\nthis, sphinx and PDF auto building will be enabled."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Step seven:")),(0,a.kt)("p",null,"After step six, your PDFs should have already started building\nautomatically ",(0,a.kt)("em",{parentName:"p"},"cross fingers"),"!"),(0,a.kt)("p",null,'You will see whether your PDFs are building in the "Builds" tab of your\nproject'),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"../../media/125486358368_1.png",alt:null})),(0,a.kt)("p",null,"Then your pdf will be accessible at this semi-secret\nURL:\xa0",(0,a.kt)("a",{parentName:"p",href:"https://media.readthedocs.org/pdf/yourproject/latest/yourproject.pdf"},"https://media.readthedocs.org/pdf/yourproject/latest/yourproject.pdf")),(0,a.kt)("p",null,'The "latest" element of the URL can also be a specific tag or branch\nname that is building.'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Step eight:")),(0,a.kt)("p",null,"Rejoice!"),(0,a.kt)("p",null,"Other things to consider:"),(0,a.kt)("p",null,"1) The initial example was Eric Holscher's\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/ericholscher/sphinx-markdown-test/"},"https://github.com/ericholscher/sphinx-markdown-test/")," which has an\nexample PDF here\n",(0,a.kt)("a",{parentName:"p",href:"https://media.readthedocs.org/pdf/sphinx-markdown-test/latest/sphinx-markdown-test.pdf"},"https://media.readthedocs.org/pdf/sphinx-markdown-test/latest/sphinx-markdown-test.pdf")),(0,a.kt)("p",null,"2) You should review your Markdown pages and make sure to set proper\nheadings (e.g. # Header, ## Subheader). People are often kind of\nsloppy about their markdown headings, but these are used when creating\nthe table of contents for the PDF, so your will notice that your table\nof contents will look weird if your Markdown headers are inconsistent.\nIn our index.rst, we list two levels of headings (:maxdepth: 2), which\nshould capture the main title of the page and second level subsections."),(0,a.kt)("p",null,"3) You will notice that your webpage built using sphinx will not 100%\nmatch the pages built using mkdocs (indeed, they use slightly different\nHTML themes too) and some small syntax highlighting changes may occur,\netc. Hopefully it gets better over time though, and I think the PDF\nbuild is a very valuable feature here!"),(0,a.kt)("p",null,"4) There might be other alternative approaches such as using pandoc\nwith custom readthedocs build scripts to make PDFs. I haven't tested\nthis but see ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/rtfd/readthedocs.org/issues/1939"},"https://github.com/rtfd/readthedocs.org/issues/1939")," for\ntracking the issue maybe"),(0,a.kt)("p",null,"I hope this guide is helpful, but drop me a line @cmdcolin if you have\nany questions"),(0,a.kt)("p",null,"::: {#footer}\n","[ July 31st, 2015 12:04am ]","{#timestamp} ","[readthedocs]","{.tag} ","[software\nengineering]","{.tag} ","[devops]","{.tag} ","[writethedocs]","{.tag} ","[markdown]","{.tag}\n","[best practices]","{.tag}\n:::"))}p.isMDXComponent=!0},1079:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/2015-07-31",function(){return n(6529)}])},159:function(e,t,n){"use strict";function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}n.d(t,{Z:function(){return r}})},219:function(e,t,n){"use strict";function r(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}n.d(t,{Z:function(){return r}})}},function(e){e.O(0,[9774,2888,179],(function(){return t=1079,e(e.s=t);var t}));var t=e.O();_N_E=t}]);