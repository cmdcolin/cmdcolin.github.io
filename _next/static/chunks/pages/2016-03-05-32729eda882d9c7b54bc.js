(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8364],{3905:function(e,t,n){"use strict";n.d(t,{kt:function(){return p}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),u=function(e){var t=o.useContext(l),n=t;return e&&(n="function"===typeof e?e(t):i(i({},t),e)),n},h={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},c=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=u(n),d=r,m=p["".concat(l,".").concat(d)]||p[d]||h[d]||a;return n?o.createElement(m,i(i({ref:t},c),{},{components:n})):o.createElement(m,i({ref:t},c))}));function p(e,t){var n=arguments,r=t&&t.mdxType;if("string"===typeof e||r){var a=n.length,i=new Array(a);i[0]=c;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"===typeof e?e:r,i[1]=s;for(var u=2;u<a;u++)i[u]=n[u];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}c.displayName="MDXCreateElement"},4995:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return r}});var o=n(5893);function r(e){var t=e.children;return(0,o.jsxs)("div",{children:[(0,o.jsx)("a",{href:"/",children:"Return home"}),(0,o.jsx)("div",{style:{margin:"0 auto",width:"75%"},children:t})]})}},5325:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return h}});var o=n(159),r=n(219),a=(n(7294),n(3905)),i=n(4995),s=["components"],l={},u=function(e){var t=e.children;return(0,a.kt)(i.default,null,t)};function h(e){var t=e.components,n=(0,r.Z)(e,s);return(0,a.kt)(u,(0,o.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",null,"On over-reproducibility"),(0,a.kt)("p",null,"Recently, some posts were made by\n",(0,a.kt)("a",{parentName:"p",href:"https://twitter.com/arjunrajlab"},"https://twitter.com/arjunrajlab"),'\xa0about how perhaps we are aiming at\n"over-reproducibility". I think this is interesting, and would generally\nagree that not everyone needs to achieve total automation of their whole\npipeline, but I think the post does a lot of "blaming your tools" and\ndisparaging good development practices with regards to version control\nand figure generation.\xa0'),(0,a.kt)("p",null,'I think that the complaint that version control and automated figures\nare not for everyone is probably true, but it is overgeneralizing a\ndifferent problem. For example, students are not "trained" to work with\nGit, and they are not \\"trained" to do software engineering. In fact,\neven computer science students are not generally "trained" to do any of\nthose things (computer science != software engineering). But that\ndoesn\'t mean that your lab needs to forego using all those tools.\nSoftware\xa0development can be incredibly complex and sophisticated, but\nit\'s important to make sure things are\xa0"done right"! High-quality and\neasy-to-reproduce software is really about process, and engineering.\xa0But\nthat is also why there is no one-true-way for reproducibility.\xa0Maybe\nArjun doesn\'t have a reproducible workflow right now, but what about 5\nyears down the road, where he suddenly has a great framework for such\nthings? This happens all the time in software development (for example,\nhow long ago was it that "push to deploy" did not exist? how often would\nyou just edit your files live on your site? now that is seen as bad\npractice!), but that said, processes for software quality can evolve\npretty organically, so even though some best practices exist, people can\ngrow their own quality environment.'),(0,a.kt)("p",null,'Even if we agree that software development+version control=good, there\nare still a lot of complaints about it in the blogpost. For example, the\ncomplaint that git is too hard is pretty silly, and the xkcd comic about\ncalling over graph theorist doesn\'t really help. As a software developer\nat work, I think that version control simply helps define a disciplined\nway of working. Version control makes you analyze your progress,\nsummarize it as a commit message, format the code properly, make sure it\npasses tests, and then talk to your collaborators about accepting it.\nDropbox might accomplish some of those things, but I would really doubt\nthat it is covering that full scope. Arjun seems to agree with using\nversion control for some of his labs software development, so again,\nthere is a spectrum of needs being met. Nevertheless, there are some\nweird comments about whether commit messages are like a "lab notebook",\nbut hint: they are not, write documentation for your project or keep a\nseparate journal or blog or wiki. Commit messages in my opinion should\nbe about one line, and the changes should be very self explanatory. But\nanother big argument in the blogpost is whether version control\xa0works\nfor something like paper writing, and I believe that this underscores\nsomething else: that paper writing is really a pretty messy procedure.'),(0,a.kt)("p",null,'I think that perhaps the\xa0"google docs" mode of writing is probably\npretty ok for many things, but it still needs a gatekeeper to\nincorporate the comments from coauthors and reviewers into the document\nin an organized way. In my experience as a "gatekeeper"\xa0with writing my\nsenior thesis, I organized my paper using knitr, and I automated figures\nbeing generated by R wherever possible, and then I would convert the\npaper to .docx to share with my advisors. Then I would take their\ncomments on the .docx and incorporate it back into my paper. This could\nbe seen as burdensome ("why not just use google docs"), but I felt that\nit was a good way to incorporate review into a reproducible workflow.'),(0,a.kt)("p",null,"Now, my pipeline precludes your PI from having to learn git to make a\npull request on your paper. That's a good thing... and we still have\nreproducibility.\xa0\xa0But what about the figures themselves? I said I had\nknitr for reproducible figures, but what about everyone else? I think\nfigures have high value, and so people might want to have more\nreproducibility invested in them. In the blog post, it was claimed that\nmaking \"complex\" pub-quality figures was difficult\xa0(i.e. the plea for\nAdobe Illustrator), but look at the annotation functions from ggplot2,\nand multifaceted images. I found these annotation functions to be very\neasy to pick up. There is also the on-going debate about ggplot2 vs base\ngraphics on the simplystatistics blog, which covers making publication\nquality figures, and last I checked, I think the ggplot2\u2032ers were\nwinning. I don't know how it works in high profile journals like Nature,\nbecause it looks like they just re-do all the figures to make them have\nsome consistent style, but that doesn't mean your original figure should\nbe irreproducible."),(0,a.kt)("p",null,"The debate about reproducible figures is pretty tangible too in things\nlike microscopy images. Simply look at the large amount of discussion\nfrom pubpeer about image fraud and possible duplications. The pubpeer\ncommunity obviously has some pretty sophisticated tools for hunting out\npossibly manipulated microscopy images. These types of things also lead\nto investigations, and you can see in the high-profile retraction case\nover STAP cells that it looks like the investigating committee were\nsimply asking how some figures were made, and upon finding that lab\nmembers don't know, a paper was retracted. The RetractionWatch blog\ncovers\xa0these\ninvestigations\xa0",(0,a.kt)("a",{parentName:"p",href:"http://retractionwatch.com/2016/02/26/stap-stem-cell-researcher-obokata-loses-another-paper/"},"http://retractionwatch.com/2016/02/26/stap-stem-cell-researcher-obokata-loses-another-paper/")),(0,a.kt)("p",null,"You can't depend on\xa0other people to back your figure up, so you need to\ntake responsibility for making sure your papers and your work are\nreproducible (and, there is a spectrum for reproducibility, but I\nbelieve that version control is a great example of highly disciplined\nwork). I also think that just having folders on some hard drive is not a\ngood way to do things either. There is a saying in software development\nthat is\xa0\"if it's not in version control, it doesn't exist\". That's not\nto say that version control is for everything, big data obviously has\ntrouble with being stored in git. But that shouldn't block you from\ncreating reproducible analyses."),(0,a.kt)("p",null,'Another example from the over-reproducibility blogpost says that if you\nhave "analysis1\u2033 and\xa0"analysis2\u2033, then version control advocates would\ntell you to delete analysis1 and just remember that it is in your\nhistory. I think that this is just a different issue. If you actually\ncare about both analyses, just make them separate repositories, with\nbasic README.md files explaining each them, and stop worrying about it.\nHaving one repository containing too many miscellaneous scripts is\nactually an anti-pattern. Stop making repositories\ncalled\xa0"bioinfo-scripts" that just contain a mish-mash of analysis\nscripts! Make your work purpose driven and do tasks. Also, this is an\nargument against REPL tools: your R REPL history is not a reproducible\nscript. Make your code into a script that generates well defined\noutputs. Windows users: you might not understand this because the\ncommand line on windows is crippled, but you have to make things run on\nthe command line.'),(0,a.kt)("p",null,"Now I wish I could say that I live by my words, but having been involved\nin coauthoring several papers, I will just have to admit that it is\nreally a messy procedure despite my best intentions as an editor and\ncoauthor. I wish things would be better!\xa0"),(0,a.kt)("p",null,"\\"),(0,a.kt)("p",null,"On over-reproducibility: there is no such thing!\xa0There are pretty good\narguments to really automate most of a process, especially if it is done\nrepeatedly, to remove human errors, because meat-machines genuinely do\nthings wrong all the time."),(0,a.kt)("p",null,"And, as my parents would say around the dinner table:\xa0\"you can always\nhave more, but you can never have less\"...so, you're not going to get to\na point of over-reproducibility. We shouldn't cargo cult it as the only\nway to do science but it's not a bad thing to have."),(0,a.kt)("p",null,"::: {#footer}\n","[ March 5th, 2016 4:07pm ]","{#timestamp} ","[reproducibility]","{.tag}\n","[science]","{.tag} ","[bioinformatics]","{.tag}\n:::"))}h.isMDXComponent=!0},321:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/2016-03-05",function(){return n(5325)}])},159:function(e,t,n){"use strict";function o(){return(o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e}).apply(this,arguments)}n.d(t,{Z:function(){return o}})},219:function(e,t,n){"use strict";function o(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}n.d(t,{Z:function(){return o}})}},function(e){e.O(0,[9774,2888,179],(function(){return t=321,e(e.s=t);var t}));var t=e.O();_N_E=t}]);