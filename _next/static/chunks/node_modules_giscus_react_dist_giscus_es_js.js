"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["node_modules_giscus_react_dist_giscus_es_js"],{

/***/ "./node_modules/@giscus/react/dist/giscus.es.js":
/*!******************************************************!*\
  !*** ./node_modules/@giscus/react/dist/giscus.es.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"GiscusWidget\": function() { return /* binding */ GiscusWidget; }\n/* harmony export */ });\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a2, b2) => {\n  for (var prop in b2 || (b2 = {}))\n    if (__hasOwnProp.call(b2, prop))\n      __defNormalProp(a2, prop, b2[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b2)) {\n      if (__propIsEnum.call(b2, prop))\n        __defNormalProp(a2, prop, b2[prop]);\n    }\n  return a2;\n};\nvar __spreadProps = (a2, b2) => __defProps(a2, __getOwnPropDescs(b2));\n/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst t$2 = window.ShadowRoot && (window.ShadyCSS === void 0 || window.ShadyCSS.nativeShadow) && \"adoptedStyleSheets\" in Document.prototype && \"replace\" in CSSStyleSheet.prototype, e$6 = Symbol(), n$7 = /* @__PURE__ */ new Map();\nclass s$3 {\n  constructor(t2, n2) {\n    if (this._$cssResult$ = true, n2 !== e$6)\n      throw Error(\"CSSResult is not constructable. Use `unsafeCSS` or `css` instead.\");\n    this.cssText = t2;\n  }\n  get styleSheet() {\n    let e2 = n$7.get(this.cssText);\n    return t$2 && e2 === void 0 && (n$7.set(this.cssText, e2 = new CSSStyleSheet()), e2.replaceSync(this.cssText)), e2;\n  }\n  toString() {\n    return this.cssText;\n  }\n}\nconst o$5 = (t2) => new s$3(typeof t2 == \"string\" ? t2 : t2 + \"\", e$6), r$4 = (t2, ...n2) => {\n  const o2 = t2.length === 1 ? t2[0] : n2.reduce((e2, n3, s2) => e2 + ((t3) => {\n    if (t3._$cssResult$ === true)\n      return t3.cssText;\n    if (typeof t3 == \"number\")\n      return t3;\n    throw Error(\"Value passed to 'css' function must be a 'css' function result: \" + t3 + \". Use 'unsafeCSS' to pass non-literal values, but take care to ensure page security.\");\n  })(n3) + t2[s2 + 1], t2[0]);\n  return new s$3(o2, e$6);\n}, i$3 = (e2, n2) => {\n  t$2 ? e2.adoptedStyleSheets = n2.map((t2) => t2 instanceof CSSStyleSheet ? t2 : t2.styleSheet) : n2.forEach((t2) => {\n    const n3 = document.createElement(\"style\"), s2 = window.litNonce;\n    s2 !== void 0 && n3.setAttribute(\"nonce\", s2), n3.textContent = t2.cssText, e2.appendChild(n3);\n  });\n}, S$1 = t$2 ? (t2) => t2 : (t2) => t2 instanceof CSSStyleSheet ? ((t3) => {\n  let e2 = \"\";\n  for (const n2 of t3.cssRules)\n    e2 += n2.cssText;\n  return o$5(e2);\n})(t2) : t2;\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nvar s$2;\nconst e$5 = window.trustedTypes, r$3 = e$5 ? e$5.emptyScript : \"\", h$3 = window.reactiveElementPolyfillSupport, o$4 = { toAttribute(t2, i2) {\n  switch (i2) {\n    case Boolean:\n      t2 = t2 ? r$3 : null;\n      break;\n    case Object:\n    case Array:\n      t2 = t2 == null ? t2 : JSON.stringify(t2);\n  }\n  return t2;\n}, fromAttribute(t2, i2) {\n  let s2 = t2;\n  switch (i2) {\n    case Boolean:\n      s2 = t2 !== null;\n      break;\n    case Number:\n      s2 = t2 === null ? null : Number(t2);\n      break;\n    case Object:\n    case Array:\n      try {\n        s2 = JSON.parse(t2);\n      } catch (t3) {\n        s2 = null;\n      }\n  }\n  return s2;\n} }, n$6 = (t2, i2) => i2 !== t2 && (i2 == i2 || t2 == t2), l$3 = { attribute: true, type: String, converter: o$4, reflect: false, hasChanged: n$6 };\nclass a$1 extends HTMLElement {\n  constructor() {\n    super(), this._$Et = /* @__PURE__ */ new Map(), this.isUpdatePending = false, this.hasUpdated = false, this._$Ei = null, this.o();\n  }\n  static addInitializer(t2) {\n    var i2;\n    (i2 = this.l) !== null && i2 !== void 0 || (this.l = []), this.l.push(t2);\n  }\n  static get observedAttributes() {\n    this.finalize();\n    const t2 = [];\n    return this.elementProperties.forEach((i2, s2) => {\n      const e2 = this._$Eh(s2, i2);\n      e2 !== void 0 && (this._$Eu.set(e2, s2), t2.push(e2));\n    }), t2;\n  }\n  static createProperty(t2, i2 = l$3) {\n    if (i2.state && (i2.attribute = false), this.finalize(), this.elementProperties.set(t2, i2), !i2.noAccessor && !this.prototype.hasOwnProperty(t2)) {\n      const s2 = typeof t2 == \"symbol\" ? Symbol() : \"__\" + t2, e2 = this.getPropertyDescriptor(t2, s2, i2);\n      e2 !== void 0 && Object.defineProperty(this.prototype, t2, e2);\n    }\n  }\n  static getPropertyDescriptor(t2, i2, s2) {\n    return { get() {\n      return this[i2];\n    }, set(e2) {\n      const r2 = this[t2];\n      this[i2] = e2, this.requestUpdate(t2, r2, s2);\n    }, configurable: true, enumerable: true };\n  }\n  static getPropertyOptions(t2) {\n    return this.elementProperties.get(t2) || l$3;\n  }\n  static finalize() {\n    if (this.hasOwnProperty(\"finalized\"))\n      return false;\n    this.finalized = true;\n    const t2 = Object.getPrototypeOf(this);\n    if (t2.finalize(), this.elementProperties = new Map(t2.elementProperties), this._$Eu = /* @__PURE__ */ new Map(), this.hasOwnProperty(\"properties\")) {\n      const t3 = this.properties, i2 = [...Object.getOwnPropertyNames(t3), ...Object.getOwnPropertySymbols(t3)];\n      for (const s2 of i2)\n        this.createProperty(s2, t3[s2]);\n    }\n    return this.elementStyles = this.finalizeStyles(this.styles), true;\n  }\n  static finalizeStyles(i2) {\n    const s2 = [];\n    if (Array.isArray(i2)) {\n      const e2 = new Set(i2.flat(1 / 0).reverse());\n      for (const i3 of e2)\n        s2.unshift(S$1(i3));\n    } else\n      i2 !== void 0 && s2.push(S$1(i2));\n    return s2;\n  }\n  static _$Eh(t2, i2) {\n    const s2 = i2.attribute;\n    return s2 === false ? void 0 : typeof s2 == \"string\" ? s2 : typeof t2 == \"string\" ? t2.toLowerCase() : void 0;\n  }\n  o() {\n    var t2;\n    this._$Ep = new Promise((t3) => this.enableUpdating = t3), this._$AL = /* @__PURE__ */ new Map(), this._$Em(), this.requestUpdate(), (t2 = this.constructor.l) === null || t2 === void 0 || t2.forEach((t3) => t3(this));\n  }\n  addController(t2) {\n    var i2, s2;\n    ((i2 = this._$Eg) !== null && i2 !== void 0 ? i2 : this._$Eg = []).push(t2), this.renderRoot !== void 0 && this.isConnected && ((s2 = t2.hostConnected) === null || s2 === void 0 || s2.call(t2));\n  }\n  removeController(t2) {\n    var i2;\n    (i2 = this._$Eg) === null || i2 === void 0 || i2.splice(this._$Eg.indexOf(t2) >>> 0, 1);\n  }\n  _$Em() {\n    this.constructor.elementProperties.forEach((t2, i2) => {\n      this.hasOwnProperty(i2) && (this._$Et.set(i2, this[i2]), delete this[i2]);\n    });\n  }\n  createRenderRoot() {\n    var t2;\n    const s2 = (t2 = this.shadowRoot) !== null && t2 !== void 0 ? t2 : this.attachShadow(this.constructor.shadowRootOptions);\n    return i$3(s2, this.constructor.elementStyles), s2;\n  }\n  connectedCallback() {\n    var t2;\n    this.renderRoot === void 0 && (this.renderRoot = this.createRenderRoot()), this.enableUpdating(true), (t2 = this._$Eg) === null || t2 === void 0 || t2.forEach((t3) => {\n      var i2;\n      return (i2 = t3.hostConnected) === null || i2 === void 0 ? void 0 : i2.call(t3);\n    });\n  }\n  enableUpdating(t2) {\n  }\n  disconnectedCallback() {\n    var t2;\n    (t2 = this._$Eg) === null || t2 === void 0 || t2.forEach((t3) => {\n      var i2;\n      return (i2 = t3.hostDisconnected) === null || i2 === void 0 ? void 0 : i2.call(t3);\n    });\n  }\n  attributeChangedCallback(t2, i2, s2) {\n    this._$AK(t2, s2);\n  }\n  _$ES(t2, i2, s2 = l$3) {\n    var e2, r2;\n    const h2 = this.constructor._$Eh(t2, s2);\n    if (h2 !== void 0 && s2.reflect === true) {\n      const n2 = ((r2 = (e2 = s2.converter) === null || e2 === void 0 ? void 0 : e2.toAttribute) !== null && r2 !== void 0 ? r2 : o$4.toAttribute)(i2, s2.type);\n      this._$Ei = t2, n2 == null ? this.removeAttribute(h2) : this.setAttribute(h2, n2), this._$Ei = null;\n    }\n  }\n  _$AK(t2, i2) {\n    var s2, e2, r2;\n    const h2 = this.constructor, n2 = h2._$Eu.get(t2);\n    if (n2 !== void 0 && this._$Ei !== n2) {\n      const t3 = h2.getPropertyOptions(n2), l2 = t3.converter, a2 = (r2 = (e2 = (s2 = l2) === null || s2 === void 0 ? void 0 : s2.fromAttribute) !== null && e2 !== void 0 ? e2 : typeof l2 == \"function\" ? l2 : null) !== null && r2 !== void 0 ? r2 : o$4.fromAttribute;\n      this._$Ei = n2, this[n2] = a2(i2, t3.type), this._$Ei = null;\n    }\n  }\n  requestUpdate(t2, i2, s2) {\n    let e2 = true;\n    t2 !== void 0 && (((s2 = s2 || this.constructor.getPropertyOptions(t2)).hasChanged || n$6)(this[t2], i2) ? (this._$AL.has(t2) || this._$AL.set(t2, i2), s2.reflect === true && this._$Ei !== t2 && (this._$EC === void 0 && (this._$EC = /* @__PURE__ */ new Map()), this._$EC.set(t2, s2))) : e2 = false), !this.isUpdatePending && e2 && (this._$Ep = this._$E_());\n  }\n  async _$E_() {\n    this.isUpdatePending = true;\n    try {\n      await this._$Ep;\n    } catch (t3) {\n      Promise.reject(t3);\n    }\n    const t2 = this.scheduleUpdate();\n    return t2 != null && await t2, !this.isUpdatePending;\n  }\n  scheduleUpdate() {\n    return this.performUpdate();\n  }\n  performUpdate() {\n    var t2;\n    if (!this.isUpdatePending)\n      return;\n    this.hasUpdated, this._$Et && (this._$Et.forEach((t3, i3) => this[i3] = t3), this._$Et = void 0);\n    let i2 = false;\n    const s2 = this._$AL;\n    try {\n      i2 = this.shouldUpdate(s2), i2 ? (this.willUpdate(s2), (t2 = this._$Eg) === null || t2 === void 0 || t2.forEach((t3) => {\n        var i3;\n        return (i3 = t3.hostUpdate) === null || i3 === void 0 ? void 0 : i3.call(t3);\n      }), this.update(s2)) : this._$EU();\n    } catch (t3) {\n      throw i2 = false, this._$EU(), t3;\n    }\n    i2 && this._$AE(s2);\n  }\n  willUpdate(t2) {\n  }\n  _$AE(t2) {\n    var i2;\n    (i2 = this._$Eg) === null || i2 === void 0 || i2.forEach((t3) => {\n      var i3;\n      return (i3 = t3.hostUpdated) === null || i3 === void 0 ? void 0 : i3.call(t3);\n    }), this.hasUpdated || (this.hasUpdated = true, this.firstUpdated(t2)), this.updated(t2);\n  }\n  _$EU() {\n    this._$AL = /* @__PURE__ */ new Map(), this.isUpdatePending = false;\n  }\n  get updateComplete() {\n    return this.getUpdateComplete();\n  }\n  getUpdateComplete() {\n    return this._$Ep;\n  }\n  shouldUpdate(t2) {\n    return true;\n  }\n  update(t2) {\n    this._$EC !== void 0 && (this._$EC.forEach((t3, i2) => this._$ES(i2, this[i2], t3)), this._$EC = void 0), this._$EU();\n  }\n  updated(t2) {\n  }\n  firstUpdated(t2) {\n  }\n}\na$1.finalized = true, a$1.elementProperties = /* @__PURE__ */ new Map(), a$1.elementStyles = [], a$1.shadowRootOptions = { mode: \"open\" }, h$3 == null || h$3({ ReactiveElement: a$1 }), ((s$2 = globalThis.reactiveElementVersions) !== null && s$2 !== void 0 ? s$2 : globalThis.reactiveElementVersions = []).push(\"1.3.1\");\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nvar t$1;\nconst i$2 = globalThis.trustedTypes, s$1 = i$2 ? i$2.createPolicy(\"lit-html\", { createHTML: (t2) => t2 }) : void 0, e$4 = `lit$${(Math.random() + \"\").slice(9)}$`, o$3 = \"?\" + e$4, n$5 = `<${o$3}>`, l$2 = document, h$2 = (t2 = \"\") => l$2.createComment(t2), r$2 = (t2) => t2 === null || typeof t2 != \"object\" && typeof t2 != \"function\", d$1 = Array.isArray, u = (t2) => {\n  var i2;\n  return d$1(t2) || typeof ((i2 = t2) === null || i2 === void 0 ? void 0 : i2[Symbol.iterator]) == \"function\";\n}, c = /<(?:(!--|\\/[^a-zA-Z])|(\\/?[a-zA-Z][^>\\s]*)|(\\/?$))/g, v = /-->/g, a = />/g, f = />|[ \t\\n\f\\r](?:([^\\s\"'>=/]+)([ \t\\n\f\\r]*=[ \t\\n\f\\r]*(?:[^ \t\\n\f\\r\"'`<>=]|(\"|')|))|$)/g, _ = /'/g, m = /\"/g, g = /^(?:script|style|textarea|title)$/i, p = (t2) => (i2, ...s2) => ({ _$litType$: t2, strings: i2, values: s2 }), $ = p(1), b = Symbol.for(\"lit-noChange\"), w = Symbol.for(\"lit-nothing\"), T = /* @__PURE__ */ new WeakMap(), x = (t2, i2, s2) => {\n  var e2, o2;\n  const n2 = (e2 = s2 == null ? void 0 : s2.renderBefore) !== null && e2 !== void 0 ? e2 : i2;\n  let l2 = n2._$litPart$;\n  if (l2 === void 0) {\n    const t3 = (o2 = s2 == null ? void 0 : s2.renderBefore) !== null && o2 !== void 0 ? o2 : null;\n    n2._$litPart$ = l2 = new N(i2.insertBefore(h$2(), t3), t3, void 0, s2 != null ? s2 : {});\n  }\n  return l2._$AI(t2), l2;\n}, A = l$2.createTreeWalker(l$2, 129, null, false), C = (t2, i2) => {\n  const o2 = t2.length - 1, l2 = [];\n  let h2, r2 = i2 === 2 ? \"<svg>\" : \"\", d2 = c;\n  for (let i3 = 0; i3 < o2; i3++) {\n    const s2 = t2[i3];\n    let o3, u3, p2 = -1, $2 = 0;\n    for (; $2 < s2.length && (d2.lastIndex = $2, u3 = d2.exec(s2), u3 !== null); )\n      $2 = d2.lastIndex, d2 === c ? u3[1] === \"!--\" ? d2 = v : u3[1] !== void 0 ? d2 = a : u3[2] !== void 0 ? (g.test(u3[2]) && (h2 = RegExp(\"</\" + u3[2], \"g\")), d2 = f) : u3[3] !== void 0 && (d2 = f) : d2 === f ? u3[0] === \">\" ? (d2 = h2 != null ? h2 : c, p2 = -1) : u3[1] === void 0 ? p2 = -2 : (p2 = d2.lastIndex - u3[2].length, o3 = u3[1], d2 = u3[3] === void 0 ? f : u3[3] === '\"' ? m : _) : d2 === m || d2 === _ ? d2 = f : d2 === v || d2 === a ? d2 = c : (d2 = f, h2 = void 0);\n    const y = d2 === f && t2[i3 + 1].startsWith(\"/>\") ? \" \" : \"\";\n    r2 += d2 === c ? s2 + n$5 : p2 >= 0 ? (l2.push(o3), s2.slice(0, p2) + \"$lit$\" + s2.slice(p2) + e$4 + y) : s2 + e$4 + (p2 === -2 ? (l2.push(void 0), i3) : y);\n  }\n  const u2 = r2 + (t2[o2] || \"<?>\") + (i2 === 2 ? \"</svg>\" : \"\");\n  if (!Array.isArray(t2) || !t2.hasOwnProperty(\"raw\"))\n    throw Error(\"invalid template strings array\");\n  return [s$1 !== void 0 ? s$1.createHTML(u2) : u2, l2];\n};\nclass E {\n  constructor({ strings: t2, _$litType$: s2 }, n2) {\n    let l2;\n    this.parts = [];\n    let r2 = 0, d2 = 0;\n    const u2 = t2.length - 1, c2 = this.parts, [v2, a2] = C(t2, s2);\n    if (this.el = E.createElement(v2, n2), A.currentNode = this.el.content, s2 === 2) {\n      const t3 = this.el.content, i2 = t3.firstChild;\n      i2.remove(), t3.append(...i2.childNodes);\n    }\n    for (; (l2 = A.nextNode()) !== null && c2.length < u2; ) {\n      if (l2.nodeType === 1) {\n        if (l2.hasAttributes()) {\n          const t3 = [];\n          for (const i2 of l2.getAttributeNames())\n            if (i2.endsWith(\"$lit$\") || i2.startsWith(e$4)) {\n              const s3 = a2[d2++];\n              if (t3.push(i2), s3 !== void 0) {\n                const t4 = l2.getAttribute(s3.toLowerCase() + \"$lit$\").split(e$4), i3 = /([.?@])?(.*)/.exec(s3);\n                c2.push({ type: 1, index: r2, name: i3[2], strings: t4, ctor: i3[1] === \".\" ? M : i3[1] === \"?\" ? H : i3[1] === \"@\" ? I : S });\n              } else\n                c2.push({ type: 6, index: r2 });\n            }\n          for (const i2 of t3)\n            l2.removeAttribute(i2);\n        }\n        if (g.test(l2.tagName)) {\n          const t3 = l2.textContent.split(e$4), s3 = t3.length - 1;\n          if (s3 > 0) {\n            l2.textContent = i$2 ? i$2.emptyScript : \"\";\n            for (let i2 = 0; i2 < s3; i2++)\n              l2.append(t3[i2], h$2()), A.nextNode(), c2.push({ type: 2, index: ++r2 });\n            l2.append(t3[s3], h$2());\n          }\n        }\n      } else if (l2.nodeType === 8)\n        if (l2.data === o$3)\n          c2.push({ type: 2, index: r2 });\n        else {\n          let t3 = -1;\n          for (; (t3 = l2.data.indexOf(e$4, t3 + 1)) !== -1; )\n            c2.push({ type: 7, index: r2 }), t3 += e$4.length - 1;\n        }\n      r2++;\n    }\n  }\n  static createElement(t2, i2) {\n    const s2 = l$2.createElement(\"template\");\n    return s2.innerHTML = t2, s2;\n  }\n}\nfunction P(t2, i2, s2 = t2, e2) {\n  var o2, n2, l2, h2;\n  if (i2 === b)\n    return i2;\n  let d2 = e2 !== void 0 ? (o2 = s2._$Cl) === null || o2 === void 0 ? void 0 : o2[e2] : s2._$Cu;\n  const u2 = r$2(i2) ? void 0 : i2._$litDirective$;\n  return (d2 == null ? void 0 : d2.constructor) !== u2 && ((n2 = d2 == null ? void 0 : d2._$AO) === null || n2 === void 0 || n2.call(d2, false), u2 === void 0 ? d2 = void 0 : (d2 = new u2(t2), d2._$AT(t2, s2, e2)), e2 !== void 0 ? ((l2 = (h2 = s2)._$Cl) !== null && l2 !== void 0 ? l2 : h2._$Cl = [])[e2] = d2 : s2._$Cu = d2), d2 !== void 0 && (i2 = P(t2, d2._$AS(t2, i2.values), d2, e2)), i2;\n}\nclass V {\n  constructor(t2, i2) {\n    this.v = [], this._$AN = void 0, this._$AD = t2, this._$AM = i2;\n  }\n  get parentNode() {\n    return this._$AM.parentNode;\n  }\n  get _$AU() {\n    return this._$AM._$AU;\n  }\n  p(t2) {\n    var i2;\n    const { el: { content: s2 }, parts: e2 } = this._$AD, o2 = ((i2 = t2 == null ? void 0 : t2.creationScope) !== null && i2 !== void 0 ? i2 : l$2).importNode(s2, true);\n    A.currentNode = o2;\n    let n2 = A.nextNode(), h2 = 0, r2 = 0, d2 = e2[0];\n    for (; d2 !== void 0; ) {\n      if (h2 === d2.index) {\n        let i3;\n        d2.type === 2 ? i3 = new N(n2, n2.nextSibling, this, t2) : d2.type === 1 ? i3 = new d2.ctor(n2, d2.name, d2.strings, this, t2) : d2.type === 6 && (i3 = new L(n2, this, t2)), this.v.push(i3), d2 = e2[++r2];\n      }\n      h2 !== (d2 == null ? void 0 : d2.index) && (n2 = A.nextNode(), h2++);\n    }\n    return o2;\n  }\n  m(t2) {\n    let i2 = 0;\n    for (const s2 of this.v)\n      s2 !== void 0 && (s2.strings !== void 0 ? (s2._$AI(t2, s2, i2), i2 += s2.strings.length - 2) : s2._$AI(t2[i2])), i2++;\n  }\n}\nclass N {\n  constructor(t2, i2, s2, e2) {\n    var o2;\n    this.type = 2, this._$AH = w, this._$AN = void 0, this._$AA = t2, this._$AB = i2, this._$AM = s2, this.options = e2, this._$Cg = (o2 = e2 == null ? void 0 : e2.isConnected) === null || o2 === void 0 || o2;\n  }\n  get _$AU() {\n    var t2, i2;\n    return (i2 = (t2 = this._$AM) === null || t2 === void 0 ? void 0 : t2._$AU) !== null && i2 !== void 0 ? i2 : this._$Cg;\n  }\n  get parentNode() {\n    let t2 = this._$AA.parentNode;\n    const i2 = this._$AM;\n    return i2 !== void 0 && t2.nodeType === 11 && (t2 = i2.parentNode), t2;\n  }\n  get startNode() {\n    return this._$AA;\n  }\n  get endNode() {\n    return this._$AB;\n  }\n  _$AI(t2, i2 = this) {\n    t2 = P(this, t2, i2), r$2(t2) ? t2 === w || t2 == null || t2 === \"\" ? (this._$AH !== w && this._$AR(), this._$AH = w) : t2 !== this._$AH && t2 !== b && this.$(t2) : t2._$litType$ !== void 0 ? this.T(t2) : t2.nodeType !== void 0 ? this.k(t2) : u(t2) ? this.S(t2) : this.$(t2);\n  }\n  M(t2, i2 = this._$AB) {\n    return this._$AA.parentNode.insertBefore(t2, i2);\n  }\n  k(t2) {\n    this._$AH !== t2 && (this._$AR(), this._$AH = this.M(t2));\n  }\n  $(t2) {\n    this._$AH !== w && r$2(this._$AH) ? this._$AA.nextSibling.data = t2 : this.k(l$2.createTextNode(t2)), this._$AH = t2;\n  }\n  T(t2) {\n    var i2;\n    const { values: s2, _$litType$: e2 } = t2, o2 = typeof e2 == \"number\" ? this._$AC(t2) : (e2.el === void 0 && (e2.el = E.createElement(e2.h, this.options)), e2);\n    if (((i2 = this._$AH) === null || i2 === void 0 ? void 0 : i2._$AD) === o2)\n      this._$AH.m(s2);\n    else {\n      const t3 = new V(o2, this), i3 = t3.p(this.options);\n      t3.m(s2), this.k(i3), this._$AH = t3;\n    }\n  }\n  _$AC(t2) {\n    let i2 = T.get(t2.strings);\n    return i2 === void 0 && T.set(t2.strings, i2 = new E(t2)), i2;\n  }\n  S(t2) {\n    d$1(this._$AH) || (this._$AH = [], this._$AR());\n    const i2 = this._$AH;\n    let s2, e2 = 0;\n    for (const o2 of t2)\n      e2 === i2.length ? i2.push(s2 = new N(this.M(h$2()), this.M(h$2()), this, this.options)) : s2 = i2[e2], s2._$AI(o2), e2++;\n    e2 < i2.length && (this._$AR(s2 && s2._$AB.nextSibling, e2), i2.length = e2);\n  }\n  _$AR(t2 = this._$AA.nextSibling, i2) {\n    var s2;\n    for ((s2 = this._$AP) === null || s2 === void 0 || s2.call(this, false, true, i2); t2 && t2 !== this._$AB; ) {\n      const i3 = t2.nextSibling;\n      t2.remove(), t2 = i3;\n    }\n  }\n  setConnected(t2) {\n    var i2;\n    this._$AM === void 0 && (this._$Cg = t2, (i2 = this._$AP) === null || i2 === void 0 || i2.call(this, t2));\n  }\n}\nclass S {\n  constructor(t2, i2, s2, e2, o2) {\n    this.type = 1, this._$AH = w, this._$AN = void 0, this.element = t2, this.name = i2, this._$AM = e2, this.options = o2, s2.length > 2 || s2[0] !== \"\" || s2[1] !== \"\" ? (this._$AH = Array(s2.length - 1).fill(new String()), this.strings = s2) : this._$AH = w;\n  }\n  get tagName() {\n    return this.element.tagName;\n  }\n  get _$AU() {\n    return this._$AM._$AU;\n  }\n  _$AI(t2, i2 = this, s2, e2) {\n    const o2 = this.strings;\n    let n2 = false;\n    if (o2 === void 0)\n      t2 = P(this, t2, i2, 0), n2 = !r$2(t2) || t2 !== this._$AH && t2 !== b, n2 && (this._$AH = t2);\n    else {\n      const e3 = t2;\n      let l2, h2;\n      for (t2 = o2[0], l2 = 0; l2 < o2.length - 1; l2++)\n        h2 = P(this, e3[s2 + l2], i2, l2), h2 === b && (h2 = this._$AH[l2]), n2 || (n2 = !r$2(h2) || h2 !== this._$AH[l2]), h2 === w ? t2 = w : t2 !== w && (t2 += (h2 != null ? h2 : \"\") + o2[l2 + 1]), this._$AH[l2] = h2;\n    }\n    n2 && !e2 && this.C(t2);\n  }\n  C(t2) {\n    t2 === w ? this.element.removeAttribute(this.name) : this.element.setAttribute(this.name, t2 != null ? t2 : \"\");\n  }\n}\nclass M extends S {\n  constructor() {\n    super(...arguments), this.type = 3;\n  }\n  C(t2) {\n    this.element[this.name] = t2 === w ? void 0 : t2;\n  }\n}\nconst k = i$2 ? i$2.emptyScript : \"\";\nclass H extends S {\n  constructor() {\n    super(...arguments), this.type = 4;\n  }\n  C(t2) {\n    t2 && t2 !== w ? this.element.setAttribute(this.name, k) : this.element.removeAttribute(this.name);\n  }\n}\nclass I extends S {\n  constructor(t2, i2, s2, e2, o2) {\n    super(t2, i2, s2, e2, o2), this.type = 5;\n  }\n  _$AI(t2, i2 = this) {\n    var s2;\n    if ((t2 = (s2 = P(this, t2, i2, 0)) !== null && s2 !== void 0 ? s2 : w) === b)\n      return;\n    const e2 = this._$AH, o2 = t2 === w && e2 !== w || t2.capture !== e2.capture || t2.once !== e2.once || t2.passive !== e2.passive, n2 = t2 !== w && (e2 === w || o2);\n    o2 && this.element.removeEventListener(this.name, this, e2), n2 && this.element.addEventListener(this.name, this, t2), this._$AH = t2;\n  }\n  handleEvent(t2) {\n    var i2, s2;\n    typeof this._$AH == \"function\" ? this._$AH.call((s2 = (i2 = this.options) === null || i2 === void 0 ? void 0 : i2.host) !== null && s2 !== void 0 ? s2 : this.element, t2) : this._$AH.handleEvent(t2);\n  }\n}\nclass L {\n  constructor(t2, i2, s2) {\n    this.element = t2, this.type = 6, this._$AN = void 0, this._$AM = i2, this.options = s2;\n  }\n  get _$AU() {\n    return this._$AM._$AU;\n  }\n  _$AI(t2) {\n    P(this, t2);\n  }\n}\nconst z = window.litHtmlPolyfillSupport;\nz == null || z(E, N), ((t$1 = globalThis.litHtmlVersions) !== null && t$1 !== void 0 ? t$1 : globalThis.litHtmlVersions = []).push(\"2.2.2\");\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nvar l$1, o$2;\nclass s extends a$1 {\n  constructor() {\n    super(...arguments), this.renderOptions = { host: this }, this._$Dt = void 0;\n  }\n  createRenderRoot() {\n    var t2, e2;\n    const i2 = super.createRenderRoot();\n    return (t2 = (e2 = this.renderOptions).renderBefore) !== null && t2 !== void 0 || (e2.renderBefore = i2.firstChild), i2;\n  }\n  update(t2) {\n    const i2 = this.render();\n    this.hasUpdated || (this.renderOptions.isConnected = this.isConnected), super.update(t2), this._$Dt = x(i2, this.renderRoot, this.renderOptions);\n  }\n  connectedCallback() {\n    var t2;\n    super.connectedCallback(), (t2 = this._$Dt) === null || t2 === void 0 || t2.setConnected(true);\n  }\n  disconnectedCallback() {\n    var t2;\n    super.disconnectedCallback(), (t2 = this._$Dt) === null || t2 === void 0 || t2.setConnected(false);\n  }\n  render() {\n    return b;\n  }\n}\ns.finalized = true, s._$litElement$ = true, (l$1 = globalThis.litElementHydrateSupport) === null || l$1 === void 0 || l$1.call(globalThis, { LitElement: s });\nconst n$4 = globalThis.litElementPolyfillSupport;\nn$4 == null || n$4({ LitElement: s });\n((o$2 = globalThis.litElementVersions) !== null && o$2 !== void 0 ? o$2 : globalThis.litElementVersions = []).push(\"3.2.0\");\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst n$3 = (n2) => (e2) => typeof e2 == \"function\" ? ((n3, e3) => (window.customElements.define(n3, e3), e3))(n2, e2) : ((n3, e3) => {\n  const { kind: t2, elements: i2 } = e3;\n  return { kind: t2, elements: i2, finisher(e4) {\n    window.customElements.define(n3, e4);\n  } };\n})(n2, e2);\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst i$1 = (i2, e2) => e2.kind === \"method\" && e2.descriptor && !(\"value\" in e2.descriptor) ? __spreadProps(__spreadValues({}, e2), { finisher(n2) {\n  n2.createProperty(e2.key, i2);\n} }) : { kind: \"field\", key: Symbol(), placement: \"own\", descriptor: {}, originalKey: e2.key, initializer() {\n  typeof e2.initializer == \"function\" && (this[e2.key] = e2.initializer.call(this));\n}, finisher(n2) {\n  n2.createProperty(e2.key, i2);\n} };\nfunction e$3(e2) {\n  return (n2, t2) => t2 !== void 0 ? ((i2, e3, n3) => {\n    e3.constructor.createProperty(n3, i2);\n  })(e2, n2, t2) : i$1(e2, n2);\n}\n/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nvar n$2;\n((n$2 = window.HTMLSlotElement) === null || n$2 === void 0 ? void 0 : n$2.prototype.assignedElements) != null ? (o2, n2) => o2.assignedElements(n2) : (o2, n2) => o2.assignedNodes(n2).filter((o3) => o3.nodeType === Node.ELEMENT_NODE);\n/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst r$1 = (o2) => o2.strings === void 0;\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst t = { ATTRIBUTE: 1, CHILD: 2, PROPERTY: 3, BOOLEAN_ATTRIBUTE: 4, EVENT: 5, ELEMENT: 6 }, e$2 = (t2) => (...e2) => ({ _$litDirective$: t2, values: e2 });\nclass i {\n  constructor(t2) {\n  }\n  get _$AU() {\n    return this._$AM._$AU;\n  }\n  _$AT(t2, e2, i2) {\n    this._$Ct = t2, this._$AM = e2, this._$Ci = i2;\n  }\n  _$AS(t2, e2) {\n    return this.update(t2, e2);\n  }\n  update(t2, e2) {\n    return this.render(...e2);\n  }\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst e$1 = (i2, t2) => {\n  var s2, o2;\n  const n2 = i2._$AN;\n  if (n2 === void 0)\n    return false;\n  for (const i3 of n2)\n    (o2 = (s2 = i3)._$AO) === null || o2 === void 0 || o2.call(s2, t2, false), e$1(i3, t2);\n  return true;\n}, o$1 = (i2) => {\n  let t2, s2;\n  do {\n    if ((t2 = i2._$AM) === void 0)\n      break;\n    s2 = t2._$AN, s2.delete(i2), i2 = t2;\n  } while ((s2 == null ? void 0 : s2.size) === 0);\n}, n$1 = (i2) => {\n  for (let t2; t2 = i2._$AM; i2 = t2) {\n    let s2 = t2._$AN;\n    if (s2 === void 0)\n      t2._$AN = s2 = /* @__PURE__ */ new Set();\n    else if (s2.has(i2))\n      break;\n    s2.add(i2), l(t2);\n  }\n};\nfunction r(i2) {\n  this._$AN !== void 0 ? (o$1(this), this._$AM = i2, n$1(this)) : this._$AM = i2;\n}\nfunction h$1(i2, t2 = false, s2 = 0) {\n  const n2 = this._$AH, r2 = this._$AN;\n  if (r2 !== void 0 && r2.size !== 0)\n    if (t2)\n      if (Array.isArray(n2))\n        for (let i3 = s2; i3 < n2.length; i3++)\n          e$1(n2[i3], false), o$1(n2[i3]);\n      else\n        n2 != null && (e$1(n2, false), o$1(n2));\n    else\n      e$1(this, i2);\n}\nconst l = (i2) => {\n  var t$12, e2, o2, n2;\n  i2.type == t.CHILD && ((t$12 = (o2 = i2)._$AP) !== null && t$12 !== void 0 || (o2._$AP = h$1), (e2 = (n2 = i2)._$AQ) !== null && e2 !== void 0 || (n2._$AQ = r));\n};\nclass d extends i {\n  constructor() {\n    super(...arguments), this._$AN = void 0;\n  }\n  _$AT(i2, t2, s2) {\n    super._$AT(i2, t2, s2), n$1(this), this.isConnected = i2._$AU;\n  }\n  _$AO(i2, t2 = true) {\n    var s2, n2;\n    i2 !== this.isConnected && (this.isConnected = i2, i2 ? (s2 = this.reconnected) === null || s2 === void 0 || s2.call(this) : (n2 = this.disconnected) === null || n2 === void 0 || n2.call(this)), t2 && (e$1(this, i2), o$1(this));\n  }\n  setValue(t2) {\n    if (r$1(this._$Ct))\n      this._$Ct._$AI(t2, this);\n    else {\n      const i2 = [...this._$Ct._$AH];\n      i2[this._$Ci] = t2, this._$Ct._$AI(i2, this, 0);\n    }\n  }\n  disconnected() {\n  }\n  reconnected() {\n  }\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst e = () => new o();\nclass o {\n}\nconst h = /* @__PURE__ */ new WeakMap(), n = e$2(class extends d {\n  render(t2) {\n    return w;\n  }\n  update(t2, [s2]) {\n    var e2;\n    const o2 = s2 !== this.U;\n    return o2 && this.U !== void 0 && this.ot(void 0), (o2 || this.rt !== this.lt) && (this.U = s2, this.ht = (e2 = t2.options) === null || e2 === void 0 ? void 0 : e2.host, this.ot(this.lt = t2.element)), w;\n  }\n  ot(i2) {\n    var t2;\n    if (typeof this.U == \"function\") {\n      const s2 = (t2 = this.ht) !== null && t2 !== void 0 ? t2 : globalThis;\n      let e2 = h.get(s2);\n      e2 === void 0 && (e2 = /* @__PURE__ */ new WeakMap(), h.set(s2, e2)), e2.get(this.U) !== void 0 && this.U.call(this.ht, void 0), e2.set(this.U, i2), i2 !== void 0 && this.U.call(this.ht, i2);\n    } else\n      this.U.value = i2;\n  }\n  get rt() {\n    var i2, t2, s2;\n    return typeof this.U == \"function\" ? (t2 = h.get((i2 = this.ht) !== null && i2 !== void 0 ? i2 : globalThis)) === null || t2 === void 0 ? void 0 : t2.get(this.U) : (s2 = this.U) === null || s2 === void 0 ? void 0 : s2.value;\n  }\n  disconnected() {\n    this.rt === this.lt && this.ot(void 0);\n  }\n  reconnected() {\n    this.ot(this.lt);\n  }\n});\nvar __defProp2 = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i2 = decorators.length - 1, decorator; i2 >= 0; i2--)\n    if (decorator = decorators[i2])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result)\n    __defProp2(target, key, result);\n  return result;\n};\nlet GiscusWidget = class extends s {\n  constructor() {\n    super();\n    this.GISCUS_SESSION_KEY = \"giscus-session\";\n    this.GISCUS_ORIGIN = \"https://giscus.app\";\n    this.ERROR_SUGGESTION = `Please consider reporting this error at https://github.com/giscus/giscus/issues/new.`;\n    this.__session = \"\";\n    this._iframeRef = e();\n    this.messageEventHandler = this.handleMessageEvent.bind(this);\n    this.reactionsEnabled = \"1\";\n    this.emitMetadata = \"0\";\n    this.inputPosition = \"bottom\";\n    this.theme = \"light\";\n    this.lang = \"en\";\n    this.loading = \"eager\";\n    this.setupSession();\n    window.addEventListener(\"message\", this.messageEventHandler);\n  }\n  get iframeRef() {\n    return this._iframeRef.value;\n  }\n  connectedCallback() {\n    super.connectedCallback();\n  }\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    window.removeEventListener(\"message\", this.messageEventHandler);\n  }\n  _formatError(message) {\n    return `[giscus] An error occurred. Error message: \"${message}\".`;\n  }\n  setupSession() {\n    const origin = location.href;\n    const url = new URL(origin);\n    const savedSession = localStorage.getItem(this.GISCUS_SESSION_KEY);\n    const urlSession = url.searchParams.get(\"giscus\") || \"\";\n    if (urlSession) {\n      localStorage.setItem(this.GISCUS_SESSION_KEY, JSON.stringify(urlSession));\n      this.__session = urlSession;\n      url.searchParams.delete(\"giscus\");\n      history.replaceState(void 0, document.title, url.toString());\n      return;\n    }\n    if (savedSession) {\n      try {\n        this.__session = JSON.parse(savedSession || \"\") || \"\";\n      } catch (e2) {\n        this.__session = \"\";\n        localStorage.removeItem(this.GISCUS_SESSION_KEY);\n        console.warn(`${this._formatError(e2 == null ? void 0 : e2.message)} Session has been cleared.`);\n      }\n    }\n  }\n  handleMessageEvent(event) {\n    if (event.origin !== this.GISCUS_ORIGIN)\n      return;\n    const { data } = event;\n    if (!(typeof data === \"object\" && data.giscus))\n      return;\n    if (this.iframeRef && data.giscus.resizeHeight) {\n      this.iframeRef.style.height = `${data.giscus.resizeHeight}px`;\n    }\n    if (!data.giscus.error)\n      return;\n    const message = data.giscus.error;\n    if (message.includes(\"Bad credentials\") || message.includes(\"Invalid state value\")) {\n      if (localStorage.getItem(this.GISCUS_SESSION_KEY) !== null) {\n        localStorage.removeItem(this.GISCUS_SESSION_KEY);\n        this.__session = \"\";\n        console.warn(`${this._formatError(message)} Session has been cleared.`);\n        this.update(/* @__PURE__ */ new Map());\n        return;\n      }\n      console.error(`${this._formatError(message)} No session is stored initially. ${this.ERROR_SUGGESTION}`);\n    }\n    if (message.includes(\"Discussion not found\")) {\n      console.warn(`[giscus] ${message}. A new discussion will be created if a comment/reaction is submitted.`);\n      return;\n    }\n    console.error(`${this._formatError(message)} ${this.ERROR_SUGGESTION}`);\n  }\n  sendMessage(message) {\n    var _a, _b;\n    (_b = (_a = this.iframeRef) == null ? void 0 : _a.contentWindow) == null ? void 0 : _b.postMessage({ giscus: message }, this.GISCUS_ORIGIN);\n  }\n  updateConfig() {\n    const setConfig = {\n      setConfig: {\n        repo: this.repo,\n        repoId: this.repoId,\n        category: this.category,\n        categoryId: this.categoryId,\n        term: this.getTerm(),\n        number: +this.getNumber(),\n        reactionsEnabled: this.reactionsEnabled === \"1\",\n        emitMetadata: this.emitMetadata === \"1\",\n        inputPosition: this.inputPosition,\n        theme: this.theme,\n        lang: this.lang\n      }\n    };\n    this.sendMessage(setConfig);\n  }\n  requestUpdate(name, oldValue, options) {\n    if (!this.hasUpdated) {\n      super.requestUpdate(name, oldValue, options);\n      return;\n    }\n    this.updateConfig();\n  }\n  _getOgMetaContent(property2) {\n    const element = document.querySelector(`meta[property='og:${property2}'],meta[name='${property2}']`);\n    return element ? element.content : \"\";\n  }\n  _getCleanedUrl() {\n    const url = new URL(location.href);\n    url.searchParams.delete(\"giscus\");\n    return url;\n  }\n  getTerm() {\n    switch (this.mapping) {\n      case \"url\":\n        return `${this._getCleanedUrl()}`;\n      case \"title\":\n        return document.title;\n      case \"og:title\":\n        return this._getOgMetaContent(\"title\");\n      case \"specific\":\n        return this.term || \"\";\n      case \"number\":\n        return \"\";\n      case \"pathname\":\n      default:\n        return location.pathname.length < 2 ? \"index\" : location.pathname.substring(1).replace(/\\.\\w+$/, \"\");\n    }\n  }\n  getNumber() {\n    return this.mapping === \"number\" && this.term || \"\";\n  }\n  getIframeSrc() {\n    const url = this._getCleanedUrl();\n    const origin = `${url}${this.id ? \"#\" + this.id : \"\"}`;\n    const description = this._getOgMetaContent(\"description\");\n    const params = {\n      origin,\n      session: this.__session,\n      repo: this.repo,\n      repoId: this.repoId || \"\",\n      category: this.category || \"\",\n      categoryId: this.categoryId || \"\",\n      term: this.getTerm(),\n      number: this.getNumber(),\n      reactionsEnabled: this.reactionsEnabled,\n      emitMetadata: this.emitMetadata,\n      inputPosition: this.inputPosition,\n      theme: this.theme,\n      description\n    };\n    const locale = this.lang ? `/${this.lang}` : \"\";\n    const searchParams = new URLSearchParams(params);\n    return `${this.GISCUS_ORIGIN}${locale}/widget?${searchParams}`;\n  }\n  render() {\n    return $`\n      <iframe\n        scrolling=\"no\"\n        ${n(this._iframeRef)}\n        src=${this.getIframeSrc()}\n        loading=${this.loading}\n        part=\"iframe\"\n      ></iframe>\n    `;\n  }\n};\nGiscusWidget.styles = r$4`\n    :host,\n    iframe {\n      width: 100%;\n      border: none;\n      color-scheme: normal;\n      min-height: 150px;\n    }\n  `;\n__decorateClass([\n  e$3({ reflect: true })\n], GiscusWidget.prototype, \"repo\", 2);\n__decorateClass([\n  e$3({ reflect: true })\n], GiscusWidget.prototype, \"repoId\", 2);\n__decorateClass([\n  e$3({ reflect: true })\n], GiscusWidget.prototype, \"category\", 2);\n__decorateClass([\n  e$3({ reflect: true })\n], GiscusWidget.prototype, \"categoryId\", 2);\n__decorateClass([\n  e$3({ reflect: true })\n], GiscusWidget.prototype, \"mapping\", 2);\n__decorateClass([\n  e$3({ reflect: true })\n], GiscusWidget.prototype, \"term\", 2);\n__decorateClass([\n  e$3({ reflect: true })\n], GiscusWidget.prototype, \"reactionsEnabled\", 2);\n__decorateClass([\n  e$3({ reflect: true })\n], GiscusWidget.prototype, \"emitMetadata\", 2);\n__decorateClass([\n  e$3({ reflect: true })\n], GiscusWidget.prototype, \"inputPosition\", 2);\n__decorateClass([\n  e$3({ reflect: true })\n], GiscusWidget.prototype, \"theme\", 2);\n__decorateClass([\n  e$3({ reflect: true })\n], GiscusWidget.prototype, \"lang\", 2);\n__decorateClass([\n  e$3({ reflect: true })\n], GiscusWidget.prototype, \"loading\", 2);\nGiscusWidget = __decorateClass([\n  n$3(\"giscus-widget\")\n], GiscusWidget);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@giscus/react/dist/giscus.es.js\n");

/***/ })

}]);