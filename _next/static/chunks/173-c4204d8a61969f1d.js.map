{"version":3,"file":"static/chunks/173-c4204d8a61969f1d.js","mappings":"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","sources":["webpack://_N_E/../../../src/client/app-dir/link.tsx","webpack://_N_E/../client/request-idle-callback.ts","webpack://_N_E/../client/use-intersection.tsx","webpack://_N_E/../client/use-merged-ref.ts","webpack://_N_E/../../../../src/shared/lib/router/utils/format-url.ts","webpack://_N_E/../../../../src/shared/lib/router/utils/querystring.ts","webpack://_N_E/../../../src/shared/lib/utils.ts"],"sourcesContent":["'use client'\n\nimport type { NextRouter } from '../../shared/lib/router/router'\n\nimport React from 'react'\nimport type { UrlObject } from 'url'\nimport { formatUrl } from '../../shared/lib/router/utils/format-url'\nimport { AppRouterContext } from '../../shared/lib/app-router-context.shared-runtime'\nimport type { AppRouterInstance } from '../../shared/lib/app-router-context.shared-runtime'\nimport type { PrefetchOptions } from '../../shared/lib/app-router-context.shared-runtime'\nimport { useIntersection } from '../use-intersection'\nimport { PrefetchKind } from '../components/router-reducer/router-reducer-types'\nimport { useMergedRef } from '../use-merged-ref'\nimport { isAbsoluteUrl } from '../../shared/lib/utils'\nimport { addBasePath } from '../add-base-path'\nimport { warnOnce } from '../../shared/lib/utils/warn-once'\n\ntype Url = string | UrlObject\ntype RequiredKeys<T> = {\n  [K in keyof T]-?: {} extends Pick<T, K> ? never : K\n}[keyof T]\ntype OptionalKeys<T> = {\n  [K in keyof T]-?: {} extends Pick<T, K> ? K : never\n}[keyof T]\n\ntype InternalLinkProps = {\n  /**\n   * The path or URL to navigate to. It can also be an object.\n   *\n   * @example https://nextjs.org/docs/api-reference/next/link#with-url-object\n   */\n  href: Url\n  /**\n   * Optional decorator for the path that will be shown in the browser URL bar. Before Next.js 9.5.3 this was used for dynamic routes, check our [previous docs](https://github.com/vercel/next.js/blob/v9.5.2/docs/api-reference/next/link.md#dynamic-routes) to see how it worked. Note: when this path differs from the one provided in `href` the previous `href`/`as` behavior is used as shown in the [previous docs](https://github.com/vercel/next.js/blob/v9.5.2/docs/api-reference/next/link.md#dynamic-routes).\n   */\n  as?: Url\n  /**\n   * Replace the current `history` state instead of adding a new url into the stack.\n   *\n   * @defaultValue `false`\n   */\n  replace?: boolean\n  /**\n   * Whether to override the default scroll behavior\n   *\n   * @example https://nextjs.org/docs/api-reference/next/link#disable-scrolling-to-the-top-of-the-page\n   *\n   * @defaultValue `true`\n   */\n  scroll?: boolean\n  /**\n   * Update the path of the current page without rerunning [`getStaticProps`](https://nextjs.org/docs/pages/building-your-application/data-fetching/get-static-props), [`getServerSideProps`](https://nextjs.org/docs/pages/building-your-application/data-fetching/get-server-side-props) or [`getInitialProps`](/docs/pages/api-reference/functions/get-initial-props).\n   *\n   * @defaultValue `false`\n   */\n  shallow?: boolean\n  /**\n   * Forces `Link` to send the `href` property to its child.\n   *\n   * @defaultValue `false`\n   */\n  passHref?: boolean\n  /**\n   * Prefetch the page in the background.\n   * Any `<Link />` that is in the viewport (initially or through scroll) will be prefetched.\n   * Prefetch can be disabled by passing `prefetch={false}`. Prefetching is only enabled in production.\n   *\n   * In App Router:\n   * - `null` (default): For statically generated pages, this will prefetch the full React Server Component data. For dynamic pages, this will prefetch up to the nearest route segment with a [`loading.js`](https://nextjs.org/docs/app/api-reference/file-conventions/loading) file. If there is no loading file, it will not fetch the full tree to avoid fetching too much data.\n   * - `true`: This will prefetch the full React Server Component data for all route segments, regardless of whether they contain a segment with `loading.js`.\n   * - `false`: This will not prefetch any data, even on hover.\n   *\n   * In Pages Router:\n   * - `true` (default): The full route & its data will be prefetched.\n   * - `false`: Prefetching will not happen when entering the viewport, but will still happen on hover.\n   * @defaultValue `true` (pages router) or `null` (app router)\n   */\n  prefetch?: boolean | null\n  /**\n   * The active locale is automatically prepended. `locale` allows for providing a different locale.\n   * When `false` `href` has to include the locale as the default behavior is disabled.\n   * Note: This is only available in the Pages Router.\n   */\n  locale?: string | false\n  /**\n   * Enable legacy link behavior.\n   * @defaultValue `false`\n   * @see https://github.com/vercel/next.js/commit/489e65ed98544e69b0afd7e0cfc3f9f6c2b803b7\n   */\n  legacyBehavior?: boolean\n  /**\n   * Optional event handler for when the mouse pointer is moved onto Link\n   */\n  onMouseEnter?: React.MouseEventHandler<HTMLAnchorElement>\n  /**\n   * Optional event handler for when Link is touched.\n   */\n  onTouchStart?: React.TouchEventHandler<HTMLAnchorElement>\n  /**\n   * Optional event handler for when Link is clicked.\n   */\n  onClick?: React.MouseEventHandler<HTMLAnchorElement>\n}\n\n// TODO-APP: Include the full set of Anchor props\n// adding this to the publicly exported type currently breaks existing apps\n\n// `RouteInferType` is a stub here to avoid breaking `typedRoutes` when the type\n// isn't generated yet. It will be replaced when the webpack plugin runs.\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport type LinkProps<RouteInferType = any> = InternalLinkProps\ntype LinkPropsRequired = RequiredKeys<LinkProps>\ntype LinkPropsOptional = OptionalKeys<Omit<InternalLinkProps, 'locale'>>\n\nfunction prefetch(\n  router: AppRouterInstance,\n  href: string,\n  options: PrefetchOptions\n): void {\n  if (typeof window === 'undefined') {\n    return\n  }\n\n  const doPrefetch = async () => {\n    // note that `appRouter.prefetch()` is currently sync,\n    // so we have to wrap this call in an async function to be able to catch() errors below.\n    return router.prefetch(href, options)\n  }\n\n  // Prefetch the page if asked (only in the client)\n  // We need to handle a prefetch error here since we may be\n  // loading with priority which can reject but we don't\n  // want to force navigation since this is only a prefetch\n  doPrefetch().catch((err) => {\n    if (process.env.NODE_ENV !== 'production') {\n      // rethrow to show invalid URL errors\n      throw err\n    }\n  })\n}\n\nfunction isModifiedEvent(event: React.MouseEvent): boolean {\n  const eventTarget = event.currentTarget as HTMLAnchorElement | SVGAElement\n  const target = eventTarget.getAttribute('target')\n  return (\n    (target && target !== '_self') ||\n    event.metaKey ||\n    event.ctrlKey ||\n    event.shiftKey ||\n    event.altKey || // triggers resource download\n    (event.nativeEvent && event.nativeEvent.which === 2)\n  )\n}\n\nfunction linkClicked(\n  e: React.MouseEvent,\n  router: NextRouter | AppRouterInstance,\n  href: string,\n  as: string,\n  replace?: boolean,\n  shallow?: boolean,\n  scroll?: boolean\n): void {\n  const { nodeName } = e.currentTarget\n\n  // anchors inside an svg have a lowercase nodeName\n  const isAnchorNodeName = nodeName.toUpperCase() === 'A'\n\n  if (isAnchorNodeName && isModifiedEvent(e)) {\n    // ignore click for browser’s default behavior\n    return\n  }\n\n  e.preventDefault()\n\n  const navigate = () => {\n    // If the router is an NextRouter instance it will have `beforePopState`\n    const routerScroll = scroll ?? true\n    if ('beforePopState' in router) {\n      router[replace ? 'replace' : 'push'](href, as, {\n        shallow,\n        scroll: routerScroll,\n      })\n    } else {\n      router[replace ? 'replace' : 'push'](as || href, {\n        scroll: routerScroll,\n      })\n    }\n  }\n\n  React.startTransition(navigate)\n}\n\ntype LinkPropsReal = React.PropsWithChildren<\n  Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, keyof LinkProps> &\n    LinkProps\n>\n\nfunction formatStringOrUrl(urlObjOrString: UrlObject | string): string {\n  if (typeof urlObjOrString === 'string') {\n    return urlObjOrString\n  }\n\n  return formatUrl(urlObjOrString)\n}\n\n/**\n * A React component that extends the HTML `<a>` element to provide [prefetching](https://nextjs.org/docs/app/building-your-application/routing/linking-and-navigating#2-prefetching)\n * and client-side navigation between routes.\n *\n * It is the primary way to navigate between routes in Next.js.\n *\n * Read more: [Next.js docs: `<Link>`](https://nextjs.org/docs/app/api-reference/components/link)\n */\nconst Link = React.forwardRef<HTMLAnchorElement, LinkPropsReal>(\n  function LinkComponent(props, forwardedRef) {\n    let children: React.ReactNode\n\n    const {\n      href: hrefProp,\n      as: asProp,\n      children: childrenProp,\n      prefetch: prefetchProp = null,\n      passHref,\n      replace,\n      shallow,\n      scroll,\n      onClick,\n      onMouseEnter: onMouseEnterProp,\n      onTouchStart: onTouchStartProp,\n      legacyBehavior = false,\n      ...restProps\n    } = props\n\n    children = childrenProp\n\n    if (\n      legacyBehavior &&\n      (typeof children === 'string' || typeof children === 'number')\n    ) {\n      children = <a>{children}</a>\n    }\n\n    const router = React.useContext(AppRouterContext)\n\n    const prefetchEnabled = prefetchProp !== false\n    /**\n     * The possible states for prefetch are:\n     * - null: this is the default \"auto\" mode, where we will prefetch partially if the link is in the viewport\n     * - true: we will prefetch if the link is visible and prefetch the full page, not just partially\n     * - false: we will not prefetch if in the viewport at all\n     */\n    const appPrefetchKind =\n      prefetchProp === null ? PrefetchKind.AUTO : PrefetchKind.FULL\n\n    if (process.env.NODE_ENV !== 'production') {\n      function createPropError(args: {\n        key: string\n        expected: string\n        actual: string\n      }) {\n        return new Error(\n          `Failed prop type: The prop \\`${args.key}\\` expects a ${args.expected} in \\`<Link>\\`, but got \\`${args.actual}\\` instead.` +\n            (typeof window !== 'undefined'\n              ? \"\\nOpen your browser's console to view the Component stack trace.\"\n              : '')\n        )\n      }\n\n      // TypeScript trick for type-guarding:\n      const requiredPropsGuard: Record<LinkPropsRequired, true> = {\n        href: true,\n      } as const\n      const requiredProps: LinkPropsRequired[] = Object.keys(\n        requiredPropsGuard\n      ) as LinkPropsRequired[]\n      requiredProps.forEach((key: LinkPropsRequired) => {\n        if (key === 'href') {\n          if (\n            props[key] == null ||\n            (typeof props[key] !== 'string' && typeof props[key] !== 'object')\n          ) {\n            throw createPropError({\n              key,\n              expected: '`string` or `object`',\n              actual: props[key] === null ? 'null' : typeof props[key],\n            })\n          }\n        } else {\n          // TypeScript trick for type-guarding:\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          const _: never = key\n        }\n      })\n\n      // TypeScript trick for type-guarding:\n      const optionalPropsGuard: Record<LinkPropsOptional, true> = {\n        as: true,\n        replace: true,\n        scroll: true,\n        shallow: true,\n        passHref: true,\n        prefetch: true,\n        onClick: true,\n        onMouseEnter: true,\n        onTouchStart: true,\n        legacyBehavior: true,\n      } as const\n      const optionalProps: LinkPropsOptional[] = Object.keys(\n        optionalPropsGuard\n      ) as LinkPropsOptional[]\n      optionalProps.forEach((key: LinkPropsOptional) => {\n        const valType = typeof props[key]\n\n        if (key === 'as') {\n          if (props[key] && valType !== 'string' && valType !== 'object') {\n            throw createPropError({\n              key,\n              expected: '`string` or `object`',\n              actual: valType,\n            })\n          }\n        } else if (\n          key === 'onClick' ||\n          key === 'onMouseEnter' ||\n          key === 'onTouchStart'\n        ) {\n          if (props[key] && valType !== 'function') {\n            throw createPropError({\n              key,\n              expected: '`function`',\n              actual: valType,\n            })\n          }\n        } else if (\n          key === 'replace' ||\n          key === 'scroll' ||\n          key === 'shallow' ||\n          key === 'passHref' ||\n          key === 'prefetch' ||\n          key === 'legacyBehavior'\n        ) {\n          if (props[key] != null && valType !== 'boolean') {\n            throw createPropError({\n              key,\n              expected: '`boolean`',\n              actual: valType,\n            })\n          }\n        } else {\n          // TypeScript trick for type-guarding:\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          const _: never = key\n        }\n      })\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (props.locale) {\n        warnOnce(\n          'The `locale` prop is not supported in `next/link` while using the `app` router. Read more about app router internalization: https://nextjs.org/docs/app/building-your-application/routing/internationalization'\n        )\n      }\n      if (!asProp) {\n        let href: string | undefined\n        if (typeof hrefProp === 'string') {\n          href = hrefProp\n        } else if (\n          typeof hrefProp === 'object' &&\n          typeof hrefProp.pathname === 'string'\n        ) {\n          href = hrefProp.pathname\n        }\n\n        if (href) {\n          const hasDynamicSegment = href\n            .split('/')\n            .some((segment) => segment.startsWith('[') && segment.endsWith(']'))\n\n          if (hasDynamicSegment) {\n            throw new Error(\n              `Dynamic href \\`${href}\\` found in <Link> while using the \\`/app\\` router, this is not supported. Read more: https://nextjs.org/docs/messages/app-dir-dynamic-href`\n            )\n          }\n        }\n      }\n    }\n\n    const { href, as } = React.useMemo(() => {\n      const resolvedHref = formatStringOrUrl(hrefProp)\n      return {\n        href: resolvedHref,\n        as: asProp ? formatStringOrUrl(asProp) : resolvedHref,\n      }\n    }, [hrefProp, asProp])\n\n    const previousHref = React.useRef<string>(href)\n    const previousAs = React.useRef<string>(as)\n\n    // This will return the first child, if multiple are provided it will throw an error\n    let child: any\n    if (legacyBehavior) {\n      if (process.env.NODE_ENV === 'development') {\n        if (onClick) {\n          console.warn(\n            `\"onClick\" was passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but \"legacyBehavior\" was set. The legacy behavior requires onClick be set on the child of next/link`\n          )\n        }\n        if (onMouseEnterProp) {\n          console.warn(\n            `\"onMouseEnter\" was passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but \"legacyBehavior\" was set. The legacy behavior requires onMouseEnter be set on the child of next/link`\n          )\n        }\n        try {\n          child = React.Children.only(children)\n        } catch (err) {\n          if (!children) {\n            throw new Error(\n              `No children were passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but one child is required https://nextjs.org/docs/messages/link-no-children`\n            )\n          }\n          throw new Error(\n            `Multiple children were passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but only one child is supported https://nextjs.org/docs/messages/link-multiple-children` +\n              (typeof window !== 'undefined'\n                ? \" \\nOpen your browser's console to view the Component stack trace.\"\n                : '')\n          )\n        }\n      } else {\n        child = React.Children.only(children)\n      }\n    } else {\n      if (process.env.NODE_ENV === 'development') {\n        if ((children as any)?.type === 'a') {\n          throw new Error(\n            'Invalid <Link> with <a> child. Please remove <a> or use <Link legacyBehavior>.\\nLearn more: https://nextjs.org/docs/messages/invalid-new-link-with-extra-anchor'\n          )\n        }\n      }\n    }\n\n    const childRef: any = legacyBehavior\n      ? child && typeof child === 'object' && child.ref\n      : forwardedRef\n\n    const [setIntersectionRef, isVisible, resetVisible] = useIntersection({\n      rootMargin: '200px',\n    })\n\n    const setIntersectionWithResetRef = React.useCallback(\n      (el: Element) => {\n        // Before the link getting observed, check if visible state need to be reset\n        if (previousAs.current !== as || previousHref.current !== href) {\n          resetVisible()\n          previousAs.current = as\n          previousHref.current = href\n        }\n\n        setIntersectionRef(el)\n      },\n      [as, href, resetVisible, setIntersectionRef]\n    )\n\n    const setRef = useMergedRef(setIntersectionWithResetRef, childRef)\n\n    // Prefetch the URL if we haven't already and it's visible.\n    React.useEffect(() => {\n      // in dev, we only prefetch on hover to avoid wasting resources as the prefetch will trigger compiling the page.\n      if (process.env.NODE_ENV !== 'production') {\n        return\n      }\n\n      if (!router) {\n        return\n      }\n\n      // If we don't need to prefetch the URL, don't do prefetch.\n      if (!isVisible || !prefetchEnabled) {\n        return\n      }\n\n      // Prefetch the URL.\n      prefetch(router, href, {\n        kind: appPrefetchKind,\n      })\n    }, [as, href, isVisible, prefetchEnabled, router, appPrefetchKind])\n\n    const childProps: {\n      onTouchStart?: React.TouchEventHandler<HTMLAnchorElement>\n      onMouseEnter: React.MouseEventHandler<HTMLAnchorElement>\n      onClick: React.MouseEventHandler<HTMLAnchorElement>\n      href?: string\n      ref?: any\n    } = {\n      ref: setRef,\n      onClick(e) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (!e) {\n            throw new Error(\n              `Component rendered inside next/link has to pass click event to \"onClick\" prop.`\n            )\n          }\n        }\n\n        if (!legacyBehavior && typeof onClick === 'function') {\n          onClick(e)\n        }\n\n        if (\n          legacyBehavior &&\n          child.props &&\n          typeof child.props.onClick === 'function'\n        ) {\n          child.props.onClick(e)\n        }\n\n        if (!router) {\n          return\n        }\n\n        if (e.defaultPrevented) {\n          return\n        }\n\n        linkClicked(e, router, href, as, replace, shallow, scroll)\n      },\n      onMouseEnter(e) {\n        if (!legacyBehavior && typeof onMouseEnterProp === 'function') {\n          onMouseEnterProp(e)\n        }\n\n        if (\n          legacyBehavior &&\n          child.props &&\n          typeof child.props.onMouseEnter === 'function'\n        ) {\n          child.props.onMouseEnter(e)\n        }\n\n        if (!router) {\n          return\n        }\n\n        if (!prefetchEnabled || process.env.NODE_ENV === 'development') {\n          return\n        }\n\n        prefetch(router, href, {\n          kind: appPrefetchKind,\n        })\n      },\n      onTouchStart: process.env.__NEXT_LINK_NO_TOUCH_START\n        ? undefined\n        : function onTouchStart(e) {\n            if (!legacyBehavior && typeof onTouchStartProp === 'function') {\n              onTouchStartProp(e)\n            }\n\n            if (\n              legacyBehavior &&\n              child.props &&\n              typeof child.props.onTouchStart === 'function'\n            ) {\n              child.props.onTouchStart(e)\n            }\n\n            if (!router) {\n              return\n            }\n\n            if (!prefetchEnabled) {\n              return\n            }\n\n            prefetch(router, href, {\n              kind: appPrefetchKind,\n            })\n          },\n    }\n\n    // If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is\n    // defined, we specify the current 'href', so that repetition is not needed by the user.\n    // If the url is absolute, we can bypass the logic to prepend the basePath.\n    if (isAbsoluteUrl(as)) {\n      childProps.href = as\n    } else if (\n      !legacyBehavior ||\n      passHref ||\n      (child.type === 'a' && !('href' in child.props))\n    ) {\n      childProps.href = addBasePath(as)\n    }\n\n    return legacyBehavior ? (\n      React.cloneElement(child, childProps)\n    ) : (\n      <a {...restProps} {...childProps}>\n        {children}\n      </a>\n    )\n  }\n)\n\nexport default Link\n","export const requestIdleCallback =\n  (typeof self !== 'undefined' &&\n    self.requestIdleCallback &&\n    self.requestIdleCallback.bind(window)) ||\n  function (cb: IdleRequestCallback): number {\n    let start = Date.now()\n    return self.setTimeout(function () {\n      cb({\n        didTimeout: false,\n        timeRemaining: function () {\n          return Math.max(0, 50 - (Date.now() - start))\n        },\n      })\n    }, 1)\n  }\n\nexport const cancelIdleCallback =\n  (typeof self !== 'undefined' &&\n    self.cancelIdleCallback &&\n    self.cancelIdleCallback.bind(window)) ||\n  function (id: number) {\n    return clearTimeout(id)\n  }\n","import { useCallback, useEffect, useRef, useState } from 'react'\nimport {\n  requestIdleCallback,\n  cancelIdleCallback,\n} from './request-idle-callback'\n\ntype UseIntersectionObserverInit = Pick<\n  IntersectionObserverInit,\n  'rootMargin' | 'root'\n>\n\ntype UseIntersection = { disabled?: boolean } & UseIntersectionObserverInit & {\n    rootRef?: React.RefObject<HTMLElement | null> | null\n  }\ntype ObserveCallback = (isVisible: boolean) => void\ntype Identifier = {\n  root: Element | Document | null\n  margin: string\n}\ntype Observer = {\n  id: Identifier\n  observer: IntersectionObserver\n  elements: Map<Element, ObserveCallback>\n}\n\nconst hasIntersectionObserver = typeof IntersectionObserver === 'function'\n\nconst observers = new Map<Identifier, Observer>()\nconst idList: Identifier[] = []\n\nfunction createObserver(options: UseIntersectionObserverInit): Observer {\n  const id = {\n    root: options.root || null,\n    margin: options.rootMargin || '',\n  }\n  const existing = idList.find(\n    (obj) => obj.root === id.root && obj.margin === id.margin\n  )\n  let instance: Observer | undefined\n\n  if (existing) {\n    instance = observers.get(existing)\n    if (instance) {\n      return instance\n    }\n  }\n\n  const elements = new Map<Element, ObserveCallback>()\n  const observer = new IntersectionObserver((entries) => {\n    entries.forEach((entry) => {\n      const callback = elements.get(entry.target)\n      const isVisible = entry.isIntersecting || entry.intersectionRatio > 0\n      if (callback && isVisible) {\n        callback(isVisible)\n      }\n    })\n  }, options)\n  instance = {\n    id,\n    observer,\n    elements,\n  }\n\n  idList.push(id)\n  observers.set(id, instance)\n  return instance\n}\n\nfunction observe(\n  element: Element,\n  callback: ObserveCallback,\n  options: UseIntersectionObserverInit\n): () => void {\n  const { id, observer, elements } = createObserver(options)\n  elements.set(element, callback)\n\n  observer.observe(element)\n  return function unobserve(): void {\n    elements.delete(element)\n    observer.unobserve(element)\n\n    // Destroy observer when there's nothing left to watch:\n    if (elements.size === 0) {\n      observer.disconnect()\n      observers.delete(id)\n      const index = idList.findIndex(\n        (obj) => obj.root === id.root && obj.margin === id.margin\n      )\n      if (index > -1) {\n        idList.splice(index, 1)\n      }\n    }\n  }\n}\n\nexport function useIntersection<T extends Element>({\n  rootRef,\n  rootMargin,\n  disabled,\n}: UseIntersection): [(element: T | null) => void, boolean, () => void] {\n  const isDisabled: boolean = disabled || !hasIntersectionObserver\n\n  const [visible, setVisible] = useState(false)\n  const elementRef = useRef<T | null>(null)\n  const setElement = useCallback((element: T | null) => {\n    elementRef.current = element\n  }, [])\n\n  useEffect(() => {\n    if (hasIntersectionObserver) {\n      if (isDisabled || visible) return\n\n      const element = elementRef.current\n      if (element && element.tagName) {\n        const unobserve = observe(\n          element,\n          (isVisible) => isVisible && setVisible(isVisible),\n          { root: rootRef?.current, rootMargin }\n        )\n\n        return unobserve\n      }\n    } else {\n      if (!visible) {\n        const idleCallback = requestIdleCallback(() => setVisible(true))\n        return () => cancelIdleCallback(idleCallback)\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isDisabled, rootMargin, rootRef, visible, elementRef.current])\n\n  const resetVisible = useCallback(() => {\n    setVisible(false)\n  }, [])\n\n  return [setElement, visible, resetVisible]\n}\n","import { useMemo, useRef, type Ref } from 'react'\n\n// This is a compatibility hook to support React 18 and 19 refs.\n// In 19, a cleanup function from refs may be returned.\n// In 18, returning a cleanup function creates a warning.\n// Since we take userspace refs, we don't know ahead of time if a cleanup function will be returned.\n// This implements cleanup functions with the old behavior in 18.\n// We know refs are always called alternating with `null` and then `T`.\n// So a call with `null` means we need to call the previous cleanup functions.\nexport function useMergedRef<TElement>(\n  refA: Ref<TElement>,\n  refB: Ref<TElement>\n): Ref<TElement> {\n  const cleanupA = useRef<() => void>(() => {})\n  const cleanupB = useRef<() => void>(() => {})\n\n  return useMemo(() => {\n    if (!refA || !refB) {\n      return refA || refB\n    }\n\n    return (current: TElement | null): void => {\n      if (current === null) {\n        cleanupA.current()\n        cleanupB.current()\n      } else {\n        cleanupA.current = applyRef(refA, current)\n        cleanupB.current = applyRef(refB, current)\n      }\n    }\n  }, [refA, refB])\n}\n\nfunction applyRef<TElement>(\n  refA: NonNullable<Ref<TElement>>,\n  current: TElement\n) {\n  if (typeof refA === 'function') {\n    const cleanup = refA(current)\n    if (typeof cleanup === 'function') {\n      return cleanup\n    } else {\n      return () => refA(null)\n    }\n  } else {\n    refA.current = current\n    return () => {\n      refA.current = null\n    }\n  }\n}\n","// Format function modified from nodejs\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nimport type { UrlObject } from 'url'\nimport type { ParsedUrlQuery } from 'querystring'\nimport * as querystring from './querystring'\n\nconst slashedProtocols = /https?|ftp|gopher|file/\n\nexport function formatUrl(urlObj: UrlObject) {\n  let { auth, hostname } = urlObj\n  let protocol = urlObj.protocol || ''\n  let pathname = urlObj.pathname || ''\n  let hash = urlObj.hash || ''\n  let query = urlObj.query || ''\n  let host: string | false = false\n\n  auth = auth ? encodeURIComponent(auth).replace(/%3A/i, ':') + '@' : ''\n\n  if (urlObj.host) {\n    host = auth + urlObj.host\n  } else if (hostname) {\n    host = auth + (~hostname.indexOf(':') ? `[${hostname}]` : hostname)\n    if (urlObj.port) {\n      host += ':' + urlObj.port\n    }\n  }\n\n  if (query && typeof query === 'object') {\n    query = String(querystring.urlQueryToSearchParams(query as ParsedUrlQuery))\n  }\n\n  let search = urlObj.search || (query && `?${query}`) || ''\n\n  if (protocol && !protocol.endsWith(':')) protocol += ':'\n\n  if (\n    urlObj.slashes ||\n    ((!protocol || slashedProtocols.test(protocol)) && host !== false)\n  ) {\n    host = '//' + (host || '')\n    if (pathname && pathname[0] !== '/') pathname = '/' + pathname\n  } else if (!host) {\n    host = ''\n  }\n\n  if (hash && hash[0] !== '#') hash = '#' + hash\n  if (search && search[0] !== '?') search = '?' + search\n\n  pathname = pathname.replace(/[?#]/g, encodeURIComponent)\n  search = search.replace('#', '%23')\n\n  return `${protocol}${host}${pathname}${search}${hash}`\n}\n\nexport const urlObjectKeys = [\n  'auth',\n  'hash',\n  'host',\n  'hostname',\n  'href',\n  'path',\n  'pathname',\n  'port',\n  'protocol',\n  'query',\n  'search',\n  'slashes',\n]\n\nexport function formatWithValidation(url: UrlObject): string {\n  if (process.env.NODE_ENV === 'development') {\n    if (url !== null && typeof url === 'object') {\n      Object.keys(url).forEach((key) => {\n        if (!urlObjectKeys.includes(key)) {\n          console.warn(\n            `Unknown key passed via urlObject into url.format: ${key}`\n          )\n        }\n      })\n    }\n  }\n\n  return formatUrl(url)\n}\n","import type { ParsedUrlQuery } from 'querystring'\n\nexport function searchParamsToUrlQuery(\n  searchParams: URLSearchParams\n): ParsedUrlQuery {\n  const query: ParsedUrlQuery = {}\n  searchParams.forEach((value, key) => {\n    if (typeof query[key] === 'undefined') {\n      query[key] = value\n    } else if (Array.isArray(query[key])) {\n      ;(query[key] as string[]).push(value)\n    } else {\n      query[key] = [query[key] as string, value]\n    }\n  })\n  return query\n}\n\nfunction stringifyUrlQueryParam(param: unknown): string {\n  if (\n    typeof param === 'string' ||\n    (typeof param === 'number' && !isNaN(param)) ||\n    typeof param === 'boolean'\n  ) {\n    return String(param)\n  } else {\n    return ''\n  }\n}\n\nexport function urlQueryToSearchParams(\n  urlQuery: ParsedUrlQuery\n): URLSearchParams {\n  const result = new URLSearchParams()\n  Object.entries(urlQuery).forEach(([key, value]) => {\n    if (Array.isArray(value)) {\n      value.forEach((item) => result.append(key, stringifyUrlQueryParam(item)))\n    } else {\n      result.set(key, stringifyUrlQueryParam(value))\n    }\n  })\n  return result\n}\n\nexport function assign(\n  target: URLSearchParams,\n  ...searchParamsList: URLSearchParams[]\n): URLSearchParams {\n  searchParamsList.forEach((searchParams) => {\n    Array.from(searchParams.keys()).forEach((key) => target.delete(key))\n    searchParams.forEach((value, key) => target.append(key, value))\n  })\n  return target\n}\n","import type { HtmlProps } from './html-context.shared-runtime'\nimport type { ComponentType, JSX } from 'react'\nimport type { DomainLocale } from '../../server/config'\nimport type { Env } from '@next/env'\nimport type { IncomingMessage, ServerResponse } from 'http'\nimport type { NextRouter } from './router/router'\nimport type { ParsedUrlQuery } from 'querystring'\nimport type { PreviewData } from '../../types'\nimport type { COMPILER_NAMES } from './constants'\nimport type fs from 'fs'\n\nexport type NextComponentType<\n  Context extends BaseContext = NextPageContext,\n  InitialProps = {},\n  Props = {},\n> = ComponentType<Props> & {\n  /**\n   * Used for initial page load data population. Data returned from `getInitialProps` is serialized when server rendered.\n   * Make sure to return plain `Object` without using `Date`, `Map`, `Set`.\n   * @param context Context of `page`\n   */\n  getInitialProps?(context: Context): InitialProps | Promise<InitialProps>\n}\n\nexport type DocumentType = NextComponentType<\n  DocumentContext,\n  DocumentInitialProps,\n  DocumentProps\n>\n\nexport type AppType<P = {}> = NextComponentType<\n  AppContextType,\n  P,\n  AppPropsType<any, P>\n>\n\nexport type AppTreeType = ComponentType<\n  AppInitialProps & { [name: string]: any }\n>\n\n/**\n * Web vitals provided to _app.reportWebVitals by Core Web Vitals plugin developed by Google Chrome team.\n * https://nextjs.org/blog/next-9-4#integrated-web-vitals-reporting\n */\nexport const WEB_VITALS = ['CLS', 'FCP', 'FID', 'INP', 'LCP', 'TTFB'] as const\nexport type NextWebVitalsMetric = {\n  id: string\n  startTime: number\n  value: number\n  attribution?: { [key: string]: unknown }\n} & (\n  | {\n      label: 'web-vital'\n      name: (typeof WEB_VITALS)[number]\n    }\n  | {\n      label: 'custom'\n      name:\n        | 'Next.js-hydration'\n        | 'Next.js-route-change-to-render'\n        | 'Next.js-render'\n    }\n)\n\nexport type Enhancer<C> = (Component: C) => C\n\nexport type ComponentsEnhancer =\n  | {\n      enhanceApp?: Enhancer<AppType>\n      enhanceComponent?: Enhancer<NextComponentType>\n    }\n  | Enhancer<NextComponentType>\n\nexport type RenderPageResult = {\n  html: string\n  head?: Array<JSX.Element | null>\n}\n\nexport type RenderPage = (\n  options?: ComponentsEnhancer\n) => DocumentInitialProps | Promise<DocumentInitialProps>\n\nexport type BaseContext = {\n  res?: ServerResponse\n  [k: string]: any\n}\n\nexport type NEXT_DATA = {\n  props: Record<string, any>\n  page: string\n  query: ParsedUrlQuery\n  buildId: string\n  assetPrefix?: string\n  runtimeConfig?: { [key: string]: any }\n  nextExport?: boolean\n  autoExport?: boolean\n  isFallback?: boolean\n  isExperimentalCompile?: boolean\n  dynamicIds?: (string | number)[]\n  err?: Error & {\n    statusCode?: number\n    source?: typeof COMPILER_NAMES.server | typeof COMPILER_NAMES.edgeServer\n  }\n  gsp?: boolean\n  gssp?: boolean\n  customServer?: boolean\n  gip?: boolean\n  appGip?: boolean\n  locale?: string\n  locales?: string[]\n  defaultLocale?: string\n  domainLocales?: DomainLocale[]\n  scriptLoader?: any[]\n  isPreview?: boolean\n  notFoundSrcPage?: string\n}\n\n/**\n * `Next` context\n */\nexport interface NextPageContext {\n  /**\n   * Error object if encountered during rendering\n   */\n  err?: (Error & { statusCode?: number }) | null\n  /**\n   * `HTTP` request object.\n   */\n  req?: IncomingMessage\n  /**\n   * `HTTP` response object.\n   */\n  res?: ServerResponse\n  /**\n   * Path section of `URL`.\n   */\n  pathname: string\n  /**\n   * Query string section of `URL` parsed as an object.\n   */\n  query: ParsedUrlQuery\n  /**\n   * `String` of the actual path including query.\n   */\n  asPath?: string\n  /**\n   * The currently active locale\n   */\n  locale?: string\n  /**\n   * All configured locales\n   */\n  locales?: string[]\n  /**\n   * The configured default locale\n   */\n  defaultLocale?: string\n  /**\n   * `Component` the tree of the App to use if needing to render separately\n   */\n  AppTree: AppTreeType\n}\n\nexport type AppContextType<Router extends NextRouter = NextRouter> = {\n  Component: NextComponentType<NextPageContext>\n  AppTree: AppTreeType\n  ctx: NextPageContext\n  router: Router\n}\n\nexport type AppInitialProps<PageProps = any> = {\n  pageProps: PageProps\n}\n\nexport type AppPropsType<\n  Router extends NextRouter = NextRouter,\n  PageProps = {},\n> = AppInitialProps<PageProps> & {\n  Component: NextComponentType<NextPageContext, any, any>\n  router: Router\n  __N_SSG?: boolean\n  __N_SSP?: boolean\n}\n\nexport type DocumentContext = NextPageContext & {\n  renderPage: RenderPage\n  defaultGetInitialProps(\n    ctx: DocumentContext,\n    options?: { nonce?: string }\n  ): Promise<DocumentInitialProps>\n}\n\nexport type DocumentInitialProps = RenderPageResult & {\n  styles?: React.ReactElement[] | Iterable<React.ReactNode> | JSX.Element\n}\n\nexport type DocumentProps = DocumentInitialProps & HtmlProps\n\n/**\n * Next `API` route request\n */\nexport interface NextApiRequest extends IncomingMessage {\n  /**\n   * Object of `query` values from url\n   */\n  query: Partial<{\n    [key: string]: string | string[]\n  }>\n  /**\n   * Object of `cookies` from header\n   */\n  cookies: Partial<{\n    [key: string]: string\n  }>\n\n  body: any\n\n  env: Env\n\n  draftMode?: boolean\n\n  preview?: boolean\n  /**\n   * Preview data set on the request, if any\n   * */\n  previewData?: PreviewData\n}\n\n/**\n * Send body of response\n */\ntype Send<T> = (body: T) => void\n\n/**\n * Next `API` route response\n */\nexport type NextApiResponse<Data = any> = ServerResponse & {\n  /**\n   * Send data `any` data in response\n   */\n  send: Send<Data>\n  /**\n   * Send data `json` data in response\n   */\n  json: Send<Data>\n  status: (statusCode: number) => NextApiResponse<Data>\n  redirect(url: string): NextApiResponse<Data>\n  redirect(status: number, url: string): NextApiResponse<Data>\n\n  /**\n   * Set draft mode\n   */\n  setDraftMode: (options: { enable: boolean }) => NextApiResponse<Data>\n\n  /**\n   * Set preview data for Next.js' prerender mode\n   */\n  setPreviewData: (\n    data: object | string,\n    options?: {\n      /**\n       * Specifies the number (in seconds) for the preview session to last for.\n       * The given number will be converted to an integer by rounding down.\n       * By default, no maximum age is set and the preview session finishes\n       * when the client shuts down (browser is closed).\n       */\n      maxAge?: number\n      /**\n       * Specifies the path for the preview session to work under. By default,\n       * the path is considered the \"default path\", i.e., any pages under \"/\".\n       */\n      path?: string\n    }\n  ) => NextApiResponse<Data>\n\n  /**\n   * Clear preview data for Next.js' prerender mode\n   */\n  clearPreviewData: (options?: { path?: string }) => NextApiResponse<Data>\n\n  /**\n   * Revalidate a specific page and regenerate it using On-Demand Incremental\n   * Static Regeneration.\n   * The path should be an actual path, not a rewritten path. E.g. for\n   * \"/blog/[slug]\" this should be \"/blog/post-1\".\n   * @link https://nextjs.org/docs/app/building-your-application/data-fetching/incremental-static-regeneration#on-demand-revalidation-with-revalidatepath\n   */\n  revalidate: (\n    urlPath: string,\n    opts?: {\n      unstable_onlyGenerated?: boolean\n    }\n  ) => Promise<void>\n}\n\n/**\n * Next `API` route handler\n */\nexport type NextApiHandler<T = any> = (\n  req: NextApiRequest,\n  res: NextApiResponse<T>\n) => unknown | Promise<unknown>\n\n/**\n * Utils\n */\nexport function execOnce<T extends (...args: any[]) => ReturnType<T>>(\n  fn: T\n): T {\n  let used = false\n  let result: ReturnType<T>\n\n  return ((...args: any[]) => {\n    if (!used) {\n      used = true\n      result = fn(...args)\n    }\n    return result\n  }) as T\n}\n\n// Scheme: https://tools.ietf.org/html/rfc3986#section-3.1\n// Absolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\nconst ABSOLUTE_URL_REGEX = /^[a-zA-Z][a-zA-Z\\d+\\-.]*?:/\nexport const isAbsoluteUrl = (url: string) => ABSOLUTE_URL_REGEX.test(url)\n\nexport function getLocationOrigin() {\n  const { protocol, hostname, port } = window.location\n  return `${protocol}//${hostname}${port ? ':' + port : ''}`\n}\n\nexport function getURL() {\n  const { href } = window.location\n  const origin = getLocationOrigin()\n  return href.substring(origin.length)\n}\n\nexport function getDisplayName<P>(Component: ComponentType<P>) {\n  return typeof Component === 'string'\n    ? Component\n    : Component.displayName || Component.name || 'Unknown'\n}\n\nexport function isResSent(res: ServerResponse) {\n  return res.finished || res.headersSent\n}\n\nexport function normalizeRepeatedSlashes(url: string) {\n  const urlParts = url.split('?')\n  const urlNoQuery = urlParts[0]\n\n  return (\n    urlNoQuery\n      // first we replace any non-encoded backslashes with forward\n      // then normalize repeated forward slashes\n      .replace(/\\\\/g, '/')\n      .replace(/\\/\\/+/g, '/') +\n    (urlParts[1] ? `?${urlParts.slice(1).join('?')}` : '')\n  )\n}\n\nexport async function loadGetInitialProps<\n  C extends BaseContext,\n  IP = {},\n  P = {},\n>(App: NextComponentType<C, IP, P>, ctx: C): Promise<IP> {\n  if (process.env.NODE_ENV !== 'production') {\n    if (App.prototype?.getInitialProps) {\n      const message = `\"${getDisplayName(\n        App\n      )}.getInitialProps()\" is defined as an instance method - visit https://nextjs.org/docs/messages/get-initial-props-as-an-instance-method for more information.`\n      throw new Error(message)\n    }\n  }\n  // when called from _app `ctx` is nested in `ctx`\n  const res = ctx.res || (ctx.ctx && ctx.ctx.res)\n\n  if (!App.getInitialProps) {\n    if (ctx.ctx && ctx.Component) {\n      // @ts-ignore pageProps default\n      return {\n        pageProps: await loadGetInitialProps(ctx.Component, ctx.ctx),\n      }\n    }\n    return {} as IP\n  }\n\n  const props = await App.getInitialProps(ctx)\n\n  if (res && isResSent(res)) {\n    return props\n  }\n\n  if (!props) {\n    const message = `\"${getDisplayName(\n      App\n    )}.getInitialProps()\" should resolve to an object. But found \"${props}\" instead.`\n    throw new Error(message)\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (Object.keys(props).length === 0 && !ctx.ctx) {\n      console.warn(\n        `${getDisplayName(\n          App\n        )} returned an empty object from \\`getInitialProps\\`. This de-optimizes and prevents automatic static optimization. https://nextjs.org/docs/messages/empty-object-getInitialProps`\n      )\n    }\n  }\n\n  return props\n}\n\nexport const SP = typeof performance !== 'undefined'\nexport const ST =\n  SP &&\n  (['mark', 'measure', 'getEntriesByName'] as const).every(\n    (method) => typeof performance[method] === 'function'\n  )\n\nexport class DecodeError extends Error {}\nexport class NormalizeError extends Error {}\nexport class PageNotFoundError extends Error {\n  code: string\n\n  constructor(page: string) {\n    super()\n    this.code = 'ENOENT'\n    this.name = 'PageNotFoundError'\n    this.message = `Cannot find module for page: ${page}`\n  }\n}\n\nexport class MissingStaticPage extends Error {\n  constructor(page: string, message: string) {\n    super()\n    this.message = `Failed to load static file for page: ${page} ${message}`\n  }\n}\n\nexport class MiddlewareNotFoundError extends Error {\n  code: string\n  constructor() {\n    super()\n    this.code = 'ENOENT'\n    this.message = `Cannot find the middleware module`\n  }\n}\n\nexport interface CacheFs {\n  existsSync: typeof fs.existsSync\n  readFile: typeof fs.promises.readFile\n  readFileSync: typeof fs.readFileSync\n  writeFile(f: string, d: any): Promise<void>\n  mkdir(dir: string): Promise<void | string>\n  stat(f: string): Promise<{ mtime: Date }>\n}\n\nexport function stringifyError(error: Error) {\n  return JSON.stringify({ message: error.message, stack: error.stack })\n}\n"],"names":["prefetch","router","href","options","window","doPrefetch","catch","err","formatStringOrUrl","urlObjOrString","formatUrl","React","forwardRef","LinkComponent","forwardedRef","children","child","hrefProp","as","asProp","childrenProp","prefetchProp","passHref","replace","shallow","scroll","onClick","onMouseEnter","onMouseEnterProp","onTouchStart","onTouchStartProp","legacyBehavior","restProps","props","a","useContext","AppRouterContext","prefetchEnabled","appPrefetchKind","PrefetchKind","AUTO","FULL","useMemo","resolvedHref","previousHref","useRef","previousAs","Children","only","childRef","ref","setIntersectionRef","isVisible","resetVisible","useIntersection","rootMargin","setIntersectionWithResetRef","useCallback","current","el","setRef","useMergedRef","useEffect","kind","childProps","e","defaultPrevented","linkClicked","nodeName","currentTarget","toUpperCase","isModifiedEvent","event","target","eventTarget","getAttribute","metaKey","ctrlKey","shiftKey","altKey","nativeEvent","which","preventDefault","startTransition","navigate","routerScroll","process","env","NODE_ENV","undefined","isAbsoluteUrl","type","addBasePath","cloneElement","cancelIdleCallback","requestIdleCallback","self","bind","cb","start","Date","now","setTimeout","didTimeout","timeRemaining","Math","max","id","clearTimeout","hasIntersectionObserver","IntersectionObserver","observers","Map","idList","rootRef","disabled","isDisabled","visible","setVisible","useState","elementRef","setElement","element","tagName","observe","callback","observer","elements","createObserver","instance","root","margin","existing","find","obj","get","entries","forEach","entry","isIntersecting","intersectionRatio","push","set","unobserve","delete","size","disconnect","index","findIndex","splice","idleCallback","refA","refB","cleanupA","cleanupB","applyRef","cleanup","formatWithValidation","urlObjectKeys","slashedProtocols","urlObj","auth","hostname","protocol","pathname","hash","query","host","encodeURIComponent","indexOf","port","String","querystring","urlQueryToSearchParams","search","endsWith","slashes","test","url","searchParamsToUrlQuery","searchParams","value","key","Array","isArray","stringifyUrlQueryParam","param","isNaN","urlQuery","result","URLSearchParams","Object","item","append","assign","searchParamsList","from","keys","DecodeError","MiddlewareNotFoundError","MissingStaticPage","NormalizeError","PageNotFoundError","SP","ST","WEB_VITALS","execOnce","getDisplayName","getLocationOrigin","getURL","isResSent","loadGetInitialProps","normalizeRepeatedSlashes","stringifyError","fn","used","args","ABSOLUTE_URL_REGEX","location","origin","substring","length","Component","displayName","name","res","finished","headersSent","urlParts","split","slice","join","App","ctx","getInitialProps","performance","every","method","Error","constructor","page","code","message","error","JSON","stringify","stack"],"sourceRoot":"","ignoreList":[]}