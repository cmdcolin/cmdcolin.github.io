{"version":3,"file":"static/chunks/996-19d9cfbc73bc924b.js","mappings":"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","sources":["webpack://_N_E/./node_modules/next/dist/client/get-domain-locale.js","webpack://_N_E/./node_modules/next/dist/client/link.js","webpack://_N_E/./node_modules/next/dist/client/use-intersection.js","webpack://_N_E/./node_modules/next/dist/shared/lib/app-router-context.js","webpack://_N_E/./node_modules/next/head.js","webpack://_N_E/./node_modules/next/link.js","webpack://_N_E/<anon>"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.getDomainLocale = getDomainLocale;\nconst basePath = process.env.__NEXT_ROUTER_BASEPATH || '';\nfunction getDomainLocale(path, locale, locales, domainLocales) {\n    if (process.env.__NEXT_I18N_SUPPORT) {\n        const normalizeLocalePath = require('./normalize-locale-path').normalizeLocalePath;\n        const detectDomainLocale = require('./detect-domain-locale').detectDomainLocale;\n        const target = locale || normalizeLocalePath(path, locales).detectedLocale;\n        const domain = detectDomainLocale(domainLocales, undefined, target);\n        if (domain) {\n            const proto = `http${domain.http ? '' : 's'}://`;\n            const finalLocale = target === domain.defaultLocale ? '' : `/${target}`;\n            return `${proto}${domain.domain}${basePath}${finalLocale}${path}`;\n        }\n        return false;\n    } else {\n        return false;\n    }\n}\n\nif ((typeof exports.default === 'function' || (typeof exports.default === 'object' && exports.default !== null)) && typeof exports.default.__esModule === 'undefined') {\n  Object.defineProperty(exports.default, '__esModule', { value: true });\n  Object.assign(exports.default, exports);\n  module.exports = exports.default;\n}\n\n//# sourceMappingURL=get-domain-locale.js.map","\"use client\";\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = void 0;\nvar _interop_require_default = require(\"@swc/helpers/lib/_interop_require_default.js\").default;\nvar _object_without_properties_loose = require(\"@swc/helpers/lib/_object_without_properties_loose.js\").default;\nvar _react = _interop_require_default(require(\"react\"));\nvar _router = require(\"../shared/lib/router/router\");\nvar _addLocale = require(\"./add-locale\");\nvar _routerContext = require(\"../shared/lib/router-context\");\nvar _appRouterContext = require(\"../shared/lib/app-router-context\");\nvar _useIntersection = require(\"./use-intersection\");\nvar _getDomainLocale = require(\"./get-domain-locale\");\nvar _addBasePath = require(\"./add-base-path\");\n'use client';\nconst prefetched = {};\nfunction prefetch(router, href, as, options) {\n    if (typeof window === 'undefined' || !router) return;\n    if (!(0, _router).isLocalURL(href)) return;\n    // Prefetch the JSON page if asked (only in the client)\n    // We need to handle a prefetch error here since we may be\n    // loading with priority which can reject but we don't\n    // want to force navigation since this is only a prefetch\n    Promise.resolve(router.prefetch(href, as, options)).catch((err)=>{\n        if (process.env.NODE_ENV !== 'production') {\n            // rethrow to show invalid URL errors\n            throw err;\n        }\n    });\n    const curLocale = options && typeof options.locale !== 'undefined' ? options.locale : router && router.locale;\n    // Join on an invalid URI character\n    prefetched[href + '%' + as + (curLocale ? '%' + curLocale : '')] = true;\n}\nfunction isModifiedEvent(event) {\n    const { target  } = event.currentTarget;\n    return target && target !== '_self' || event.metaKey || event.ctrlKey || event.shiftKey || event.altKey || event.nativeEvent && event.nativeEvent.which === 2;\n}\nfunction linkClicked(e, router, href, as, replace, shallow, scroll, locale, isAppRouter, prefetchEnabled) {\n    const { nodeName  } = e.currentTarget;\n    // anchors inside an svg have a lowercase nodeName\n    const isAnchorNodeName = nodeName.toUpperCase() === 'A';\n    if (isAnchorNodeName && (isModifiedEvent(e) || !(0, _router).isLocalURL(href))) {\n        // ignore click for browser’s default behavior\n        return;\n    }\n    e.preventDefault();\n    const navigate = ()=>{\n        // If the router is an NextRouter instance it will have `beforePopState`\n        if ('beforePopState' in router) {\n            router[replace ? 'replace' : 'push'](href, as, {\n                shallow,\n                locale,\n                scroll\n            });\n        } else {\n            // If `beforePopState` doesn't exist on the router it's the AppRouter.\n            const method = replace ? 'replace' : 'push';\n            // Apply `as` if it's provided.\n            router[method](as || href, {\n                forceOptimisticNavigation: !prefetchEnabled\n            });\n        }\n    };\n    if (isAppRouter) {\n        // @ts-expect-error startTransition exists.\n        _react.default.startTransition(navigate);\n    } else {\n        navigate();\n    }\n}\n/**\n * React Component that enables client-side transitions between routes.\n */ const Link = /*#__PURE__*/ _react.default.forwardRef(function LinkComponent(props, forwardedRef) {\n    if (process.env.NODE_ENV !== 'production') {\n        function createPropError(args) {\n            return new Error(`Failed prop type: The prop \\`${args.key}\\` expects a ${args.expected} in \\`<Link>\\`, but got \\`${args.actual}\\` instead.` + (typeof window !== 'undefined' ? \"\\nOpen your browser's console to view the Component stack trace.\" : ''));\n        }\n        // TypeScript trick for type-guarding:\n        const requiredPropsGuard = {\n            href: true\n        };\n        const requiredProps = Object.keys(requiredPropsGuard);\n        requiredProps.forEach((key)=>{\n            if (key === 'href') {\n                if (props[key] == null || typeof props[key] !== 'string' && typeof props[key] !== 'object') {\n                    throw createPropError({\n                        key,\n                        expected: '`string` or `object`',\n                        actual: props[key] === null ? 'null' : typeof props[key]\n                    });\n                }\n            } else {\n                // TypeScript trick for type-guarding:\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                const _ = key;\n            }\n        });\n        // TypeScript trick for type-guarding:\n        const optionalPropsGuard = {\n            as: true,\n            replace: true,\n            scroll: true,\n            shallow: true,\n            passHref: true,\n            prefetch: true,\n            locale: true,\n            onClick: true,\n            onMouseEnter: true,\n            onTouchStart: true,\n            legacyBehavior: true\n        };\n        const optionalProps = Object.keys(optionalPropsGuard);\n        optionalProps.forEach((key)=>{\n            const valType = typeof props[key];\n            if (key === 'as') {\n                if (props[key] && valType !== 'string' && valType !== 'object') {\n                    throw createPropError({\n                        key,\n                        expected: '`string` or `object`',\n                        actual: valType\n                    });\n                }\n            } else if (key === 'locale') {\n                if (props[key] && valType !== 'string') {\n                    throw createPropError({\n                        key,\n                        expected: '`string`',\n                        actual: valType\n                    });\n                }\n            } else if (key === 'onClick' || key === 'onMouseEnter' || key === 'onTouchStart') {\n                if (props[key] && valType !== 'function') {\n                    throw createPropError({\n                        key,\n                        expected: '`function`',\n                        actual: valType\n                    });\n                }\n            } else if (key === 'replace' || key === 'scroll' || key === 'shallow' || key === 'passHref' || key === 'prefetch' || key === 'legacyBehavior') {\n                if (props[key] != null && valType !== 'boolean') {\n                    throw createPropError({\n                        key,\n                        expected: '`boolean`',\n                        actual: valType\n                    });\n                }\n            } else {\n                // TypeScript trick for type-guarding:\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                const _ = key;\n            }\n        });\n        // This hook is in a conditional but that is ok because `process.env.NODE_ENV` never changes\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const hasWarned = _react.default.useRef(false);\n        if (props.prefetch && !hasWarned.current) {\n            hasWarned.current = true;\n            console.warn('Next.js auto-prefetches automatically based on viewport. The prefetch attribute is no longer needed. More: https://nextjs.org/docs/messages/prefetch-true-deprecated');\n        }\n    }\n    let children;\n    const { href: hrefProp , as: asProp , children: childrenProp , prefetch: prefetchProp , passHref , replace , shallow , scroll , locale , onClick , onMouseEnter , onTouchStart , legacyBehavior =Boolean(process.env.__NEXT_NEW_LINK_BEHAVIOR) !== true  } = props, restProps = _object_without_properties_loose(props, [\n        \"href\",\n        \"as\",\n        \"children\",\n        \"prefetch\",\n        \"passHref\",\n        \"replace\",\n        \"shallow\",\n        \"scroll\",\n        \"locale\",\n        \"onClick\",\n        \"onMouseEnter\",\n        \"onTouchStart\",\n        \"legacyBehavior\"\n    ]);\n    children = childrenProp;\n    if (legacyBehavior && (typeof children === 'string' || typeof children === 'number')) {\n        children = /*#__PURE__*/ _react.default.createElement(\"a\", null, children);\n    }\n    const p = prefetchProp !== false;\n    let router = _react.default.useContext(_routerContext.RouterContext);\n    // TODO-APP: type error. Remove `as any`\n    const appRouter = _react.default.useContext(_appRouterContext.AppRouterContext);\n    if (appRouter) {\n        router = appRouter;\n    }\n    const { href , as  } = _react.default.useMemo(()=>{\n        const [resolvedHref, resolvedAs] = (0, _router).resolveHref(router, hrefProp, true);\n        return {\n            href: resolvedHref,\n            as: asProp ? (0, _router).resolveHref(router, asProp) : resolvedAs || resolvedHref\n        };\n    }, [\n        router,\n        hrefProp,\n        asProp\n    ]);\n    const previousHref = _react.default.useRef(href);\n    const previousAs = _react.default.useRef(as);\n    // This will return the first child, if multiple are provided it will throw an error\n    let child;\n    if (legacyBehavior) {\n        if (process.env.NODE_ENV === 'development') {\n            if (onClick) {\n                console.warn(`\"onClick\" was passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but \"legacyBehavior\" was set. The legacy behavior requires onClick be set on the child of next/link`);\n            }\n            if (onMouseEnter) {\n                console.warn(`\"onMouseEnter\" was passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but \"legacyBehavior\" was set. The legacy behavior requires onMouseEnter be set on the child of next/link`);\n            }\n            try {\n                child = _react.default.Children.only(children);\n            } catch (err) {\n                if (!children) {\n                    throw new Error(`No children were passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but one child is required https://nextjs.org/docs/messages/link-no-children`);\n                }\n                throw new Error(`Multiple children were passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but only one child is supported https://nextjs.org/docs/messages/link-multiple-children` + (typeof window !== 'undefined' ? \" \\nOpen your browser's console to view the Component stack trace.\" : ''));\n            }\n        } else {\n            child = _react.default.Children.only(children);\n        }\n    } else {\n        if (process.env.NODE_ENV === 'development') {\n            var ref;\n            if (((ref = children) == null ? void 0 : ref.type) === 'a') {\n                throw new Error('Invalid <Link> with <a> child. Please remove <a> or use <Link legacyBehavior>.\\nLearn more: https://nextjs.org/docs/messages/invalid-new-link-with-extra-anchor');\n            }\n        }\n    }\n    const childRef = legacyBehavior ? child && typeof child === 'object' && child.ref : forwardedRef;\n    const [setIntersectionRef, isVisible, resetVisible] = (0, _useIntersection).useIntersection({\n        rootMargin: '200px'\n    });\n    const setRef = _react.default.useCallback((el)=>{\n        // Before the link getting observed, check if visible state need to be reset\n        if (previousAs.current !== as || previousHref.current !== href) {\n            resetVisible();\n            previousAs.current = as;\n            previousHref.current = href;\n        }\n        setIntersectionRef(el);\n        if (childRef) {\n            if (typeof childRef === 'function') childRef(el);\n            else if (typeof childRef === 'object') {\n                childRef.current = el;\n            }\n        }\n    }, [\n        as,\n        childRef,\n        href,\n        resetVisible,\n        setIntersectionRef\n    ]);\n    _react.default.useEffect(()=>{\n        const shouldPrefetch = isVisible && p && (0, _router).isLocalURL(href);\n        const curLocale = typeof locale !== 'undefined' ? locale : router && router.locale;\n        const isPrefetched = prefetched[href + '%' + as + (curLocale ? '%' + curLocale : '')];\n        if (shouldPrefetch && !isPrefetched) {\n            prefetch(router, href, as, {\n                locale: curLocale\n            });\n        }\n    }, [\n        as,\n        href,\n        isVisible,\n        locale,\n        p,\n        router\n    ]);\n    const childProps = {\n        ref: setRef,\n        onClick: (e)=>{\n            if (process.env.NODE_ENV !== 'production') {\n                if (!e) {\n                    throw new Error(`Component rendered inside next/link has to pass click event to \"onClick\" prop.`);\n                }\n            }\n            if (!legacyBehavior && typeof onClick === 'function') {\n                onClick(e);\n            }\n            if (legacyBehavior && child.props && typeof child.props.onClick === 'function') {\n                child.props.onClick(e);\n            }\n            if (!e.defaultPrevented) {\n                linkClicked(e, router, href, as, replace, shallow, scroll, locale, Boolean(appRouter), p);\n            }\n        },\n        onMouseEnter: (e)=>{\n            if (!legacyBehavior && typeof onMouseEnter === 'function') {\n                onMouseEnter(e);\n            }\n            if (legacyBehavior && child.props && typeof child.props.onMouseEnter === 'function') {\n                child.props.onMouseEnter(e);\n            }\n            // Check for not prefetch disabled in page using appRouter\n            if (!(!p && appRouter)) {\n                if ((0, _router).isLocalURL(href)) {\n                    prefetch(router, href, as, {\n                        priority: true\n                    });\n                }\n            }\n        },\n        onTouchStart: (e)=>{\n            if (!legacyBehavior && typeof onTouchStart === 'function') {\n                onTouchStart(e);\n            }\n            if (legacyBehavior && child.props && typeof child.props.onTouchStart === 'function') {\n                child.props.onTouchStart(e);\n            }\n            // Check for not prefetch disabled in page using appRouter\n            if (!(!p && appRouter)) {\n                if ((0, _router).isLocalURL(href)) {\n                    prefetch(router, href, as, {\n                        priority: true\n                    });\n                }\n            }\n        }\n    };\n    // If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is\n    // defined, we specify the current 'href', so that repetition is not needed by the user\n    if (!legacyBehavior || passHref || child.type === 'a' && !('href' in child.props)) {\n        const curLocale = typeof locale !== 'undefined' ? locale : router && router.locale;\n        // we only render domain locales if we are currently on a domain locale\n        // so that locale links are still visitable in development/preview envs\n        const localeDomain = router && router.isLocaleDomain && (0, _getDomainLocale).getDomainLocale(as, curLocale, router.locales, router.domainLocales);\n        childProps.href = localeDomain || (0, _addBasePath).addBasePath((0, _addLocale).addLocale(as, curLocale, router && router.defaultLocale));\n    }\n    return legacyBehavior ? /*#__PURE__*/ _react.default.cloneElement(child, childProps) : /*#__PURE__*/ _react.default.createElement(\"a\", Object.assign({}, restProps, childProps), children);\n});\nvar _default = Link;\nexports.default = _default;\n\nif ((typeof exports.default === 'function' || (typeof exports.default === 'object' && exports.default !== null)) && typeof exports.default.__esModule === 'undefined') {\n  Object.defineProperty(exports.default, '__esModule', { value: true });\n  Object.assign(exports.default, exports);\n  module.exports = exports.default;\n}\n\n//# sourceMappingURL=link.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.useIntersection = useIntersection;\nvar _react = require(\"react\");\nvar _requestIdleCallback = require(\"./request-idle-callback\");\nconst hasIntersectionObserver = typeof IntersectionObserver === 'function';\nconst observers = new Map();\nconst idList = [];\nfunction createObserver(options) {\n    const id = {\n        root: options.root || null,\n        margin: options.rootMargin || ''\n    };\n    const existing = idList.find((obj)=>obj.root === id.root && obj.margin === id.margin);\n    let instance;\n    if (existing) {\n        instance = observers.get(existing);\n        if (instance) {\n            return instance;\n        }\n    }\n    const elements = new Map();\n    const observer = new IntersectionObserver((entries)=>{\n        entries.forEach((entry)=>{\n            const callback = elements.get(entry.target);\n            const isVisible = entry.isIntersecting || entry.intersectionRatio > 0;\n            if (callback && isVisible) {\n                callback(isVisible);\n            }\n        });\n    }, options);\n    instance = {\n        id,\n        observer,\n        elements\n    };\n    idList.push(id);\n    observers.set(id, instance);\n    return instance;\n}\nfunction observe(element, callback, options) {\n    const { id , observer , elements  } = createObserver(options);\n    elements.set(element, callback);\n    observer.observe(element);\n    return function unobserve() {\n        elements.delete(element);\n        observer.unobserve(element);\n        // Destroy observer when there's nothing left to watch:\n        if (elements.size === 0) {\n            observer.disconnect();\n            observers.delete(id);\n            const index = idList.findIndex((obj)=>obj.root === id.root && obj.margin === id.margin);\n            if (index > -1) {\n                idList.splice(index, 1);\n            }\n        }\n    };\n}\nfunction useIntersection({ rootRef , rootMargin , disabled  }) {\n    const isDisabled = disabled || !hasIntersectionObserver;\n    const [visible, setVisible] = (0, _react).useState(false);\n    const [element, setElement] = (0, _react).useState(null);\n    (0, _react).useEffect(()=>{\n        if (hasIntersectionObserver) {\n            if (isDisabled || visible) return;\n            if (element && element.tagName) {\n                const unobserve = observe(element, (isVisible)=>isVisible && setVisible(isVisible), {\n                    root: rootRef == null ? void 0 : rootRef.current,\n                    rootMargin\n                });\n                return unobserve;\n            }\n        } else {\n            if (!visible) {\n                const idleCallback = (0, _requestIdleCallback).requestIdleCallback(()=>setVisible(true));\n                return ()=>(0, _requestIdleCallback).cancelIdleCallback(idleCallback);\n            }\n        }\n    }, [\n        element,\n        isDisabled,\n        rootMargin,\n        rootRef,\n        visible\n    ]);\n    const resetVisible = (0, _react).useCallback(()=>{\n        setVisible(false);\n    }, []);\n    return [\n        setElement,\n        visible,\n        resetVisible\n    ];\n}\n\nif ((typeof exports.default === 'function' || (typeof exports.default === 'object' && exports.default !== null)) && typeof exports.default.__esModule === 'undefined') {\n  Object.defineProperty(exports.default, '__esModule', { value: true });\n  Object.assign(exports.default, exports);\n  module.exports = exports.default;\n}\n\n//# sourceMappingURL=use-intersection.js.map","\"use client\";\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TemplateContext = exports.GlobalLayoutRouterContext = exports.LayoutRouterContext = exports.AppRouterContext = void 0;\nvar _interop_require_default = require(\"@swc/helpers/lib/_interop_require_default.js\").default;\nvar _react = _interop_require_default(require(\"react\"));\n'use client';\nconst AppRouterContext = _react.default.createContext(null);\nexports.AppRouterContext = AppRouterContext;\nconst LayoutRouterContext = _react.default.createContext(null);\nexports.LayoutRouterContext = LayoutRouterContext;\nconst GlobalLayoutRouterContext = _react.default.createContext(null);\nexports.GlobalLayoutRouterContext = GlobalLayoutRouterContext;\nconst TemplateContext = _react.default.createContext(null);\nexports.TemplateContext = TemplateContext;\nif (process.env.NODE_ENV !== 'production') {\n    AppRouterContext.displayName = 'AppRouterContext';\n    LayoutRouterContext.displayName = 'LayoutRouterContext';\n    GlobalLayoutRouterContext.displayName = 'GlobalLayoutRouterContext';\n    TemplateContext.displayName = 'TemplateContext';\n}\n\n//# sourceMappingURL=app-router-context.js.map","module.exports = require('./dist/shared/lib/head')\n","module.exports = require('./dist/client/link')\n","(self[\"webpackChunk_N_E\"] = self[\"webpackChunk_N_E\"] || []).push([[996],{\n\n/***/ 227:\n/***/ (function(module, exports) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.getDomainLocale = getDomainLocale;\nconst basePath = (/* unused pure expression or super */ null && ( false || \"\"));\nfunction getDomainLocale(path, locale, locales, domainLocales) {\n    if (false) {} else {\n        return false;\n    }\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=get-domain-locale.js.map\n\n\n/***/ }),\n\n/***/ 1551:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\"use client\";\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = void 0;\nvar _interop_require_default = (__webpack_require__(2648)/* [\"default\"] */ .Z);\nvar _object_without_properties_loose = (__webpack_require__(7273)/* [\"default\"] */ .Z);\nvar _react = _interop_require_default(__webpack_require__(7294));\nvar _router = __webpack_require__(1003);\nvar _addLocale = __webpack_require__(4465);\nvar _routerContext = __webpack_require__(2692);\nvar _appRouterContext = __webpack_require__(8245);\nvar _useIntersection = __webpack_require__(9246);\nvar _getDomainLocale = __webpack_require__(227);\nvar _addBasePath = __webpack_require__(3468);\n\"use client\";\nconst prefetched = {};\nfunction prefetch(router, href, as, options) {\n    if ( false || !router) return;\n    if (!(0, _router).isLocalURL(href)) return;\n    // Prefetch the JSON page if asked (only in the client)\n    // We need to handle a prefetch error here since we may be\n    // loading with priority which can reject but we don't\n    // want to force navigation since this is only a prefetch\n    Promise.resolve(router.prefetch(href, as, options)).catch((err)=>{\n        if (false) {}\n    });\n    const curLocale = options && typeof options.locale !== \"undefined\" ? options.locale : router && router.locale;\n    // Join on an invalid URI character\n    prefetched[href + \"%\" + as + (curLocale ? \"%\" + curLocale : \"\")] = true;\n}\nfunction isModifiedEvent(event) {\n    const { target  } = event.currentTarget;\n    return target && target !== \"_self\" || event.metaKey || event.ctrlKey || event.shiftKey || event.altKey || event.nativeEvent && event.nativeEvent.which === 2;\n}\nfunction linkClicked(e, router, href, as, replace, shallow, scroll, locale, isAppRouter, prefetchEnabled) {\n    const { nodeName  } = e.currentTarget;\n    // anchors inside an svg have a lowercase nodeName\n    const isAnchorNodeName = nodeName.toUpperCase() === \"A\";\n    if (isAnchorNodeName && (isModifiedEvent(e) || !(0, _router).isLocalURL(href))) {\n        // ignore click for browser’s default behavior\n        return;\n    }\n    e.preventDefault();\n    const navigate = ()=>{\n        // If the router is an NextRouter instance it will have `beforePopState`\n        if (\"beforePopState\" in router) {\n            router[replace ? \"replace\" : \"push\"](href, as, {\n                shallow,\n                locale,\n                scroll\n            });\n        } else {\n            // If `beforePopState` doesn't exist on the router it's the AppRouter.\n            const method = replace ? \"replace\" : \"push\";\n            // Apply `as` if it's provided.\n            router[method](as || href, {\n                forceOptimisticNavigation: !prefetchEnabled\n            });\n        }\n    };\n    if (isAppRouter) {\n        // @ts-expect-error startTransition exists.\n        _react.default.startTransition(navigate);\n    } else {\n        navigate();\n    }\n}\n/**\n * React Component that enables client-side transitions between routes.\n */ const Link = /*#__PURE__*/ _react.default.forwardRef(function LinkComponent(props, forwardedRef) {\n    if (false) {}\n    let children;\n    const { href: hrefProp , as: asProp , children: childrenProp , prefetch: prefetchProp , passHref , replace , shallow , scroll , locale , onClick , onMouseEnter , onTouchStart , legacyBehavior =Boolean(true) !== true  } = props, restProps = _object_without_properties_loose(props, [\n        \"href\",\n        \"as\",\n        \"children\",\n        \"prefetch\",\n        \"passHref\",\n        \"replace\",\n        \"shallow\",\n        \"scroll\",\n        \"locale\",\n        \"onClick\",\n        \"onMouseEnter\",\n        \"onTouchStart\",\n        \"legacyBehavior\"\n    ]);\n    children = childrenProp;\n    if (legacyBehavior && (typeof children === \"string\" || typeof children === \"number\")) {\n        children = /*#__PURE__*/ _react.default.createElement(\"a\", null, children);\n    }\n    const p = prefetchProp !== false;\n    let router = _react.default.useContext(_routerContext.RouterContext);\n    // TODO-APP: type error. Remove `as any`\n    const appRouter = _react.default.useContext(_appRouterContext.AppRouterContext);\n    if (appRouter) {\n        router = appRouter;\n    }\n    const { href , as  } = _react.default.useMemo(()=>{\n        const [resolvedHref, resolvedAs] = (0, _router).resolveHref(router, hrefProp, true);\n        return {\n            href: resolvedHref,\n            as: asProp ? (0, _router).resolveHref(router, asProp) : resolvedAs || resolvedHref\n        };\n    }, [\n        router,\n        hrefProp,\n        asProp\n    ]);\n    const previousHref = _react.default.useRef(href);\n    const previousAs = _react.default.useRef(as);\n    // This will return the first child, if multiple are provided it will throw an error\n    let child;\n    if (legacyBehavior) {\n        if (false) {} else {\n            child = _react.default.Children.only(children);\n        }\n    } else {\n        if (false) { var ref; }\n    }\n    const childRef = legacyBehavior ? child && typeof child === \"object\" && child.ref : forwardedRef;\n    const [setIntersectionRef, isVisible, resetVisible] = (0, _useIntersection).useIntersection({\n        rootMargin: \"200px\"\n    });\n    const setRef = _react.default.useCallback((el)=>{\n        // Before the link getting observed, check if visible state need to be reset\n        if (previousAs.current !== as || previousHref.current !== href) {\n            resetVisible();\n            previousAs.current = as;\n            previousHref.current = href;\n        }\n        setIntersectionRef(el);\n        if (childRef) {\n            if (typeof childRef === \"function\") childRef(el);\n            else if (typeof childRef === \"object\") {\n                childRef.current = el;\n            }\n        }\n    }, [\n        as,\n        childRef,\n        href,\n        resetVisible,\n        setIntersectionRef\n    ]);\n    _react.default.useEffect(()=>{\n        const shouldPrefetch = isVisible && p && (0, _router).isLocalURL(href);\n        const curLocale = typeof locale !== \"undefined\" ? locale : router && router.locale;\n        const isPrefetched = prefetched[href + \"%\" + as + (curLocale ? \"%\" + curLocale : \"\")];\n        if (shouldPrefetch && !isPrefetched) {\n            prefetch(router, href, as, {\n                locale: curLocale\n            });\n        }\n    }, [\n        as,\n        href,\n        isVisible,\n        locale,\n        p,\n        router\n    ]);\n    const childProps = {\n        ref: setRef,\n        onClick: (e)=>{\n            if (false) {}\n            if (!legacyBehavior && typeof onClick === \"function\") {\n                onClick(e);\n            }\n            if (legacyBehavior && child.props && typeof child.props.onClick === \"function\") {\n                child.props.onClick(e);\n            }\n            if (!e.defaultPrevented) {\n                linkClicked(e, router, href, as, replace, shallow, scroll, locale, Boolean(appRouter), p);\n            }\n        },\n        onMouseEnter: (e)=>{\n            if (!legacyBehavior && typeof onMouseEnter === \"function\") {\n                onMouseEnter(e);\n            }\n            if (legacyBehavior && child.props && typeof child.props.onMouseEnter === \"function\") {\n                child.props.onMouseEnter(e);\n            }\n            // Check for not prefetch disabled in page using appRouter\n            if (!(!p && appRouter)) {\n                if ((0, _router).isLocalURL(href)) {\n                    prefetch(router, href, as, {\n                        priority: true\n                    });\n                }\n            }\n        },\n        onTouchStart: (e)=>{\n            if (!legacyBehavior && typeof onTouchStart === \"function\") {\n                onTouchStart(e);\n            }\n            if (legacyBehavior && child.props && typeof child.props.onTouchStart === \"function\") {\n                child.props.onTouchStart(e);\n            }\n            // Check for not prefetch disabled in page using appRouter\n            if (!(!p && appRouter)) {\n                if ((0, _router).isLocalURL(href)) {\n                    prefetch(router, href, as, {\n                        priority: true\n                    });\n                }\n            }\n        }\n    };\n    // If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is\n    // defined, we specify the current 'href', so that repetition is not needed by the user\n    if (!legacyBehavior || passHref || child.type === \"a\" && !(\"href\" in child.props)) {\n        const curLocale = typeof locale !== \"undefined\" ? locale : router && router.locale;\n        // we only render domain locales if we are currently on a domain locale\n        // so that locale links are still visitable in development/preview envs\n        const localeDomain = router && router.isLocaleDomain && (0, _getDomainLocale).getDomainLocale(as, curLocale, router.locales, router.domainLocales);\n        childProps.href = localeDomain || (0, _addBasePath).addBasePath((0, _addLocale).addLocale(as, curLocale, router && router.defaultLocale));\n    }\n    return legacyBehavior ? /*#__PURE__*/ _react.default.cloneElement(child, childProps) : /*#__PURE__*/ _react.default.createElement(\"a\", Object.assign({}, restProps, childProps), children);\n});\nvar _default = Link;\nexports[\"default\"] = _default;\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=link.js.map\n\n\n/***/ }),\n\n/***/ 9246:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.useIntersection = useIntersection;\nvar _react = __webpack_require__(7294);\nvar _requestIdleCallback = __webpack_require__(4686);\nconst hasIntersectionObserver = typeof IntersectionObserver === \"function\";\nconst observers = new Map();\nconst idList = [];\nfunction createObserver(options) {\n    const id = {\n        root: options.root || null,\n        margin: options.rootMargin || \"\"\n    };\n    const existing = idList.find((obj)=>obj.root === id.root && obj.margin === id.margin);\n    let instance;\n    if (existing) {\n        instance = observers.get(existing);\n        if (instance) {\n            return instance;\n        }\n    }\n    const elements = new Map();\n    const observer = new IntersectionObserver((entries)=>{\n        entries.forEach((entry)=>{\n            const callback = elements.get(entry.target);\n            const isVisible = entry.isIntersecting || entry.intersectionRatio > 0;\n            if (callback && isVisible) {\n                callback(isVisible);\n            }\n        });\n    }, options);\n    instance = {\n        id,\n        observer,\n        elements\n    };\n    idList.push(id);\n    observers.set(id, instance);\n    return instance;\n}\nfunction observe(element, callback, options) {\n    const { id , observer , elements  } = createObserver(options);\n    elements.set(element, callback);\n    observer.observe(element);\n    return function unobserve() {\n        elements.delete(element);\n        observer.unobserve(element);\n        // Destroy observer when there's nothing left to watch:\n        if (elements.size === 0) {\n            observer.disconnect();\n            observers.delete(id);\n            const index = idList.findIndex((obj)=>obj.root === id.root && obj.margin === id.margin);\n            if (index > -1) {\n                idList.splice(index, 1);\n            }\n        }\n    };\n}\nfunction useIntersection(param) {\n    let { rootRef , rootMargin , disabled  } = param;\n    const isDisabled = disabled || !hasIntersectionObserver;\n    const [visible, setVisible] = (0, _react).useState(false);\n    const [element, setElement] = (0, _react).useState(null);\n    (0, _react).useEffect(()=>{\n        if (hasIntersectionObserver) {\n            if (isDisabled || visible) return;\n            if (element && element.tagName) {\n                const unobserve = observe(element, (isVisible)=>isVisible && setVisible(isVisible), {\n                    root: rootRef == null ? void 0 : rootRef.current,\n                    rootMargin\n                });\n                return unobserve;\n            }\n        } else {\n            if (!visible) {\n                const idleCallback = (0, _requestIdleCallback).requestIdleCallback(()=>setVisible(true));\n                return ()=>(0, _requestIdleCallback).cancelIdleCallback(idleCallback);\n            }\n        }\n    }, [\n        element,\n        isDisabled,\n        rootMargin,\n        rootRef,\n        visible\n    ]);\n    const resetVisible = (0, _react).useCallback(()=>{\n        setVisible(false);\n    }, []);\n    return [\n        setElement,\n        visible,\n        resetVisible\n    ];\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=use-intersection.js.map\n\n\n/***/ }),\n\n/***/ 8245:\n/***/ (function(__unused_webpack_module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\"use client\";\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.TemplateContext = exports.GlobalLayoutRouterContext = exports.LayoutRouterContext = exports.AppRouterContext = void 0;\nvar _interop_require_default = (__webpack_require__(2648)/* [\"default\"] */ .Z);\nvar _react = _interop_require_default(__webpack_require__(7294));\n\"use client\";\nconst AppRouterContext = _react.default.createContext(null);\nexports.AppRouterContext = AppRouterContext;\nconst LayoutRouterContext = _react.default.createContext(null);\nexports.LayoutRouterContext = LayoutRouterContext;\nconst GlobalLayoutRouterContext = _react.default.createContext(null);\nexports.GlobalLayoutRouterContext = GlobalLayoutRouterContext;\nconst TemplateContext = _react.default.createContext(null);\nexports.TemplateContext = TemplateContext;\nif (false) {} //# sourceMappingURL=app-router-context.js.map\n\n\n/***/ }),\n\n/***/ 9008:\n/***/ (function(module, __unused_webpack_exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(3121)\n\n\n/***/ }),\n\n/***/ 1664:\n/***/ (function(module, __unused_webpack_exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(1551)\n\n\n/***/ })\n\n}]);"],"names":["self","push","module","exports","Object","defineProperty","value","getDomainLocale","path","locale","locales","domainLocales","default","__esModule","assign","__webpack_require__","_interop_require_default","Z","_object_without_properties_loose","_react","_router","_addLocale","_routerContext","_appRouterContext","_useIntersection","_getDomainLocale","_addBasePath","prefetched","prefetch","router","href","as","options","isLocalURL","Promise","resolve","catch","curLocale","Link","forwardRef","props","forwardedRef","children","child","hrefProp","asProp","childrenProp","prefetchProp","passHref","replace","shallow","scroll","onClick","onMouseEnter","onTouchStart","legacyBehavior","Boolean","restProps","createElement","p","useContext","RouterContext","appRouter","AppRouterContext","useMemo","resolvedHref","resolvedAs","resolveHref","previousHref","useRef","previousAs","Children","only","childRef","ref","setIntersectionRef","isVisible","resetVisible","useIntersection","rootMargin","setRef","useCallback","current","el","useEffect","shouldPrefetch","isPrefetched","childProps","e","defaultPrevented","linkClicked","isAppRouter","prefetchEnabled","nodeName","currentTarget","isAnchorNodeName","toUpperCase","isModifiedEvent","event","target","metaKey","ctrlKey","shiftKey","altKey","nativeEvent","which","preventDefault","navigate","forceOptimisticNavigation","startTransition","priority","type","localeDomain","isLocaleDomain","addBasePath","addLocale","defaultLocale","cloneElement","param","rootRef","disabled","isDisabled","hasIntersectionObserver","visible","setVisible","useState","element","setElement","tagName","unobserve","observe","callback","id","observer","elements","createObserver","instance","root","margin","existing","idList","find","obj","observers","get","Map","IntersectionObserver","entries","forEach","entry","isIntersecting","intersectionRatio","set","delete","size","disconnect","index","findIndex","splice","idleCallback","requestIdleCallback","cancelIdleCallback","_requestIdleCallback","__unused_webpack_module","TemplateContext","GlobalLayoutRouterContext","LayoutRouterContext","createContext","__unused_webpack_exports"],"sourceRoot":""}