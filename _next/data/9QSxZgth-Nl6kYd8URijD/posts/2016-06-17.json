{"pageProps":{"post":{"title":"Querying InterMine databases using R","date":"2016-06-17","slug":"2016-06-17","html":"<p>In the past, I had found some ways to do simple queries on InterMine web\nservices using basic HTTP commands with R (see\n<a href=\"https://gist.github.com/cmdcolin/4758167bdd89e6c9c055\">https://gist.github.com/cmdcolin/4758167bdd89e6c9c055</a>)</p>\n<p>However, the InterMineR (<a href=\"https://github.com/intermine/intermineR\">https://github.com/intermine/intermineR</a>)\npackage automates some of these features and makes it easier to load the\ndata in R.</p>\n<h2 id=\"installation\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#installation\"><a href=\"#installation\" style=\"margin-right: 10px\">#</a></a>Installation</h2>\n<p>One way to install InterMineR is to install from github with\nhadley/devtools</p>\n<div class=\"highlight highlight-r\"><pre>install.packages(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>devtools<span class=\"pl-pds\">\"</span></span>)\n<span class=\"pl-e\">devtools</span><span class=\"pl-k\">::</span>install_github(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>hadley/devtools<span class=\"pl-pds\">\"</span></span>)\n<span class=\"pl-e\">devtools</span><span class=\"pl-k\">::</span>install_github(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>intermine/intermineR<span class=\"pl-pds\">\"</span></span>)\n</pre></div>\n<h2 id=\"usage\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#usage\"><a href=\"#usage\" style=\"margin-right: 10px\">#</a></a>Usage</h2>\n<p>Basic usage includes loading theÂ \"intermine URL\" using the initInterMine\nfunction. Then various functions can be called on this result.</p>\n<div class=\"highlight highlight-r\"><pre>library(<span class=\"pl-smi\">InterMineR</span>)\n<span class=\"pl-v\">mine</span><span class=\"pl-k\">=</span>initInterMine(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http://bovinegenome.org/bovinemine/<span class=\"pl-pds\">\"</span></span>)\ngetVersion(<span class=\"pl-smi\">mine</span>) <span class=\"pl-c\">#18, intermine API version</span>\ngetRelease(<span class=\"pl-smi\">mine</span>) <span class=\"pl-c\">#1.0, our data release version</span>\ngetTemplates(<span class=\"pl-smi\">mine</span>) <span class=\"pl-c\"># lists all templates on interminer</span>\n</pre></div>\n<h2 id=\"run-a-template-query\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#run-a-template-query\"><a href=\"#run-a-template-query\" style=\"margin-right: 10px\">#</a></a>Run a template query</h2>\n<p>From the getTemplates function, if you see a template query that you\nwant to run, you can use the getTemplateQuery function with it's name,\nand run it with the runQuery function</p>\n<div class=\"highlight highlight-r\"><pre>getTemplateQuery(<span class=\"pl-smi\">mine</span>,<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>TQ_protein_to_gene<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-c\"># see what template looks like</span>\n<span class=\"pl-v\">template</span><span class=\"pl-k\">=</span>getTemplateQuery(<span class=\"pl-smi\">mine</span>,<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>TQ_protein_to_gene<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-c\"># save template</span>\nrunQuery(<span class=\"pl-smi\">mine</span>,<span class=\"pl-smi\">template</span>) <span class=\"pl-c\"># run the template query with default params, receive data.frame</span>\n</pre></div>\n<p>This method is good, but some improvement could be added to change\ndefault parameters in the template query, etc.</p>\n<h2 id=\"run-query-xml\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#run-query-xml\"><a href=\"#run-query-xml\" style=\"margin-right: 10px\">#</a></a>Run query XML</h2>\n<p>Another option for running queries is to use the query XML that you can\ndownload from the InterMine query result pages.</p>\n<div class=\"highlight highlight-r\"><pre><span class=\"pl-c\"># get all Ensembl genes on chr28 from bovinemine</span>\n<span class=\"pl-v\">query</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>&#x3C;query model=\"genomic\" view=\"Gene.primaryIdentifier</span>\n<span class=\"pl-s\">Gene.secondaryIdentifier Gene.symbol Gene.name Gene.source</span>\n<span class=\"pl-s\">Gene.organism.shortName Gene.chromosome.primaryIdentifier\"</span>\n<span class=\"pl-s\">sortOrder=\"Gene.primaryIdentifier ASC\" >&#x3C;constraint</span>\n<span class=\"pl-s\">path=\"Gene.organism.shortName\" op=\"=\" value=\"B. taurus\"</span>\n<span class=\"pl-s\">/>&#x3C;constraint path=\"Gene.chromosome.primaryIdentifier\" op=\"=\"</span>\n<span class=\"pl-s\">value=\"GK000028.2\" />&#x3C;/query><span class=\"pl-pds\">'</span></span>\n\n<span class=\"pl-v\">results</span><span class=\"pl-k\">=</span>runQuery(<span class=\"pl-smi\">mine</span>, <span class=\"pl-smi\">query</span>)\n\nhead(<span class=\"pl-smi\">results</span>)\n</pre></div>\n<h2 id=\"conclusion\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#conclusion\"><a href=\"#conclusion\" style=\"margin-right: 10px\">#</a></a>Conclusion</h2>\n<p>The InterMineR package has a couple of nice features for getting\nInterMine data with a couple of functions for looking at templates. For\nmany use cases, copying the Query XML from a InterMine webpage and\npasting that into the runQuery function is sufficient and produces a\ndata frame that can be analyzed.</p>\n<p>PS it is not easy to post XML on tumblr after editing the post in\nmarkdown mode. You have to add the lt and gt shortcuts and even after\nthat it gets filtered?!</p>"}},"__N_SSG":true}