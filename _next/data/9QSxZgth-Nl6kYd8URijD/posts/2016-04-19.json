{"pageProps":{"post":{"title":"Creating a testing framework for JBrowse plugins","date":"2016-04-19","slug":"2016-04-19","html":"<p>Testing client side apps requires a couple of tedious steps: Organizing\nthe git clone, the dependencies, wrangling up a web server, the test\nframework, etc.</p>\n<p>When testing a plugin for jbrowse, the dependency tree is interesting\nbecause the plugin \"depends\" on JBrowse to run, but we will use\ntravis-CI and bower inside the git repo for our plugin to accomplish\nthis.</p>\n<p>In this scenario, we will</p>\n<ol>\n<li>\n<p>Use bower to install jasmine and JBrowse (our platform that we write\nthe plugin for)</p>\n</li>\n<li>\n<p>Use nginx to launch a webserver on travis-CI</p>\n</li>\n<li>\n<p>Use the phantomjs run-jasmine.js script to check jasmine test\nresults</p>\n</li>\n</ol>\n<p>Without further ado</p>\n<p>Here is the .travis.yml</p>\n<div class=\"highlight highlight-yaml\"><pre><span class=\"pl-ent\">sudo</span>: <span class=\"pl-c1\">false</span>\n<span class=\"pl-ent\">addons</span>:\n  <span class=\"pl-ent\">apt</span>:\n    <span class=\"pl-ent\">packages</span>:\n      - <span class=\"pl-s\">nginx</span>\n<span class=\"pl-ent\">cache</span>:\n  <span class=\"pl-ent\">apt</span>: <span class=\"pl-c1\">true</span>\n  <span class=\"pl-ent\">directories</span>:\n    - <span class=\"pl-s\">$HOME/.cache/bower</span>\n<span class=\"pl-ent\">before_install</span>:\n  - <span class=\"pl-s\">npm install -g jshint bower</span>\n<span class=\"pl-ent\">install</span>:\n  - <span class=\"pl-s\">bower install</span>\n<span class=\"pl-ent\">before_script</span>:\n  - <span class=\"pl-s\">cat test/travis.conf | envsubst > test/travis-envsubst.conf</span>\n  - <span class=\"pl-s\">nginx -c `pwd`/test/travis-envsubst.conf</span>\n<span class=\"pl-ent\">script</span>:\n  - <span class=\"pl-s\">phantomjs test/run-jasmine.js http://localhost:9000/test/</span>\n  - <span class=\"pl-s\">jshint js</span>\n</pre></div>\n<p>Refer to\n<a href=\"http://searchvoidstar.tumblr.com/post/141858047213/running-nginx-on-containerised-travis-ci-pt-2\">http://searchvoidstar.tumblr.com/post/141858047213/running-nginx-on-containerised-travis-ci-pt-2</a>\nfor details on the nginx setup</p>\n<p>Here is the bower.json</p>\n<div class=\"highlight highlight-json\"><pre>{\n  <span class=\"pl-ent\">\"name\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>sashimiplot<span class=\"pl-pds\">\"</span></span>,\n  <span class=\"pl-ent\">\"homepage\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://github.com/cmdcolin/sashimiplot<span class=\"pl-pds\">\"</span></span>,\n  <span class=\"pl-ent\">\"description\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Sashimi track type for jbrowse<span class=\"pl-pds\">\"</span></span>,\n  <span class=\"pl-ent\">\"main\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>js/main.js<span class=\"pl-pds\">\"</span></span>,\n  <span class=\"pl-ent\">\"keywords\"</span>: [<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>bioinformatics<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>jbrowse<span class=\"pl-pds\">\"</span></span>],\n  <span class=\"pl-ent\">\"license\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>MIT<span class=\"pl-pds\">\"</span></span>,\n  <span class=\"pl-ent\">\"ignore\"</span>: [\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>**/.*<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>node_modules<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>bower_components<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>src<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>test<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>tests<span class=\"pl-pds\">\"</span></span>\n  ],\n  <span class=\"pl-ent\">\"devDependencies\"</span>: {\n    <span class=\"pl-ent\">\"jasmine-core\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>jasmine#^2.4.1<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-ent\">\"jbrowse\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>git://github.com/GMOD/jbrowse.git#master<span class=\"pl-pds\">\"</span></span>\n  }\n}\n</pre></div>\n<p>The key thing here is that it installs jasmine and JBrowse. I set\n.bowerrc to install both jasmine and JBrowse to the \"test\" directory</p>\n<div class=\"highlight highlight-json\"><pre>{\n  <span class=\"pl-ent\">\"directory\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>test<span class=\"pl-pds\">\"</span></span>\n}\n</pre></div>\n<p>With this setup, bower will make a \"flat dependency tree\" in the test\ndirectory, so it will look like this</p>\n<div class=\"highlight highlight-shell\"><pre>    $ ls -1 <span class=\"pl-c1\">test</span>\n    FileSaver\n    dbind\n    dgrid\n    dijit\n    dojo\n    dojox\n    <span class=\"pl-k\">*</span>index.html<span class=\"pl-k\">*</span>\n    jDataView\n    jasmine-core\n    jbrowse\n    json-schema\n    jszlib\n    lazyload\n    put-selector\n    <span class=\"pl-k\">*</span>run-jasmine.js<span class=\"pl-k\">*</span>\n    <span class=\"pl-k\">*</span>spec<span class=\"pl-k\">*</span>\n    <span class=\"pl-k\">*</span>travis.conf<span class=\"pl-k\">*</span>\n    util\n    xstyle\n</pre></div>\n<p>Here the asterisks indicate things that are part of our app, other's are\nautomatically installed by bower (jbrowse, jasmine-core, the dojo\ndependencies, and other things)</p>\n<p>Then we can create the jasmine test/index.html to be something like this</p>\n<div class=\"highlight highlight-text-html-basic\"><pre>&#x3C;!DOCTYPE html PUBLIC <span class=\"pl-s\">\"-//W3C//DTD HTML 4.01 Transitional//EN\"</span> <span class=\"pl-s\">\"http://www.w3.org/TR/html4/loose.dtd\"</span>>\n\n&#x3C;<span class=\"pl-ent\">meta</span> />\nJasmine Spec Runner\n\n&#x3C;<span class=\"pl-ent\">link</span> <span class=\"pl-e\">rel</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>stylesheet<span class=\"pl-pds\">\"</span></span> <span class=\"pl-e\">href</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>jasmine-core/lib/jasmine-core/jasmine.css<span class=\"pl-pds\">\"</span></span> />\n&#x3C;<span class=\"pl-ent\">script</span> <span class=\"pl-e\">src</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>jasmine-core/lib/jasmine-core/jasmine.js<span class=\"pl-pds\">\"</span></span>>&#x3C;/<span class=\"pl-ent\">script</span>>\n&#x3C;<span class=\"pl-ent\">script</span> <span class=\"pl-e\">src</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>jasmine-core/lib/jasmine-core/boot.js<span class=\"pl-pds\">\"</span></span>>&#x3C;/<span class=\"pl-ent\">script</span>>\n&#x3C;<span class=\"pl-ent\">script</span>\n  <span class=\"pl-e\">type</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>text/javascript<span class=\"pl-pds\">\"</span></span>\n  <span class=\"pl-e\">src</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>dojo/dojo.js<span class=\"pl-pds\">\"</span></span>\n  <span class=\"pl-e\">data-dojo-config</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>async: 1<span class=\"pl-pds\">\"</span></span>\n>&#x3C;/<span class=\"pl-ent\">script</span>>\n&#x3C;<span class=\"pl-ent\">script</span> <span class=\"pl-e\">type</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>text/javascript<span class=\"pl-pds\">\"</span></span>>\n  <span class=\"pl-c1\">require</span>({\n    baseUrl<span class=\"pl-k\">:</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>.<span class=\"pl-pds\">'</span></span>,\n    packages<span class=\"pl-k\">:</span> [\n      <span class=\"pl-s\"><span class=\"pl-pds\">'</span>dojo<span class=\"pl-pds\">'</span></span>,\n      <span class=\"pl-s\"><span class=\"pl-pds\">'</span>dijit<span class=\"pl-pds\">'</span></span>,\n      <span class=\"pl-s\"><span class=\"pl-pds\">'</span>dojox<span class=\"pl-pds\">'</span></span>,\n      <span class=\"pl-s\"><span class=\"pl-pds\">'</span>jszlib<span class=\"pl-pds\">'</span></span>,\n      { name<span class=\"pl-k\">:</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>lazyload<span class=\"pl-pds\">'</span></span>, location<span class=\"pl-k\">:</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>lazyload<span class=\"pl-pds\">'</span></span>, main<span class=\"pl-k\">:</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>lazyload<span class=\"pl-pds\">'</span></span> },\n      <span class=\"pl-s\"><span class=\"pl-pds\">'</span>dgrid<span class=\"pl-pds\">'</span></span>,\n      <span class=\"pl-s\"><span class=\"pl-pds\">'</span>xstyle<span class=\"pl-pds\">'</span></span>,\n      <span class=\"pl-s\"><span class=\"pl-pds\">'</span>put-selector<span class=\"pl-pds\">'</span></span>,\n      <span class=\"pl-s\"><span class=\"pl-pds\">'</span>FileSaver<span class=\"pl-pds\">'</span></span>,\n      { name<span class=\"pl-k\">:</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>jDataView<span class=\"pl-pds\">'</span></span>, location<span class=\"pl-k\">:</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>jDataView/src<span class=\"pl-pds\">'</span></span>, main<span class=\"pl-k\">:</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>jdataview<span class=\"pl-pds\">'</span></span> },\n      { name<span class=\"pl-k\">:</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>JBrowse<span class=\"pl-pds\">'</span></span>, location<span class=\"pl-k\">:</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>jbrowse/src/JBrowse<span class=\"pl-pds\">'</span></span> },\n      { name<span class=\"pl-k\">:</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>SashimiPlot<span class=\"pl-pds\">'</span></span>, location<span class=\"pl-k\">:</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>../js<span class=\"pl-pds\">'</span></span> },\n    ],\n  })\n&#x3C;/<span class=\"pl-ent\">script</span>>\n&#x3C;<span class=\"pl-ent\">script</span> <span class=\"pl-e\">type</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>text/javascript<span class=\"pl-pds\">\"</span></span> <span class=\"pl-e\">src</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>spec/SashimiPlot.spec.js<span class=\"pl-pds\">\"</span></span>>&#x3C;/<span class=\"pl-ent\">script</span>>\n&#x3C;<span class=\"pl-ent\">div</span> <span class=\"pl-e\">id</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>sandbox<span class=\"pl-pds\">\"</span></span> <span class=\"pl-e\">style</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-c1\">overflow</span>:<span class=\"pl-c1\">hidden</span>; <span class=\"pl-c1\">height</span>:<span class=\"pl-c1\">1</span><span class=\"pl-k\">px</span>;<span class=\"pl-pds\">\"</span></span>>&#x3C;/<span class=\"pl-ent\">div</span>>\n</pre></div>\n<p>The \"packages\" in the require statement puts all these packages in the\nright \"namespace\" for the AMD includes, and the \"specs\" are defined like\n<code>&#x3C;script type=\"text/javascript\" src=\"spec/Projection.spec.js\">&#x3C;/script></code></p>\n<p>Finally, run-jasmine.js is used to check the results of the jasmine tests (it\nis run via phantomjs in the travis-CI script). It is a special version for the\nmost recent version of jasmine (2.4)\n<a href=\"https://gist.github.com/vmeln/b6cbb319d9a0efc816be\">https://gist.github.com/vmeln/b6cbb319d9a0efc816be</a></p>\n<p>For an example of the project using this, see\n<a href=\"https://github.com/cmdcolin/sashimiplot\">https://github.com/cmdcolin/sashimiplot</a></p>"}},"__N_SSG":true}