{"pageProps":{"post":{"title":"Basic command line productivity tricks and learning experiences","date":"2016-04-06","slug":"2016-04-06","mdxSource":{"compiledSource":"var d=Object.defineProperty,c=Object.defineProperties;var h=Object.getOwnPropertyDescriptors;var n=Object.getOwnPropertySymbols;var s=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;var l=(e,a,t)=>a in e?d(e,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[a]=t,o=(e,a)=>{for(var t in a||(a={}))s.call(a,t)&&l(e,t,a[t]);if(n)for(var t of n(a))r.call(a,t)&&l(e,t,a[t]);return e},m=(e,a)=>c(e,h(a));var u=(e,a)=>{var t={};for(var i in e)s.call(e,i)&&a.indexOf(i)<0&&(t[i]=e[i]);if(e!=null&&n)for(var i of n(e))a.indexOf(i)<0&&r.call(e,i)&&(t[i]=e[i]);return t};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(t){var i=t,{components:e}=i,a=u(i,[\"components\"]);return mdx(MDXLayout,m(o(o({},layoutProps),a),{components:e,mdxType:\"MDXLayout\"}),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"dd deletes line in vim\"),mdx(\"li\",{parentName:\"ul\"},\"Ctrl+d scrolls down in vim\"),mdx(\"li\",{parentName:\"ul\"},`Learn to love your package manager. Homebrew, NPM, gem, cpanm,\ngvm/sdkman, etc. these all do amazing things`),mdx(\"li\",{parentName:\"ul\"},`Once you learn bash, try zsh and oh-my-zsh, they have things like\ncase-insensitive tab completion`),mdx(\"li\",{parentName:\"ul\"},`Don't make scripts that hardcode paths, make reusable command line\nscripts. Use bash as your\\xA0\"REPL\", not R.`),mdx(\"li\",{parentName:\"ul\"},`git log -p helps analyze your log files in full details (make sure\nautocoloring is turned on in your terminal)`),mdx(\"li\",{parentName:\"ul\"},`There are keys to jump forward and backwards on the command line\ntext editor, learn them...don't scroll one char at a time`),mdx(\"li\",{parentName:\"ul\"},`Learn how\\xA0\"PATH\" works. Generally it is just a set of directories\nconnected by\\xA0\":\" separators. You can add things to the path by\nsaying\\xA0\"export PATH=$PATH:/new/directory/to/add\" and you can add\nthis to ~/.bashrc for example`),mdx(\"li\",{parentName:\"ul\"},`When your install process for a command line tool seems like\nnonsense, try homebrew instead. barring that, learn PATH, and how to\nrun\\xA0\"make install\", etc. Most of your headbashing from installing\nprograms is 90% can be explained by not understanding how the\ndeveloper is intending it to be used, 10% of the tool's install\nprocess being wrong`),mdx(\"li\",{parentName:\"ul\"},`Get a static analyzer and basic tests going on your codebase and run\nit on travis-ci. Getting started with travis-ci is kind of a\nlearning curve, but it is worth it`),mdx(\"li\",{parentName:\"ul\"},\"Use cpanm instead of cpan for package management\"),mdx(\"li\",{parentName:\"ul\"},`Vocabulary learning curve: catalina is the same thing as tomcat.\nCATALINA_HOME is the same thing as the tomcat folder`),mdx(\"li\",{parentName:\"ul\"},'alias ll=\"ls -l\", because I type\\xA0\"ll\" hundreds of times a day.'),mdx(\"li\",{parentName:\"ul\"},`For irc productivity, run irssi on a server in a\\xA0\"screen\"\ne.g.\\xA0\"screen irssi\" and then you can come back to conversations\nlater by just logging into the server with ssh`),mdx(\"li\",{parentName:\"ul\"},`Edit ~/.ssh/config to include your hostnames so you don't have to type out\nlong ssh\ncommands\\xA0`,mdx(\"a\",o({parentName:\"li\"},{href:\"http://nerderati.com/2011/03/17/simplify-your-life-with-an-ssh-config-file/\"}),\"http://nerderati.com/2011/03/17/simplify-your-life-with-an-ssh-config-file/\")),mdx(\"li\",{parentName:\"ul\"},`Use spaces instead of tabs in your source code (>:( yes I think\nthis is the one true way)`),mdx(\"li\",{parentName:\"ul\"},`Try out nodejs and browserify in your spare time to make a\\xA0\"npm\"\nbased app in the browser. it's fun.`),mdx(\"li\",{parentName:\"ul\"},`Similarly, try making a simple \"api\" endpoint on the server side\nwith express.js or similar. can get started very quickly.`),mdx(\"li\",{parentName:\"ul\"},`Learn how to get a mindset of writing tests. You can write tests\nproactively (i.e. Test driven development), but you can also write\nthem\\xA0\"reactively\" too (i.e. if have a bug that you fix, you can make\na test to make sure this doesn't happen anymore)`),mdx(\"li\",{parentName:\"ul\"},`Similar to above, tests in this sense are more\\xA0\"sanity checks\" than\nthey are formal proofs. Take\\xA0\"assert\" logic and\\xA0\"debugging\" code out\nof main codebase and put them in tests`),mdx(\"li\",{parentName:\"ul\"},`Minimize comments in your code, and also don't comment out code and\nleave it present. Find a way to delete it and move on!`),mdx(\"li\",{parentName:\"ul\"},`When you have a bunch of .orig files after doing a git merge, just\nuse git clean -f to get rid of them. Similarly, to get rid of\neverythng, including things in your gitignore file (i.e. a super\nclean) use git clean -fdx. It has a --exclude argument too`)),mdx(\"p\",null,`::: {#footer}\n`,\"[ April 6th, 2016 4:23pm ]\",`{#timestamp}\n:::`))}MDXContent.isMDXComponent=!0;\n","scope":{}}}},"__N_SSG":true}