{"pageProps":{"post":{"title":"Running nginx on containerised travis-CI pt 2","date":"2016-03-28","slug":"2016-03-28","mdxSource":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      p: \"p\",\n      code: \"code\",\n      a: \"a\",\n      pre: \"pre\"\n    }, _provideComponents(), props.components);\n    return _jsxs(_Fragment, {\n      children: [_jsxs(_components.p, {\n        children: [\"There are several guides out there about how to setup nginx on travis-CI\\nbut I still found it to be a challenge, especially finding a modern one\\nthat works with the containerized builds. I was frustrated that things\\nlike \", _jsx(_components.code, {\n          children: \"SimpleHTTPServer\"\n        }), \" from python and http-server from npm did not have\\nfully enough features to run our app either (a complex \\\"static-site\\ngenerator\\\" type thing you might say), and I was also too lazy to setup\\n\\\"sauce labs\\\" (which I have not used, but presume has some better ability\\nto run functional/browser tests).\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Essentially, the problem with running nginx under the containerized\\nbuild is that it \\\"likes to be sudo\\\", with many logfiles by default going\\nto different places that only sudo has access to.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"This link is probably the most similar to the technique I use here, but\\nit is now gone (?) and must be accessed through the internet archive!\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.a, {\n          href: \"https://web.archive.org/web/20150919050719/http://www.doublesignal.com/running-nginx-on-containerised-travis-ci\",\n          children: \"http://www.doublesignal.com/running-nginx-on-containerised-travis-ci\"\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"My technique is very similar, however I use an extra trick to set the\\nfile root to the current directory (instead of /tmp/nowhere as in the\\nlink) by using \\\"envsubst\\\" to replace variables in the nginx config file.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Without further ado, the .travis.yml can look like this\"\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          children: \"    sudo: false\\n    addons:\\n      apt:\\n        packages:\\n        - nginx\\n    install:\\n      - cat tests/travis.conf | envsubst > tests/travis-envsubst.conf\\n      - nginx -c `pwd`/tests/travis-envsubst.conf\\n    script:\\n      - wget http://localhost:9000/yourfiles\\n\"\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Then your nginx config file can look like this\"\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          children: \"    worker_processes 10;\\n    pid /tmp/nginx.pid;\\n\\n    error_log /tmp/error.log;\\n\\n    events {\\n        worker_connections 768;\\n    }\\n\\n    http {\\n        client_body_temp_path /tmp/nginx_client_body;\\n        fastcgi_temp_path     /tmp/nginx_fastcgi_temp;\\n        proxy_temp_path       /tmp/nginx_proxy_temp;\\n        scgi_temp_path        /tmp/nginx_scgi_temp;\\n        uwsgi_temp_path       /tmp/nginx_uwsgi_temp;\\n\\n        server {\\n            listen 9000 default_server;\\n\\n            server_name localhost;\\n            location / {\\n                root $TRAVIS_BUILD_DIR;\\n                index  index.html index.htm;\\n            }\\n            error_log /tmp/error.log;\\n            access_log /tmp/access.log;\\n        }\\n    }\\n\\n\"\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Then, when travis-CI is run, it uses envsubst to replace\\n\", _jsx(_components.code, {\n          children: \"$TRAVIS_BUILD_DIR\"\n        }), \" in the tests/travis.conf file, and then boots up\\nnginx\"]\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}}},"__N_SSG":true}