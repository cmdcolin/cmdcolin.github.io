{"pageProps":{"post":{"title":"Creating high-resolution screenshots (of jbrowse) with phantomJS","date":"2015-03-02","slug":"2015-03-02","html":"<p>Generating screenshots that are of high quality can be a great benefit for\nthings like science publications. PhantomJS is great for automating this in a\nreproducible way. While many HTML pages can be rendered in high resolution\nwithout modification, HTML5 canvas apps need special considerations (see this\n<a href=\"http://searchvoidstar.tumblr.com/post/86542847038/high-dpi-rendering-on-html5-canvas-some-problems\">previous post on the topic</a>).</p>\n<p>One of the key things that we noticed when we developed the high resolution\ncanvas rendering (see above link) is that the \"devicePixelRatio\" can increase\nbased on the browser's zoom level, and it can also take fractional values. This\nwas a difficult problem, to make rendering 100% consistent under all\ndevicePixelRatio values, so we created a config parameter called\nhighResolutionMode to accept arbitrary resolutions.</p>\n<p>Later, we learned about PhantomJS and how it can be used for creating\nscreenshots, it was clear that our design for the settings arbitrary scaling\nfactors for the HTML5 canvas was very helpful, as we can set\nhighResolutionMode=4 along with the phantomJS variable page.zoomFactor=4, which\nmatches the resolutions and creates high-res canvas screenshots.</p>\n<p>One of the reasons that this is important is that it doesn't look like PhantomJS\nallows \"devicePixelRatio\" to be emulated, so the page.zoomFactor doesn't\nnecessarily set the devicePixelRatio to a higher number, so being able to set\nthe the arbitrary high resolution canvas scalings ourselves is a good solution.\nReference: issue open Jan 2013 <a href=\"https://github.com/ariya/phantomjs/issues/10964\">https://github.com/ariya/phantomjs/issues/10964</a>\nand we are now in Aug 2015</p>\n<p>Here are some examples of the rendering process.</p>\n<h2 id=\"examples\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#examples\"><a href=\"#examples\" style=\"margin-right: 10px\">#</a></a>Examples</h2>\n<ol>\n<li>\n<p>Rendering screenshots to PNG</p>\n<p>phantomjs rasterize.js\n\"<a href=\"http://localhost/jbrowse/?data=sample_data/json/volvox&#x26;tracklist=0\">http://localhost/jbrowse/?data=sample_data/json/volvox&#x26;tracklist=0</a>\"\noutput.png \"3800px*1600px\" 2</p>\n<p><a href=\"http://i.imgur.com/ABLo6WJ.png\"><img src=\"http://i.imgur.com/ABLo6WJ.png\" alt=\"\"></a></p>\n<p>Figure 1. A basic image output from phantomJS. It uses a zoomFactor=2 on the\ncommand line to match highResolutionMode=2 in the config file. `</p>\n</li>\n<li>\n<p>Rendering screenshots to PDF. In JBrowse, this requires PhantomJS 2.0. Also\nsee footnote.</p>\n<p>phantomjs rasterize.js\n\"<a href=\"http://localhost/jbrowse/?data=sample_data/json/volvox&#x26;tracklist=0\">http://localhost/jbrowse/?data=sample_data/json/volvox&#x26;tracklist=0</a>\"\noutput.pdf \"16in*8in\"</p>\n<p><a href=\"https://www.dropbox.com/s/7pceo4o406dys8s/output.pdf?dl=0\">Dropbox PDF 906kb</a></p>\n<p>Figure 2. Outputted PDF from phantomJS. This still requires setting the\nconfiguration such as highResolutionMode=2 too</p>\n</li>\n</ol>\n<h2 id=\"conclusion\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#conclusion\"><a href=\"#conclusion\" style=\"margin-right: 10px\">#</a></a>Conclusion</h2>\n<p>In the future, we want to consider adding highResolutionMode to be specified via\nthe URL so that it doesn't need to be changed manually, although, setting\nhighResolutionMode=2 by default is not a bad strategy.</p>\n<p><strong>Footnote</strong></p>\n<p>I used the following patch for rasterize.js to help \"fill out\" the page space in\nPDF renderings (otherwise, it is a square page, not super pretty for a\nwidescreen app). I guess rasterize.js is really just a template and not meant to\nbe super multi-purposed, so this custom modification helps for our case.</p>\n<pre><code>\n        diff --git a/examples/rasterize.js b/examples/rasterize.js\n        index b0e0f67..3b0b6e4 100644\n        --- a/examples/rasterize.js\n        +++ b/examples/rasterize.js\n        _@@ -14,6 +14,7 @@ if (system.args.length &#x3C; 3 || system.args.length > 5) {\n            page.viewportSize = { width: 600, height: 600 };\n            if (system.args.length > 3 &#x26;&#x26; system.args[2].substr(-4) === \".pdf\") {\n                size = system.args[3].split('_');\n\n        +       page.viewportSize.width *= parseInt(size[0])/parseInt(size[1]);\n                page.paperSize = size.length === 2 ? { width: size[0], height: size[1], margin: '0px' }\n\n</code></pre>\n<p><strong>Reference</strong></p>\n<p><a href=\"https://gmod.org/wiki/JBrowse_Configuration_Guide#Rendering_high_resolution_screenshots_using_PhantomJS\">https://gmod.org/wiki/JBrowse_Configuration_Guide#Rendering_high_resolution_screenshots_using_PhantomJS</a></p>\n<p><strong>Comparison</strong></p>\n<p><img src=\"/media/112494997473_0.png\" alt=\"image\"></p>\n<p>Big improvement on font rendering</p>"}},"__N_SSG":true}