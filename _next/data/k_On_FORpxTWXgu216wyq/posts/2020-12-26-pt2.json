{"pageProps":{"post":{"title":"Making a HTTPS accessible S3 powered static site with CloudFront+route 53","date":"2020-12-26","slug":"2020-12-26-pt2","html":"<p>This is not a very authoritative post because I stumbled though this but I think\nI got it working now on my website :)</p>\n<h2 id=\"setup-your-s3-bucket\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#setup-your-s3-bucket\"><a href=\"#setup-your-s3-bucket\" style=\"margin-right: 10px\">#</a></a>Setup your S3 bucket</h2>\n<p>First setup your S3 bucket, your bucket must be named yourdomain.com e.g. named\nafter your domain</p>\n<p>Then if you have a create-react-app setup I add a script in package.json that\nruns</p>\n<pre class=\"shiki poimandres\" style=\"background-color: #1b1e28\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #A6ACCD\">{</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #E4F0FB\">scripts</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">: {</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #ADD7FF\">predeploy</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">: </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #5DE4C7\">npm run build</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">,</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #ADD7FF\">deploy</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">: </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #5DE4C7\">aws sync --delete build s3://yourdomain.com</span><span style=\"color: #A6ACCD\">\"</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  }</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">}</span></span></code></pre>\n<p>Then we can run \"yarn deploy\" and it will automatically upload our\ncreate-react-app website to our S3 static site bucket.</p>\n<p>Then make sure your bucket has public permissions enabled\n<a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/example-bucket-policies.html#example-bucket-policies-use-case-2\">https://docs.aws.amazon.com/AmazonS3/latest/dev/example-bucket-policies.html#example-bucket-policies-use-case-2</a>.\nThen make sure your bucket has \"static site hosting\" enabled too</p>\n<h2 id=\"setup-route-53-and-make-your-ns-entries-in-domainsgooglecom\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#setup-route-53-and-make-your-ns-entries-in-domainsgooglecom\"><a href=\"#setup-route-53-and-make-your-ns-entries-in-domainsgooglecom\" style=\"margin-right: 10px\">#</a></a>Setup route 53, and make your NS entries in domains.google.com</h2>\n<p>I bought a domain with domains.google.com</p>\n<p>Google then emailed me to validate my ownership</p>\n<p>Then I went to aws.amazon.com route 53 and I created a hosted zone</p>\n<p>This generated 4 name server entries and I added those to the domains.google.com\nsite</p>\n<p><img src=\"/media/638618421776515072_0.png\" alt=\"\"></p>\n<p>Screenshot shows copying the NS values from route 53 to the name servers area of\ndomains.google.com</p>\n<h2 id=\"setup-your-amazon-certificate-for-making-ssl-work-on-cloudfront\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#setup-your-amazon-certificate-for-making-ssl-work-on-cloudfront\"><a href=\"#setup-your-amazon-certificate-for-making-ssl-work-on-cloudfront\" style=\"margin-right: 10px\">#</a></a>Setup your Amazon certificate for making SSL work on CloudFront</h2>\n<p>To properly setup However, this does not work so you need to go to Amazon\nCertificates->Provision certificates</p>\n<p>We request the certificate for</p>\n<p><a href=\"http://www.yourdomain.com\">www.yourdomain.com</a> yourdomain.com</p>\n<p>Then it generates some codes for a CNAME value for each of those two entries,\nand has a button to autoimport those CNAME values to route53</p>\n<p>Then it will say \"Pending validation\"...I waited like an hour and then it\nchanged to \"Success\".</p>\n<p><img src=\"/media/638618421776515072_1.png\" alt=\"\"></p>\n<p>Screenshot shows the now successful Amazon Certificate. After you get this, you\ncan proceed to finishing your cloudfront</p>\n<h2 id=\"create-a-cloudfront-distribution-and-add-alternative-cname-entries-for-your-domain\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#create-a-cloudfront-distribution-and-add-alternative-cname-entries-for-your-domain\"><a href=\"#create-a-cloudfront-distribution-and-add-alternative-cname-entries-for-your-domain\" style=\"margin-right: 10px\">#</a></a>Create a CloudFront distribution and add \"Alternative CNAME\" entries for your domain</h2>\n<p>Then we can update our CloudFront distribution and add these to the \"Alternative\nCNAME\" input box</p>\n<p>yourdomain.com <a href=\"http://www.yourdomain.com\">www.yourdomain.com</a></p>\n<p>Note also that I first generated my certificate in us-east-2 but the \"Import\ncertificate form\" in cloudfront said I had to create it in us-east-1</p>\n<p><img src=\"/media/638618421776515072_2.png\" alt=\"\"></p>\n<h2 id=\"add-a-default-object-indexhtml-to-the-cloudfront-setting\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#add-a-default-object-indexhtml-to-the-cloudfront-setting\"><a href=\"#add-a-default-object-indexhtml-to-the-cloudfront-setting\" style=\"margin-right: 10px\">#</a></a>Add a default object index.html to the CloudFront setting</h2>\n<p>Make your CloudFront \"default object\" is index.html</p>\n<p>You have to manually type this in :)</p>\n<h2 id=\"add-the-cloudfront-distribution-to-your-route-53\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#add-the-cloudfront-distribution-to-your-route-53\"><a href=\"#add-the-cloudfront-distribution-to-your-route-53\" style=\"margin-right: 10px\">#</a></a>Add the CloudFront distribution to your Route 53</h2>\n<p>Add a Route 53 \"A\" record that points to the CloudFront domain name e.g.\nd897d897d87d98dd.cloudfront.net</p>\n<h2 id=\"summary-of-steps-needed\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#summary-of-steps-needed\"><a href=\"#summary-of-steps-needed\" style=\"margin-right: 10px\">#</a></a>Summary of steps needed</h2>\n<p>The general hindsight 20/20 procedure is</p>\n<ol>\n<li>Upload your static content to an S3 bucket called yoursite.com (must be your\ndomain name)</li>\n<li>Make your S3 bucket have the \"static website\" setting on in the properties\nmenu and add a permissions policy that supports getObject e.g.\n<a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/example-bucket-policies.html#example-bucket-policies-use-case-2\">https://docs.aws.amazon.com/AmazonS3/latest/dev/example-bucket-policies.html#example-bucket-policies-use-case-2</a></li>\n<li>Create a CloudFront distribution for your website</li>\n<li>Make the CloudFront default object index.html</li>\n<li>Create your domain with domains.google.com or similar</li>\n<li>Point the google domain's name server to Route 53 NS list from AWS</li>\n<li>Add Route 53 A records that point to the CloudFront domain name e.g.\nd897d897d87d98dd.cloudfront.net</li>\n<li>Create Amazon issued certificate for yourdomain.com, which can auto-import a\nvalidation CNAME to your Route 53</li>\n<li>Make your CloudFront domain support your Alternative CNAME's e.g.\nyourdomain.com which requires importing (e.g. selecting from a list that\nthey auto-populate) your Amazon-issued-certificate</li>\n</ol>\n<h2 id=\"troubleshooting-and-notes\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#troubleshooting-and-notes\"><a href=\"#troubleshooting-and-notes\" style=\"margin-right: 10px\">#</a></a>Troubleshooting and notes</h2>\n<p>Problem: Your website gives 403 CloudFlare error Solution: You have to get the\nAlternateive CNAME configuration setup (pre-step involves the certificate\nrequest and validation)</p>\n<p>Problem: Your website gives an object not found error Solution: Set the\nCloudFront \"default object\" to index.html</p>\n<h2 id=\"random-comment\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#random-comment\"><a href=\"#random-comment\" style=\"margin-right: 10px\">#</a></a>Random comment</h2>\n<p>This is one of those processes (creating the cloudfront/route 53) that probably\ncould have done with the aws-sam CLI and it would have possibly been easier, it\nis quite fiddly doing all these steps in the web interface</p>"}},"__N_SSG":true}