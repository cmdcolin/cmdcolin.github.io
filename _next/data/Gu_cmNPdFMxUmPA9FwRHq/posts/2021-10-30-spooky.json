{"pageProps":{"post":{"title":"A spooky error when you have a string bigger than 512MB in Chrome","date":"2021-10-30","slug":"2021-10-30-spooky","html":"<p>Now gather round for a spooky story</p>\n<p>Late one night... in the haunted office space castle (hindenbugs cackling in\nthe background amongst the dusty technical books) the midnight candles were\nburning bright and we entered data for a user file</p>\n<p>A simple 52MB gzipped datafile that we want to process in the browser. We unzip\nit, decode it, and ...an error</p>\n<p>ERROR: data not found</p>\n<p><img src=\"/media/pumpkin-dark.jpg\" alt=\"\"></p>\n<p>But... our code is so simple (we of course abide by the religion of writing\n\"simple code\" you know)...what could be happening?</p>\n<p>The code looks like this</p>\n<div class=\"highlight highlight-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-c1\">buf</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">unzip</span>(file)\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">str</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-en\">TextDecoder</span>().<span class=\"pl-en\">decode</span>(buf)\n</pre></div>\n<p>We trace it back and run a console.log(str)</p>\n<p>It looks empty. We try running console.log(str.length) ... it prints out 0</p>\n<p>But if we console.log(buffer.length) we get 546,483,710 bytes...</p>\n<p>What could be happening?</p>\n<p>We see in the TextDecoder documentation that it has a note called \"fatal\". We\ntry</p>\n<div class=\"highlight highlight-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-c1\">buf</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">unzip</span>(file)\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">str</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-en\">TextDecoder</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>utf8<span class=\"pl-pds\">'</span></span>, { fatal<span class=\"pl-k\">:</span> <span class=\"pl-c1\">true</span> }).<span class=\"pl-en\">decode</span>(buf)\n</pre></div>\n<p>This doesn't change the results though</p>\n<p>Then it dawns on us while the lightning hits and the thunderclap booms and the\nwind blows through the rattly windows</p>\n<p>We have hit...the maximum string length in Chrome</p>\n<p>BWAHAHAHAHA</p>\n<p>The maximum string length!!! Nooooooo</p>\n<p>It is 512MB on the dot... 536,870,888 bytes. We test this to be sure</p>\n<div class=\"highlight highlight-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-c1\">len</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">536_870_888</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">buf</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-en\">Uint8Array</span>(len)\n<span class=\"pl-k\">for</span> (<span class=\"pl-k\">let</span> i <span class=\"pl-k\">=</span> <span class=\"pl-c1\">0</span>; i <span class=\"pl-k\">&#x3C;</span> len; i<span class=\"pl-k\">++</span>) {\n  buf[i] <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>a<span class=\"pl-pds\">'</span></span>.<span class=\"pl-c1\">charCodeAt</span>(<span class=\"pl-c1\">0</span>)\n}\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">str</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-en\">TextDecoder</span>().<span class=\"pl-en\">decode</span>(buf)\n<span class=\"pl-en\">console</span>.<span class=\"pl-c1\">log</span>(<span class=\"pl-smi\">str</span>.<span class=\"pl-c1\">length</span>)\n</pre></div>\n<p>This is correct, outputs 536,870,888</p>\n<p>With anything, even one byte more, it fails and outputs 0</p>\n<p>happy halloween!!</p>\n<p>pumpkin photo source:\n<a href=\"http://mountainbikerak.blogspot.com/2010/11/google-chrome-pumpkin.html\">http://mountainbikerak.blogspot.com/2010/11/google-chrome-pumpkin.html</a></p>\n<p>chrome 95 tested</p>\n<p>nodejs 15 - at 512MB+1 bytes it prints an error message <code>Error: Cannot create a string longer than 0x1fffffe8 characters</code> for significantly greater than 512MB\ne.g. 600MB it actually prints a different error <code>TypeError [ERR_ENCODING_INVALID_ENCODED_DATA]: The encoded data was not valid for encoding utf-8</code>)</p>\n<p>firefox 93 - goes up to ~1GB but then gives Exception <code>{ name: \"NS_ERROR_OUT_OF_MEMORY\", message: \"\", result: 2147942414 }</code></p>\n<p>midori 6 (safari-alike/webkit) - goes up to ~2GB fine! will have to test more</p>"}},"__N_SSG":true}