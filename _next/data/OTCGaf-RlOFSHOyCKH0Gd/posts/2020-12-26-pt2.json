{"pageProps":{"post":{"title":"Making a HTTPS accessible S3 powered static site with CloudFront+route 53","date":"2020-12-26","slug":"2020-12-26-pt2","content":"<p>This is not a very authoritative post because I stumbled though this but\nI think I got it working now on my website :)</p>\n<h2>Setup your S3 bucket</h2>\n<p>First setup your S3 bucket, your bucket must be named yourdomain.com\ne.g. named after your domain</p>\n<p>Then if you have a create-react-app setup I add a script in package.json\nthat runs</p>\n<pre><code> \"predeploy\": \"npm run build\",\n \"deploy\": \"aws sync --delete build s3://yourdomain.com\"\n</code></pre>\n<p>Then we can run \"yarn deploy\" and it will automatically upload our\ncreate-react-app website to our S3 static site bucket.</p>\n<p>Then make sure your bucket has public permissions enabled\n<a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/example-bucket-policies.html#example-bucket-policies-use-case-2\">https://docs.aws.amazon.com/AmazonS3/latest/dev/example-bucket-policies.html#example-bucket-policies-use-case-2</a>Then\nmake sure your bucket has \"static site hosting\" enabled too</p>\n<h2>Setup route 53, and make your NS entries in domains.google.com</h2>\n<p>I bought a domain with domains.google.com</p>\n<p>Google then emailed me to validate my ownership</p>\n<p>Then I went to aws.amazon.com route 53 and I created a hosted zone</p>\n<p>This generated 4 name server entries and I added those to the\ndomains.google.com site</p>\n<p><img src=\"/media/638618421776515072_0.png\" alt=\"\"></p>\n<p>Screenshot shows copying the NS values from route 53 to the name servers\narea of domains.google.com</p>\n<h2>Setup your Amazon certificate for making SSL work on CloudFront</h2>\n<p>To properly setup However, this does not work so you need to go to\nAmazon Certificates->Provision certificates</p>\n<p>We request the certificate for</p>\n<p><a href=\"http://www.yourdomain.com\">www.yourdomain.com</a>\nyourdomain.com</p>\n<p>Then it generates some codes for a CNAME value for each of those two\nentries, and has a button to autoimport those CNAME values to route53</p>\n<p>Then it will say \"Pending validation\"...I waited like an hour and then\nit changed to \"Success\".</p>\n<p><img src=\"/media/638618421776515072_1.png\" alt=\"\"></p>\n<p>Screenshot shows the now successful Amazon Certificate. After you get\nthis, you can proceed to finishing your cloudfront</p>\n<h2>Create a CloudFront distribution and add \"Alternative CNAME\" entries for your domain</h2>\n<p>Then we can update our CloudFront distribution and add these to\nthe \"Alternative CNAME\" input box</p>\n<p>yourdomain.com\n<a href=\"http://www.yourdomain.com\">www.yourdomain.com</a></p>\n<p>Note also that I first generated my certificate in us-east-2 but the\n\"Import certificate form\" in cloudfront said I had to create it in\nus-east-1</p>\n<p><img src=\"/media/638618421776515072_2.png\" alt=\"\"></p>\n<h2>Add a default object index.html to the CloudFront setting</h2>\n<p>Make your CloudFront \"default object\" is index.html</p>\n<p>You have to manually type this in :)</p>\n<h2>Add the CloudFront distribution to your Route 53</h2>\n<p>Add a Route 53 \"A\" record that points to the CloudFront domain name e.g.\nd897d897d87d98dd.cloudfront.net</p>\n<h2>Summary of steps needed</h2>\n<p>The general hindsight 20/20 procedure is</p>\n<ol>\n<li>Upload your static content to an S3 bucket called yoursite.com (must\nbe your domain name)</li>\n<li>Make your S3 bucket have the \"static website\" setting on in the\nproperties menu and add a permissions policy that supports getObject\ne.g. <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/example-bucket-policies.html#example-bucket-policies-use-case-2\">https://docs.aws.amazon.com/AmazonS3/latest/dev/example-bucket-policies.html#example-bucket-policies-use-case-2</a></li>\n<li>Create a CloudFront distribution for your website</li>\n<li>Make the CloudFront default object index.html</li>\n<li>Create your domain with domains.google.com or similar</li>\n<li>Point the google domain's name server to Route 53 NS list from AWS</li>\n<li>Add Route 53 A records that point to the CloudFront domain name e.g.\nd897d897d87d98dd.cloudfront.net</li>\n<li>Create Amazon issued certificate for yourdomain.com, which can\nauto-import a validation CNAME to your Route 53</li>\n<li>Make your CloudFront domain support your Alternative CNAME's e.g.\nyourdomain.com which requires importing (e.g. selecting from a list\nthat they auto-populate) your Amazon-issued-certificate</li>\n</ol>\n<h2>Troubleshooting and notes</h2>\n<p>Problem: Your website gives 403 CloudFlare error\nSolution: You have to get the Alternateive CNAME configuration setup\n(pre-step involves the certificate request and validation)</p>\n<p>Problem: Your website gives an object not found error\nSolution: Set the CloudFront \"default object\" to index.html</p>\n<h2>Random comment</h2>\n<p>This is one of those processes (creating the cloudfront/route 53) that\nprobably could have done with the aws-sam CLI and it would have possibly\nbeen easier, it is quite fiddly doing all these steps in the web\ninterface</p>\n"}},"__N_SSG":true}