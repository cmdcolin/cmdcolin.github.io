{"pageProps":{"post":{"title":"Querying InterMine databases using R","date":"2016-06-17","slug":"2016-06-17","content":"<p>In the past, I had found some ways to do simple queries on InterMine web\nservices using basic HTTP commands with R (see\n<a href=\"https://gist.github.com/cmdcolin/4758167bdd89e6c9c055\">https://gist.github.com/cmdcolin/4758167bdd89e6c9c055</a>)</p>\n<p>However, the InterMineR (<a href=\"https://github.com/intermine/intermineR\">https://github.com/intermine/intermineR</a>)\npackage automates some of these features and makes it easier to load the\ndata in R.</p>\n<p><strong>Installation</strong></p>\n<p>One way to install InterMineR is to install from github with\nhadley/devtools</p>\n<pre><code>install.packages(\"devtools\")\ndevtools::install_github(\"hadley/devtools\")\ndevtools::install_github(\"intermine/intermineR\")\n</code></pre>\n<p><strong>Usage</strong></p>\n<p>Basic usage includes loading theÂ \"intermine URL\" using the initInterMine\nfunction. Then various functions can be called on this result.</p>\n<pre><code>library(InterMineR)\nmine=initInterMine(\"http://bovinegenome.org/bovinemine/\")\ngetVersion(mine) #18, intermine API version\ngetRelease(mine) #1.0, our data release version\ngetTemplates(mine) # lists all templates on interminer\n</code></pre>\n<p><strong>Run a template query</strong></p>\n<p>From the getTemplates function, if you see a template query that you\nwant to run, you can use the getTemplateQuery function with it's name,\nand run it with the runQuery function</p>\n<pre><code>getTemplateQuery(mine,\"TQ_protein_to_gene\") # see what template looks like\ntemplate=getTemplateQuery(mine,\"TQ_protein_to_gene\") # save template\nrunQuery(mine,template) # run the template query with default params, receive data.frame\n</code></pre>\n<p>This method is good, but some improvement could be added to change\ndefault parameters in the template query, etc.</p>\n<p><strong>Run query XML</strong></p>\n<p>Another option for running queries is to use the query XML that you can\ndownload from the InterMine query result pages.</p>\n<pre><code> # get all Ensembl genes on chr28 from bovinemine\n query='&#x3C;query model=\"genomic\" view=\"Gene.primaryIdentifier\n Gene.secondaryIdentifier Gene.symbol Gene.name Gene.source\n Gene.organism.shortName Gene.chromosome.primaryIdentifier\"\n sortOrder=\"Gene.primaryIdentifier ASC\" >&#x3C;constraint\n path=\"Gene.organism.shortName\" op=\"=\" value=\"B. taurus\"\n />&#x3C;constraint path=\"Gene.chromosome.primaryIdentifier\" op=\"=\"\n value=\"GK000028.2\" />&#x3C;/query>'\n\n results=runQuery(mine, query)\n\n head(results)\n</code></pre>\n<p><strong>Conclusion</strong></p>\n<p>The InterMineR package has a couple of nice features for getting\nInterMine data with a couple of functions for looking at templates. For\nmany use cases, copying the Query XML from a InterMine webpage and\npasting that into the runQuery function is sufficient and produces a\ndata frame that can be analyzed.</p>\n<p>PS it is not easy to post XML on tumblr after editing the post in\nmarkdown mode. You have to add the lt and gt shortcuts and even after\nthat it gets filtered?!</p>\n"}},"__N_SSG":true}