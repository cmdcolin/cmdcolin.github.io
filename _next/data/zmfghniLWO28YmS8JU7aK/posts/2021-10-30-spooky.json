{"pageProps":{"post":{"title":"A spooky error when you have a string bigger than 512MB in Chrome","date":"2021-10-30","slug":"2021-10-30-spooky","html":"<p>Now gather round for a spooky story</p>\n<p>Late one night... in the haunted office/castle the midnight candles\nwere burning bright and we entered data for a user file....</p>\n<p>(hindenbugs cackling in the background, dusty technical books line the dark\nshelves)</p>\n<p>A simple 52MB gzipped datafile that we want to process in the browser. We unzip\nit, decode it, and ... we see an error!!! <strong>LIGHTNING CRACKS</strong></p>\n<p><img src=\"/media/pumpkin-dark.jpg\" alt=\"\"></p>\n<p>But... our code is so simple (we of course abide by the religion of writing\n\"simple code\" you know)...what could be happening?</p>\n<p>The code looks like this</p>\n<pre class=\"shiki\" style=\"background-color: #1b1e28\"><code><span class=\"line\"><span style=\"color: #91B4D5\">const</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #E4F0FB\">buf</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #91B4D5\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #E4F0FBD0\">unzip</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #E4F0FB\">file</span><span style=\"color: #A6ACCD\">)</span></span>\n<span class=\"line\"><span style=\"color: #91B4D5\">const</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #E4F0FB\">str</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #91B4D5\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #5DE4C7\">new</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #E4F0FBD0\">TextDecoder</span><span style=\"color: #A6ACCD\">().</span><span style=\"color: #E4F0FBD0\">decode</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #E4F0FB\">buf</span><span style=\"color: #A6ACCD\">)</span></span></code></pre>\n<p>We trace it back and run a <code>console.log(str)</code></p>\n<p>It looks empty. We try running <code>console.log(str.length)</code> ... it prints out 0</p>\n<p>But if we look at <code>console.log(buffer.length)</code> we get 546,483,710 bytes...</p>\n<p>What could be happening?</p>\n<p>We see in the <code>TextDecoder</code> documentation that it has a note called \"fatal\". We\ntry</p>\n<pre class=\"shiki\" style=\"background-color: #1b1e28\"><code><span class=\"line\"><span style=\"color: #91B4D5\">const</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #E4F0FB\">buf</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #91B4D5\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #E4F0FBD0\">unzip</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #E4F0FB\">file</span><span style=\"color: #A6ACCD\">)</span></span>\n<span class=\"line\"><span style=\"color: #91B4D5\">const</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #E4F0FB\">str</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #91B4D5\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #5DE4C7\">new</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #E4F0FBD0\">TextDecoder</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #A6ACCD\">'</span><span style=\"color: #5DE4C7\">utf8</span><span style=\"color: #A6ACCD\">'</span><span style=\"color: #A6ACCD\">, {</span><span style=\"color: #E4F0FB\"> </span><span style=\"color: #ADD7FF\">fatal</span><span style=\"color: #A6ACCD\">:</span><span style=\"color: #ADD7FF\"> </span><span style=\"color: #5DE4C7\">true</span><span style=\"color: #ADD7FF\"> </span><span style=\"color: #A6ACCD\">}).</span><span style=\"color: #E4F0FBD0\">decode</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #E4F0FB\">buf</span><span style=\"color: #A6ACCD\">)</span></span></code></pre>\n<p>This doesn't change the results though</p>\n<p>Then it dawns on us while the lightning hits and the thunderclap booms and the\nwind blows through the rattly windows</p>\n<p>We have hit...the maximum string length in Chrome</p>\n<p>BWAHAHAHAHA</p>\n<p>The maximum string length!!! Nooooooo</p>\n<p>It is 512MB on the dot... 536,870,888 bytes. We test this to be sure</p>\n<pre class=\"shiki\" style=\"background-color: #1b1e28\"><code><span class=\"line\"><span style=\"color: #91B4D5\">const</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #E4F0FB\">len</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #91B4D5\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #5DE4C7\">536_870_888</span></span>\n<span class=\"line\"><span style=\"color: #91B4D5\">const</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #E4F0FB\">buf</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #91B4D5\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #5DE4C7\">new</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #E4F0FBD0\">Uint8Array</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #E4F0FB\">len</span><span style=\"color: #A6ACCD\">)</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">for (</span><span style=\"color: #91B4D5\">let</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #E4F0FB\">i</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #91B4D5\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #5DE4C7\">0</span><span style=\"color: #A6ACCD\">; </span><span style=\"color: #E4F0FB\">i</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #91B4D5\">&#x3C;</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #E4F0FB\">len</span><span style=\"color: #A6ACCD\">; </span><span style=\"color: #E4F0FB\">i</span><span style=\"color: #91B4D5\">++</span><span style=\"color: #A6ACCD\">) {</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #E4F0FB\">buf</span><span style=\"color: #A6ACCD\">[</span><span style=\"color: #E4F0FB\">i</span><span style=\"color: #A6ACCD\">] </span><span style=\"color: #91B4D5\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #A6ACCD\">'</span><span style=\"color: #5DE4C7\">a</span><span style=\"color: #A6ACCD\">'</span><span style=\"color: #A6ACCD\">.</span><span style=\"color: #E4F0FBD0\">charCodeAt</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #5DE4C7\">0</span><span style=\"color: #A6ACCD\">)</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">}</span></span>\n<span class=\"line\"><span style=\"color: #91B4D5\">const</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #E4F0FB\">str</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #91B4D5\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #5DE4C7\">new</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #E4F0FBD0\">TextDecoder</span><span style=\"color: #A6ACCD\">().</span><span style=\"color: #E4F0FBD0\">decode</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #E4F0FB\">buf</span><span style=\"color: #A6ACCD\">)</span></span>\n<span class=\"line\"><span style=\"color: #E4F0FB\">console</span><span style=\"color: #A6ACCD\">.</span><span style=\"color: #E4F0FBD0\">log</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #E4F0FB\">str</span><span style=\"color: #A6ACCD\">.</span><span style=\"color: #E4F0FB\">length</span><span style=\"color: #A6ACCD\">)</span></span></code></pre>\n<p>This is correct, outputs 536,870,888</p>\n<p>With anything, even one byte more, it fails and outputs 0</p>\n<p>happy halloween!!</p>\n<p>pumpkin photo source:\n<a href=\"http://mountainbikerak.blogspot.com/2010/11/google-chrome-pumpkin.html\">http://mountainbikerak.blogspot.com/2010/11/google-chrome-pumpkin.html</a></p>\n<ul>\n<li>\n<p>chrome 95 tested</p>\n</li>\n<li>\n<p>nodejs 15 - at 512MB+1 bytes it prints an error message <code>Error: Cannot create a string longer than 0x1fffffe8 characters</code> for significantly greater than 512MB\ne.g. 600MB it actually prints a different error <code>TypeError [ERR_ENCODING_INVALID_ENCODED_DATA]: The encoded data was not valid for encoding utf-8</code>)</p>\n</li>\n<li>\n<p>firefox 93 - goes up to ~1GB but then gives Exception <code>{ name: \"NS_ERROR_OUT_OF_MEMORY\", message: \"\", result: 2147942414 }</code></p>\n</li>\n<li>\n<p>midori 6 (safari-alike/webkit) - goes up to ~2GB fine! will have to test more</p>\n</li>\n</ul>"}},"__N_SSG":true}