{"pageProps":{"post":{"title":"A spooky error when you have a string bigger than 512MB in Chrome","date":"2021-10-30","slug":"2021-10-30-spooky","mdxSource":{"compiledSource":"var h=Object.defineProperty,d=Object.defineProperties;var u=Object.getOwnPropertyDescriptors;var p=Object.getOwnPropertySymbols;var r=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable;var s=(e,t,o)=>t in e?h(e,t,{enumerable:!0,configurable:!0,writable:!0,value:o}):e[t]=o,a=(e,t)=>{for(var o in t||(t={}))r.call(t,o)&&s(e,o,t[o]);if(p)for(var o of p(t))i.call(t,o)&&s(e,o,t[o]);return e},l=(e,t)=>d(e,u(t));var c=(e,t)=>{var o={};for(var n in e)r.call(e,n)&&t.indexOf(n)<0&&(o[n]=e[n]);if(e!=null&&p)for(var n of p(e))t.indexOf(n)<0&&i.call(e,n)&&(o[n]=e[n]);return o};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(o){var n=o,{components:e}=n,t=c(n,[\"components\"]);return mdx(MDXLayout,l(a(a({},layoutProps),t),{components:e,mdxType:\"MDXLayout\"}),mdx(\"p\",null,\"Now gather round for a spooky story\"),mdx(\"p\",null,`Late one night... in the haunted office space castle (hindenbugs cackling in\nthe background amongst the dusty technical books) the midnight candles were\nburning bright and we entered data for a user file`),mdx(\"p\",null,`A simple 52MB gzipped datafile that we want to process in the browser. We unzip\nit, decode it, and ...an error`),mdx(\"p\",null,\"ERROR: data not found\"),mdx(\"p\",null,mdx(\"img\",a({parentName:\"p\"},{src:\"/media/pumpkin-dark.jpg\",alt:null}))),mdx(\"p\",null,'But... our code is so simple (we of course abide by the religion of writing \"simple code\" you know)...what could be happening?'),mdx(\"p\",null,\"The code looks like this\"),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-js\"}),`const buf = unzip(file)\nconst str = new TextDecoder().decode(buf)\n`)),mdx(\"p\",null,\"We trace it back and run a console.log(str)\"),mdx(\"p\",null,\"It looks empty. We try running console.log(str.length) ... it prints out 0\"),mdx(\"p\",null,\"But if we console.log(buffer.length) we get 546,483,710 bytes...\"),mdx(\"p\",null,\"What could be happening?\"),mdx(\"p\",null,'We see in the TextDecoder documentation that it has a note called \"fatal\". We try'),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-js\"}),`const buf = unzip(file)\nconst str = new TextDecoder('utf8', { fatal: true }).decode(buf)\n`)),mdx(\"p\",null,\"This doesn't change the results though\"),mdx(\"p\",null,`Then it dawns on us while the lightning hits and the thunderclap booms and the\nwind blows through the rattly windows`),mdx(\"p\",null,\"We have hit...the maximum string length in Chrome\"),mdx(\"p\",null,\"BWAHAHAHAHA\"),mdx(\"p\",null,\"The maximum string length!!! Nooooooo\"),mdx(\"p\",null,\"It is 512MB on the dot... 536,870,888 bytes. We test this to be sure\"),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-js\"}),`const len = 536_870_888\nconst buf = new Uint8Array(len)\nfor (let i = 0; i < len; i++) {\n  buf[i] = 'a'.charCodeAt(0)\n}\nconst str = new TextDecoder().decode(buf)\nconsole.log(str.length)\n`)),mdx(\"p\",null,\"This is correct, outputs 536,870,888\"),mdx(\"p\",null,\"With anything, even one byte more, it fails and outputs 0\"),mdx(\"p\",null,\"happy halloween!!\"),mdx(\"p\",null,\"pumpkin photo source: \",mdx(\"a\",a({parentName:\"p\"},{href:\"http://mountainbikerak.blogspot.com/2010/11/google-chrome-pumpkin.html\"}),\"http://mountainbikerak.blogspot.com/2010/11/google-chrome-pumpkin.html\")),mdx(\"p\",null,\"chrome 95 tested\"),mdx(\"p\",null,\"nodejs 15 - at 512MB+1 bytes it prints an error message \",mdx(\"inlineCode\",{parentName:\"p\"},\"Error: Cannot create a string longer than 0x1fffffe8 characters\"),` for significantly greater than 512MB\ne.g. 600MB it actually prints a different error `,mdx(\"inlineCode\",{parentName:\"p\"},\"TypeError [ERR_ENCODING_INVALID_ENCODED_DATA]: The encoded data was not valid for encoding utf-8\"),\")\"),mdx(\"p\",null,'firefox 93 - goes up to ~1GB but then gives Exception { name: \"NS_ERROR_OUT_OF_MEMORY\", message: \"\", result: 2147942414'),mdx(\"p\",null,\"midori 6 (safari-alike/webkit) - goes up to ~2GB fine! will have to test more\"))}MDXContent.isMDXComponent=!0;\n","scope":{}}}},"__N_SSG":true}