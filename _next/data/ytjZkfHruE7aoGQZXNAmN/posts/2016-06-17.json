{"pageProps":{"post":{"title":"Querying InterMine databases using R","date":"2016-06-17","slug":"2016-06-17","mdxSource":{"compiledSource":"var l=Object.defineProperty,d=Object.defineProperties;var c=Object.getOwnPropertyDescriptors;var o=Object.getOwnPropertySymbols;var i=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable;var p=(e,t,n)=>t in e?l(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,r=(e,t)=>{for(var n in t||(t={}))i.call(t,n)&&p(e,n,t[n]);if(o)for(var n of o(t))s.call(t,n)&&p(e,n,t[n]);return e},m=(e,t)=>d(e,c(t));var u=(e,t)=>{var n={};for(var a in e)i.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(e!=null&&o)for(var a of o(e))t.indexOf(a)<0&&s.call(e,a)&&(n[a]=e[a]);return n};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(n){var a=n,{components:e}=a,t=u(a,[\"components\"]);return mdx(MDXLayout,m(r(r({},layoutProps),t),{components:e,mdxType:\"MDXLayout\"}),mdx(\"p\",null,`In the past, I had found some ways to do simple queries on InterMine web\nservices using basic HTTP commands with R (see\n`,mdx(\"a\",r({parentName:\"p\"},{href:\"https://gist.github.com/cmdcolin/4758167bdd89e6c9c055\"}),\"https://gist.github.com/cmdcolin/4758167bdd89e6c9c055\"),\")\"),mdx(\"p\",null,\"However, the InterMineR (\",mdx(\"a\",r({parentName:\"p\"},{href:\"https://github.com/intermine/intermineR\"}),\"https://github.com/intermine/intermineR\"),`)\npackage automates some of these features and makes it easier to load the\ndata in R.`),mdx(\"p\",null,mdx(\"strong\",{parentName:\"p\"},\"Installation\")),mdx(\"p\",null,`One way to install InterMineR is to install from github with\nhadley/devtools`),mdx(\"pre\",null,mdx(\"code\",r({parentName:\"pre\"},{}),`install.packages(\"devtools\")\ndevtools::install_github(\"hadley/devtools\")\ndevtools::install_github(\"intermine/intermineR\")\n`)),mdx(\"p\",null,mdx(\"strong\",{parentName:\"p\"},\"Usage\")),mdx(\"p\",null,`Basic usage includes loading the\\xA0\"intermine URL\" using the initInterMine\nfunction. Then various functions can be called on this result.`),mdx(\"pre\",null,mdx(\"code\",r({parentName:\"pre\"},{}),`library(InterMineR)\nmine=initInterMine(\"http://bovinegenome.org/bovinemine/\")\ngetVersion(mine) #18, intermine API version\ngetRelease(mine) #1.0, our data release version\ngetTemplates(mine) # lists all templates on interminer\n`)),mdx(\"p\",null,mdx(\"strong\",{parentName:\"p\"},\"Run a template query\")),mdx(\"p\",null,`From the getTemplates function, if you see a template query that you\nwant to run, you can use the getTemplateQuery function with it's name,\nand run it with the runQuery function`),mdx(\"pre\",null,mdx(\"code\",r({parentName:\"pre\"},{}),`getTemplateQuery(mine,\"TQ_protein_to_gene\") # see what template looks like\ntemplate=getTemplateQuery(mine,\"TQ_protein_to_gene\") # save template\nrunQuery(mine,template) # run the template query with default params, receive data.frame\n`)),mdx(\"p\",null,`This method is good, but some improvement could be added to change\ndefault parameters in the template query, etc.`),mdx(\"p\",null,mdx(\"strong\",{parentName:\"p\"},\"Run query XML\")),mdx(\"p\",null,`Another option for running queries is to use the query XML that you can\ndownload from the InterMine query result pages.`),mdx(\"pre\",null,mdx(\"code\",r({parentName:\"pre\"},{}),` # get all Ensembl genes on chr28 from bovinemine\n query='<query model=\"genomic\" view=\"Gene.primaryIdentifier\n Gene.secondaryIdentifier Gene.symbol Gene.name Gene.source\n Gene.organism.shortName Gene.chromosome.primaryIdentifier\"\n sortOrder=\"Gene.primaryIdentifier ASC\" ><constraint\n path=\"Gene.organism.shortName\" op=\"=\" value=\"B. taurus\"\n /><constraint path=\"Gene.chromosome.primaryIdentifier\" op=\"=\"\n value=\"GK000028.2\" /></query>'\n\n results=runQuery(mine, query)\n\n head(results)\n`)),mdx(\"p\",null,mdx(\"strong\",{parentName:\"p\"},\"Conclusion\")),mdx(\"p\",null,`The InterMineR package has a couple of nice features for getting\nInterMine data with a couple of functions for looking at templates. For\nmany use cases, copying the Query XML from a InterMine webpage and\npasting that into the runQuery function is sufficient and produces a\ndata frame that can be analyzed.`),mdx(\"p\",null,`PS it is not easy to post XML on tumblr after editing the post in\nmarkdown mode. You have to add the lt and gt shortcuts and even after\nthat it gets filtered?!`))}MDXContent.isMDXComponent=!0;\n","scope":{}}}},"__N_SSG":true}