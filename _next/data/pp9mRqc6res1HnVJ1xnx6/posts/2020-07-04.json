{"pageProps":{"post":{"title":"Challenges I have faced learning React","date":"2020-07-04","slug":"2020-07-04","content":"<p>Learning React was a big challenge for me. I started learning React in earnest\nin 2019. It was a difficult experience overall, but I wanted to go over my\nlearning experience, and maybe find some lessons in the mix. This goes mostly\ninto personal details and doesn't really get too technical, however, I review\nthe commit logs and try and backtrace my feelings that I remember at the time.</p>\n<p>If I were to take away anything from this, it's probably that pair programming\nwas really useful especially as a remote worker, I had nothing before that\nexcept weekly standups where I felt really depressed. Also stay patient, stay\nthankful, and try to focus while you learn</p>\n<p><strong>Introduction to me</strong></p>\n<p>I am maybe what you'd call a front-end engineer. I have done web development\nfor about 7 years now. I worked on various fast-becoming-legacy projects and\ngreenfield that were made in Ruby, PHP, Perl CGI, Java servlets, etc.</p>\n<p><strong>Early dabbles with React circa 2016</strong></p>\n<p>I had a random <code>&#x3C;form></code> that I was tasked with making and I wanted to code and\nwanted to try using React. I tried importing React via a CDN  and gave it a\nshot, and it seemed simple enough, but I kept getting really confused about how\nto even read and initialize the value of a textbox for example properly. TLDR:\nI was not aware of what a <em>controlled component</em> was.</p>\n<p>The idea of controlled components (not a word in my vocabulary at the time) was\nquite unintuitive and instead, I kept googling weird things like \"two way data\nbinding react\" and variants of this. I had never used Angular but I heard of\ntwo-way data binding from Angular, and I just felt like it was what I needed.\nI even posted about my frustrations about this on the React subreddit and was\ndownvoted. Felt bad. I was just really confused. I abandoned the project in\nReact and just used our normal jqueryish thing.</p>\n<p><strong>New job in 2018</strong></p>\n<p>When I got a call about a new job in 2018, I was really happy and started in\nJune 2018. They decided they are going to do \"the big rewrite\" and are going to\nuse React. My coworker started building the new React app prototype. My\ncoworker keeps asking me \"what state management library should we use\". I just\nhad no idea about React still, I had not ever looked into state management, and\nbasically just was like \"I dunno!\". I had no way to form an opinion. I was also\nworking on some misc stuff sort of unrelated to the rewrite and remained pretty\nout of the loop. We would have weekly meetings but I just wouldn't really\nunderstand the goings ons. The project started using mobx-state-tree and I saw\nthem start to write fresh code for the project but things like prop-types just\nwere confusing to me, e.g. there were the mobx-state-tree model types, and\nsuddenly and the React prop-types and it was still the days of class-based\nReact components. I couldn't get any clear idea of what was happening</p>\n<p><strong>I am floundering...not understanding what's going on with the rewrite</strong></p>\n<p>It's December 2018, I go home for Christmas and I have an honest talk with my\nparents and tell them \"I don't get what is happening in the new codebase, I'm\nhonestly unhappy, and it just does all this 'React' stuff\" but I can't explain\nReact to them I just say the code is automatically reacting to other things. My\nparents say \"well if you are unhappy you might have to leave your job\" and they\nare not like, cheering for me to leave, but they tell me that. At this point,\nit really hit me that I do like this job and I decided to try to focus on work.</p>\n<p><strong>I try and make an honest attempt to get involved in the project, start pair\nprogramming</strong></p>\n<p>On January 10th 2019 I make my first commit to the rewrite by doing some\nmonkey-see monkey-do type coding. I copy a bunch of files and just put them in\nthe right place, tweak some lines, and start to figure out how to make things\nrun. By the end of January 2019 I get my first code change merged.</p>\n<p>I also suggested that we start doing <strong>pair-programming sessions</strong>. Once I\nstarted these it made a huge difference for me in learning how to code. The\npair programming often still way over my head due to how my coworker presented\nstuff or how much he assumed I understood. Nevertheless, these were extremely\nhelpful for me to help get caught up.</p>\n<p><strong>I start to reading \"Learning React\"</strong></p>\n<p>In March 2019, I got the book \"Learning React\" (O'Reilly2017\n<a href=\"https://www.oreilly.com/library/view/learning-react/9781491954614/\">https://www.oreilly.com/library/view/learning-react/9781491954614/</a>) for my\nkindle.  Reading this book was a big help I felt, and provided a needed \"brain\nreset\" for me. The book worked well for me, I read it each night on my kindle,\nand the function component concepts were super enlightening. To me it was so\nmuch better reading a book than, say, an internet tutorial. With the book, I\ncould focus, not have distractions, etc. My eyes would just glaze over every\ntime I clicked on internet tutorials and stuff before this.</p>\n<p>So anyways, March 2019 goes on, and I'm learning, but our codebase still feels\npretty complicated and alien. We use mobx-state-tree and the glue for\nmobx-state-tree to React e.g. the mobx-react doesn't really make sense to me. I\nremember asking my coworkers why my component was not updating and they\neventually find out it's because I keep not using the observe() wrapper around\nmy components.</p>\n<p><strong>I start to experiment with Typescript</strong></p>\n<p>In April 2019 I start to experiment with typescript and release a typescript\nversion of some data parsing code. I start by explicity specifying a lot of\ntypes but I eventually start getting into the zen of \"type inference\" and I\nturn off the @typescript-eslint/explicit-function-return-type so I get implied\nreturn types.</p>\n<p><strong>I start using React hooks</strong></p>\n<p>In May 2019 I try out my first React hook, a useState. It worked well. I\ncouldn't really figure out why I would use it instead of the mobx state\nmanagement we used elsewhere, but the example was that it was a click and drag\nand it made sense to keep that click and drag state local to the component\nrather than the \"app\"</p>\n<p><strong>I start using react-testing-library</strong></p>\n<p>In June 2019, I create \"integration test\" level tests for our app. I had used\nreact-testing-library for some components before this, but this was using\nreact-testing-library to render the entire \"app level\" component. I was happy\nto pioneer this and was happy to try this out instead of doing true browser\ntests, and I think this has worked out well.</p>\n<p>Some caveats: I got very caught up with trying to do canvas tests initially. I\nreally wanted to use jest-mock-canvas but we were using offscreencanvas via a\npretty complicated string of things, so I don't make progress here, and I also\ngot confused about the relationship between node-canvas and jest-mock-canvas\n(they are basically totally different approaches). Later on, I find using\njest-image-snapshot of the canvas contents works nice (ref\n<a href=\"https://stackoverflow.com/questions/33269093/how-to-add-canvas-support-to-my-tests-in-jest\">https://stackoverflow.com/questions/33269093/how-to-add-canvas-support-to-my-tests-in-jest</a>)</p>\n<p>Other random note: when building out the integration tests, we got a lot\nof \"act warnings\" which were confusing. These were fixed in React 16.9\n(released August 2019), but we had to ignore them and they basically just\nconfused me a lot and made it feel like I was battling a very complex system\nrather than a nice simple one.</p>\n<p><strong>Conclusions</strong></p>\n<p>Overall, I just wanted to write up my whole experience. It felt really\ndifficult for me to make these changes. I also went through a breakup during\nthis time, had a bad living situation, etc. so things were a struggle. If\nanyone else has had struggles learning React, tell your story, and let me know.\nI'd like to also thank everyone who helped me along the way. I feel like a much\nbetter coder now, yet, I should always keep growing. The feeling of\nuncomfortableness could be a growing experience.</p>\n"}},"__N_SSG":true}