{"pageProps":{"post":{"title":"How to make your own npm package with typescript","date":"2021-12-31","slug":"2021-12-31-npm-package","html":"<p>There is a lot of mystery around making your own <code>npm</code> package. Every package\nlikely does it a bit differently, and it can be tricky to get a setup you like.\nShould you use a \"starter kit\" or a boilerplate example? Or just roll your own?\nShould you use a bundler? How do you use typescript? Well, why don't we try\nstarting from scratch and seeing where we can get?</p>\n<p>TLDR: here is a github repo with a template package\n<a href=\"https://github.com/cmdcolin/npm-package-tutorial/\">https://github.com/cmdcolin/npm-package-tutorial/</a></p>\n<h2 id=\"introduction\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#introduction\"><a href=\"#introduction\" style=\"margin-right: 10px\">#</a></a>Introduction</h2>\n<p>An <code>npm</code> package can be very bare bones. In some sense, npmjs.com is just an\narbitrary file host, and you can upload pretty much anything you want to it.</p>\n<p>The magic is in the package.json file, which tells npm:</p>\n<ul>\n<li>what files are part of your package (by default, the whole folder with your\npackage.json is published, with the \"files\" field you can say what particular\nfolders or files are uploaded or you can use .npmignore to choose which files\nNOT to publish)</li>\n<li>what to use as the \"entry point\" (e.g. the file that should be referenced when\nyou say <code>const lib = require('mypackage')</code>, this is governed by the \"main\"\nfield, \"module\" field which is bundler specific, and \"export maps\" which are\nnewer but tricky)</li>\n<li>what pre- and post- processing steps should be done when the package is being\npublished (the various \"scripts\", where you can have \"clean\", \"build\", \"test\",\n\"lint\", \"prebuild\", etc)</li>\n<li>and more!</li>\n</ul>\n<p>Let's try an experiment...</p>\n<h1 id=\"part-1-the-most-basic-package-with-plain-js-code-in-commonjs-format\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#part-1-the-most-basic-package-with-plain-js-code-in-commonjs-format\"><a href=\"#part-1-the-most-basic-package-with-plain-js-code-in-commonjs-format\" style=\"margin-right: 10px\">#</a></a>Part 1: the most basic package with plain JS code in commonjs format</h1>\n<p>Open up a terminal, and run</p>\n<pre class=\"shiki poimandres\" style=\"background-color: #1b1e28\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #91B4D5\">mkdir</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">mypackage</span></span>\n<span class=\"line\"><span style=\"color: #91B4D5\">cd</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">mypackage</span></span>\n<span class=\"line\"><span style=\"color: #91B4D5\">git</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">init</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #767C9DB0; font-style: italic\"># make mypackage version controlled</span></span>\n<span class=\"line\"><span style=\"color: #91B4D5\">npm</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">init</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #767C9DB0; font-style: italic\"># or yarn init</span></span></code></pre>\n<p>This init command outputs something like this, and we accept the defaults</p>\n<pre class=\"shiki poimandres\" style=\"background-color: #1b1e28\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #91B4D5\">This</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">utility</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">will</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">walk</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">you</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">through</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">creating</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">a</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">package.json</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">file.</span></span>\n<span class=\"line\"><span style=\"color: #91B4D5\">It</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">only</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">covers</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">the</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">most</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">common</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">items,</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">and</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">tries</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">to</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">guess</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">sensible</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">defaults.</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #91B4D5\">See</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #A6ACCD\">`</span><span style=\"color: #91B4D5\">npm</span><span style=\"color: #5DE4C7\"> </span><span style=\"color: #ADD7FF\">help</span><span style=\"color: #5DE4C7\"> </span><span style=\"color: #ADD7FF\">init</span><span style=\"color: #A6ACCD\">`</span><span style=\"color: #A6ACCD\"> for definitive documentation on these fields</span></span>\n<span class=\"line\"><span style=\"color: #91B4D5\">and</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">exactly</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">what</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">they</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">do.</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #91B4D5\">Use</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #A6ACCD\">`</span><span style=\"color: #91B4D5\">npm</span><span style=\"color: #5DE4C7\"> </span><span style=\"color: #ADD7FF\">install</span><span style=\"color: #5DE4C7\"> </span><span style=\"color: #91B4D5\">&#x3C;</span><span style=\"color: #ADD7FF\">pk</span><span style=\"color: #5DE4C7\">g</span><span style=\"color: #91B4D5\">></span><span style=\"color: #A6ACCD\">`</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #91B4D5\">afterwards</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">to</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">install</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">a</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">package</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">and</span></span>\n<span class=\"line\"><span style=\"color: #91B4D5\">save</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">it</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">as</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">a</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">dependency</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">in</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">the</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">package.json</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">file.</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #91B4D5\">Press</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">^C</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">at</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">any</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">time</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">to</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">quit.</span></span>\n<span class=\"line\"><span style=\"color: #91B4D5\">package</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">name:</span><span style=\"color: #A6ACCD\"> (</span><span style=\"color: #91B4D5\">mypackage</span><span style=\"color: #A6ACCD\">)</span></span>\n<span class=\"line\"><span style=\"color: #91B4D5\">version:</span><span style=\"color: #A6ACCD\"> (1.0.0)</span></span>\n<span class=\"line\"><span style=\"color: #91B4D5\">description:</span></span>\n<span class=\"line\"><span style=\"color: #91B4D5\">entry</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">point:</span><span style=\"color: #A6ACCD\"> (</span><span style=\"color: #91B4D5\">index.js</span><span style=\"color: #A6ACCD\">)</span></span>\n<span class=\"line\"><span style=\"color: #91B4D5\">test</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">command:</span></span>\n<span class=\"line\"><span style=\"color: #91B4D5\">git</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">repository:</span></span>\n<span class=\"line\"><span style=\"color: #91B4D5\">keywords:</span></span>\n<span class=\"line\"><span style=\"color: #91B4D5\">license:</span><span style=\"color: #A6ACCD\"> (</span><span style=\"color: #91B4D5\">ISC</span><span style=\"color: #A6ACCD\">)</span></span>\n<span class=\"line\"><span style=\"color: #91B4D5\">About</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">to</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">write</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">to</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">/home/cdiesh/mypackage/package.json:</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">{</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  \"</span><span style=\"color: #5DE4C7\">name</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">:</span><span style=\"color: #A6ACCD\"> \"</span><span style=\"color: #5DE4C7\">mypackage</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">,</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  \"</span><span style=\"color: #5DE4C7\">version</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">:</span><span style=\"color: #A6ACCD\"> \"</span><span style=\"color: #5DE4C7\">1.0.0</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">,</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  \"</span><span style=\"color: #5DE4C7\">description</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">:</span><span style=\"color: #A6ACCD\"> \"\"</span><span style=\"color: #A6ACCD\">,</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  \"</span><span style=\"color: #5DE4C7\">main</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">:</span><span style=\"color: #A6ACCD\"> \"</span><span style=\"color: #5DE4C7\">index.js</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">,</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  \"</span><span style=\"color: #5DE4C7\">scripts</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">: {</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    \"</span><span style=\"color: #5DE4C7\">test</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">:</span><span style=\"color: #A6ACCD\"> \"</span><span style=\"color: #5DE4C7\">echo </span><span style=\"color: #5FB3A1\">\\\"</span><span style=\"color: #5DE4C7\">Error: no test specified</span><span style=\"color: #5FB3A1\">\\\"</span><span style=\"color: #5DE4C7\"> &#x26;&#x26; exit 1</span><span style=\"color: #A6ACCD\">\"</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  },</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  \"</span><span style=\"color: #5DE4C7\">author</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">:</span><span style=\"color: #A6ACCD\"> \"</span><span style=\"color: #5DE4C7\">Colin</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">,</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  \"</span><span style=\"color: #5DE4C7\">license</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">:</span><span style=\"color: #A6ACCD\"> \"</span><span style=\"color: #5DE4C7\">ISC</span><span style=\"color: #A6ACCD\">\"</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">}</span></span>\n<span class=\"line\"></span></code></pre>\n<p>Then, you can create a file named <code>index.js</code> (in your package.json it says\n<code>\"main\": \"index.js\"</code> to refer to this file, the entrypoint)</p>\n<p>In your <code>index.js</code> file, generally, you would do things like export a function\nor functions. I will use commonjs exports here for maximum compatibility:</p>\n<pre class=\"shiki poimandres\" style=\"background-color: #1b1e28\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #E4F0FB\">module</span><span style=\"color: #A6ACCD\">.</span><span style=\"color: #E4F0FB\">exports</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #91B4D5\">=</span><span style=\"color: #E4F0FB\"> </span><span style=\"color: #A6ACCD\">{</span></span>\n<span class=\"line\"><span style=\"color: #E4F0FB\">  </span><span style=\"color: #ADD7FF\">hello</span><span style=\"color: #A6ACCD\">:</span><span style=\"color: #ADD7FF\"> </span><span style=\"color: #A6ACCD\">()</span><span style=\"color: #ADD7FF\"> </span><span style=\"color: #91B4D5\">=></span><span style=\"color: #ADD7FF\"> </span><span style=\"color: #A6ACCD\">{</span></span>\n<span class=\"line\"><span style=\"color: #ADD7FF\">    </span><span style=\"color: #E4F0FB\">console</span><span style=\"color: #A6ACCD\">.</span><span style=\"color: #E4F0FBD0\">log</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #A6ACCD\">'</span><span style=\"color: #5DE4C7\">hello world</span><span style=\"color: #A6ACCD\">'</span><span style=\"color: #A6ACCD\">)</span></span>\n<span class=\"line\"><span style=\"color: #ADD7FF\">  </span><span style=\"color: #A6ACCD\">},</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">}</span></span></code></pre>\n<h2 id=\"publishing-a-package\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#publishing-a-package\"><a href=\"#publishing-a-package\" style=\"margin-right: 10px\">#</a></a>Publishing a package</h2>\n<p>This npm package, <code>mypackage</code> can now be published to <code>npm</code> with a simple\ncommand.</p>\n<pre class=\"shiki poimandres\" style=\"background-color: #1b1e28\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #91B4D5\">npm</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">publish</span></span>\n<span class=\"line\"><span style=\"color: #767C9DB0; font-style: italic\"># or</span></span>\n<span class=\"line\"><span style=\"color: #91B4D5\">yarn</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">publish</span></span></code></pre>\n<p>This will prompt you for your npmjs.com username, password, email, and if\nneeded, 2FA token (highly recommended)</p>\n<h2 id=\"using-your-package-after-it-is-published\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#using-your-package-after-it-is-published\"><a href=\"#using-your-package-after-it-is-published\" style=\"margin-right: 10px\">#</a></a>Using your package after it is published</h2>\n<p>Once it is published, you can use it in your create-react-app app or other npm\npackage.</p>\n<pre class=\"shiki poimandres\" style=\"background-color: #1b1e28\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #91B4D5\">npm</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">install</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">mypackage</span></span>\n<span class=\"line\"><span style=\"color: #767C9DB0; font-style: italic\"># or</span></span>\n<span class=\"line\"><span style=\"color: #91B4D5\">yarn</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">add</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">mypackage</span></span></code></pre>\n<p>Then you can use</p>\n<pre class=\"shiki poimandres\" style=\"background-color: #1b1e28\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #5DE4C7\">import </span><span style=\"color: #A6ACCD\">{</span><span style=\"color: #5DE4C7\"> </span><span style=\"color: #ADD7FF\">hello</span><span style=\"color: #5DE4C7\"> </span><span style=\"color: #A6ACCD\">}</span><span style=\"color: #5DE4C7\"> </span><span style=\"color: #A6ACCD\">from</span><span style=\"color: #5DE4C7\"> </span><span style=\"color: #A6ACCD\">'</span><span style=\"color: #5DE4C7\">mypackage</span><span style=\"color: #A6ACCD\">'</span></span></code></pre>\n<p>in any of your other codebases</p>\n<h2 id=\"summary-of-the-simplest-npm-package\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#summary-of-the-simplest-npm-package\"><a href=\"#summary-of-the-simplest-npm-package\" style=\"margin-right: 10px\">#</a></a>Summary of the simplest NPM package</h2>\n<p>This all seems pretty boring thus far but it tells us a couple things</p>\n<ol>\n<li>packages can be very very bare bones</li>\n<li>no transpiler or bundler is needed for publishing an npm package</li>\n<li>our package can consist of a single file and it is uploaded to npm, and the\n\"main\" field in package.json provides an entry point</li>\n<li>the filename index.js is not special, probably it is a hangover from the name\nindex.html. you can use whatever name you want</li>\n</ol>\n<h1 id=\"part-2-adding-typescript\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#part-2-adding-typescript\"><a href=\"#part-2-adding-typescript\" style=\"margin-right: 10px\">#</a></a>Part 2: Adding typescript</h1>\n<p>Let's try adding typescript</p>\n<p>To do this, we will use the typescript compiler to compile a directory of files\nin our \"src\" directory and output the compiled files to a directory named \"dist\"</p>\n<p>To start, let's add typescript</p>\n<pre class=\"shiki poimandres\" style=\"background-color: #1b1e28\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #91B4D5\">npm</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">install</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">--save-dev</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">typescript</span></span>\n<span class=\"line\"><span style=\"color: #767C9DB0; font-style: italic\"># or</span></span>\n<span class=\"line\"><span style=\"color: #91B4D5\">yarn</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">add</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">-D</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">typescript</span></span></code></pre>\n<p>Our package.json now will have <code>typescript</code> in it's <code>devDependencies</code> (this\nmeans that when someone installs your package, it they don't get typescript as a\ndependency, it is just a dependency for while you are developing the library\nlocally).</p>\n<p>Then we need to create a tsconfig.json for typescript to use</p>\n<pre class=\"shiki poimandres\" style=\"background-color: #1b1e28\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #91B4D5\">yarn</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">tsc</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">--init</span></span>\n<span class=\"line\"><span style=\"color: #767C9DB0; font-style: italic\"># or</span></span>\n<span class=\"line\"><span style=\"color: #91B4D5\">npx</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">tsc</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">--init</span></span></code></pre>\n<p>This will generate a <code>tsconfig.json</code> file (needed by <code>typescript</code>) with a bunch\nof options, but I have stripped it down in my projects to look like this</p>\n<pre class=\"shiki poimandres\" style=\"background-color: #1b1e28\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #A6ACCD\">{</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #E4F0FB\">include</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">: [</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #5DE4C7\">src</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">],</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #E4F0FB\">compilerOptions</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">: {</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #ADD7FF\">target</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">: </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #5DE4C7\">es2018</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">,</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #ADD7FF\">moduleResolution</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">: </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #5DE4C7\">node</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">, </span><span style=\"color: #767C9DB0; font-style: italic\">// don't have to import actual filenames, can import extensionless files</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #ADD7FF\">declaration</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">: </span><span style=\"color: #5DE4C7\">true</span><span style=\"color: #A6ACCD\">, </span><span style=\"color: #767C9DB0; font-style: italic\">// generate .d.ts files</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #ADD7FF\">sourceMap</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">: </span><span style=\"color: #5DE4C7\">true</span><span style=\"color: #A6ACCD\">, </span><span style=\"color: #767C9DB0; font-style: italic\">// generate source map</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #ADD7FF\">outDir</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">: </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #5DE4C7\">dist</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">, </span><span style=\"color: #767C9DB0; font-style: italic\">// output compiled js, d.ts, and source map to dist folder</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #ADD7FF\">strict</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">: </span><span style=\"color: #5DE4C7\">true</span><span style=\"color: #A6ACCD\">,</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #ADD7FF\">esModuleInterop</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">: </span><span style=\"color: #5DE4C7\">true</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  }</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">}</span></span></code></pre>\n<p>Now, let's wrote a little typescript. We can now use \"ESM\" style code, we will\ncompile it to commonjs format.</p>\n<p>util.ts</p>\n<pre class=\"shiki poimandres\" style=\"background-color: #1b1e28\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #5DE4C7\">export</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #91B4D5\">function</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">getMessage</span><span style=\"color: #A6ACCD\">() {</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #5DE4C7C0\">return</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #A6ACCD\">'</span><span style=\"color: #5DE4C7\">hello</span><span style=\"color: #A6ACCD\">'</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">}</span></span></code></pre>\n<p>index.ts</p>\n<pre class=\"shiki poimandres\" style=\"background-color: #1b1e28\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #5DE4C7\">import </span><span style=\"color: #A6ACCD\">{</span><span style=\"color: #5DE4C7\"> </span><span style=\"color: #ADD7FF\">getMessage</span><span style=\"color: #5DE4C7\"> </span><span style=\"color: #A6ACCD\">}</span><span style=\"color: #5DE4C7\"> </span><span style=\"color: #A6ACCD\">from</span><span style=\"color: #5DE4C7\"> </span><span style=\"color: #A6ACCD\">'</span><span style=\"color: #5DE4C7\">./util</span><span style=\"color: #A6ACCD\">'</span></span>\n<span class=\"line\"><span style=\"color: #5DE4C7\">export</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #91B4D5\">function</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">sayMessage</span><span style=\"color: #A6ACCD\">() {</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #E4F0FB\">console</span><span style=\"color: #A6ACCD\">.</span><span style=\"color: #E4F0FBD0\">log</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #E4F0FBD0\">getMessage</span><span style=\"color: #A6ACCD\">())</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">}</span></span></code></pre>\n<p>And then we will add a <code>\"build\"</code> script to <code>package.json</code> to compile the\nlibrary, and refer to the <code>\"dist\"</code> directory for the <code>\"files\"</code> and <code>\"main\"</code>\nfields in <code>package.json</code></p>\n<pre class=\"shiki poimandres\" style=\"background-color: #1b1e28\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #A6ACCD\">{</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #E4F0FB\">name</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">: </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #5DE4C7\">mypackage</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">,</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #E4F0FB\">version</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">: </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #5DE4C7\">1.0.0</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">,</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #E4F0FB\">description</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">: </span><span style=\"color: #A6ACCD\">\"\"</span><span style=\"color: #A6ACCD\">,</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #E4F0FB\">main</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">: </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #5DE4C7\">src/index.js</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">,</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #E4F0FB\">files</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">: [</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #5DE4C7\">dist</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">, </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #5DE4C7\">src</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">], </span><span style=\"color: #767C9DB0; font-style: italic\">// we publish both dist and src to get proper sourceMaps</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #E4F0FB\">scripts</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">: {</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #ADD7FF\">build</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">: </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #5DE4C7\">tsc --module commonjs</span><span style=\"color: #A6ACCD\">\"</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  },</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #E4F0FB\">author</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">: </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #5DE4C7\">Colin</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">,</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #E4F0FB\">license</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">: </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #5DE4C7\">ISC</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">,</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #E4F0FB\">devDependencies</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">: {</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #ADD7FF\">typescript</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">: </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #5DE4C7\">^4.5.4</span><span style=\"color: #A6ACCD\">\"</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  }</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">}</span></span></code></pre>\n<p>We can now run</p>\n<pre class=\"shiki poimandres\" style=\"background-color: #1b1e28\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #91B4D5\">npm</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">run</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">build</span></span>\n<span class=\"line\"><span style=\"color: #767C9DB0; font-style: italic\"># or</span></span>\n<span class=\"line\"><span style=\"color: #91B4D5\">yarn</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">build</span></span></code></pre>\n<p>And this will run the <code>\"build\"</code> script we created, which in turn, just runs\n<code>tsc</code> with no arguments.</p>\n<p>You can also add a <code>\"prebuild\"</code> script that clears out the old contents. In\nfact, npm scripts generalizes the naming system -- you can make scripts with\nwhatever name you want, e.g.</p>\n<pre class=\"shiki poimandres\" style=\"background-color: #1b1e28\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #A6ACCD\">{</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #E4F0FB\">scripts</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">: {</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #ADD7FF\">preparty</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">: </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #5DE4C7\">echo preparty</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">,</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #ADD7FF\">party</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">: </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #5DE4C7\">echo party</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">,</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #ADD7FF\">postparty</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">: </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #5DE4C7\">echo postparty</span><span style=\"color: #A6ACCD\">\"</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  }</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">}</span></span></code></pre>\n<p>Then running</p>\n<pre class=\"shiki poimandres\" style=\"background-color: #1b1e28\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #91B4D5\">$</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">yarn</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">party</span></span>\n<span class=\"line\"><span style=\"color: #91B4D5\">preparty</span></span>\n<span class=\"line\"><span style=\"color: #91B4D5\">party</span></span>\n<span class=\"line\"><span style=\"color: #91B4D5\">postparty</span></span></code></pre>\n<p>To make this useful, we will use <code>rimraf</code> (a node package) to make a\ncross-platform removal of the <code>dist</code> directory</p>\n<pre class=\"shiki poimandres\" style=\"background-color: #1b1e28\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #91B4D5\">npm</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">install</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">--save-dev</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">rimraf</span></span>\n<span class=\"line\"><span style=\"color: #767C9DB0; font-style: italic\"># or</span></span>\n<span class=\"line\"><span style=\"color: #91B4D5\">yarn</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">add</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">-D</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">rimraf</span></span></code></pre>\n<p>and then update your package.json</p>\n<pre class=\"shiki poimandres\" style=\"background-color: #1b1e28\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #A6ACCD\">{</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #D0679D\">...</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #E4F0FB\">scripts</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">: {</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #ADD7FF\">clean</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">: </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #5DE4C7\">rimraf dist</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">,</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #ADD7FF\">prebuild</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">: </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #5DE4C7\">npm run clean</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">,</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #ADD7FF\">build</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">: </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #5DE4C7\">tsc --module commonjs</span><span style=\"color: #A6ACCD\">\"</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  },</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #E4F0FB\">devDependencies</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">: {</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #ADD7FF\">rimraf</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">: </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #5DE4C7\">^3.0.2</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">,</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #ADD7FF\">typescript</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">: </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #5DE4C7\">^4.5.4</span><span style=\"color: #A6ACCD\">\"</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  }</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">}</span></span></code></pre>\n<p>We could make it say \"rm -rf dist\" instead of \"rimraf dist\" (e.g. run arbitrary\nshell commands), but rimraf allows it to be cross-platform</p>\n<h2 id=\"making-sure-you-create-a-fresh-build-before-you-publish\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#making-sure-you-create-a-fresh-build-before-you-publish\"><a href=\"#making-sure-you-create-a-fresh-build-before-you-publish\" style=\"margin-right: 10px\">#</a></a>Making sure you create a fresh build before you publish</h2>\n<p>Without extra instructions, your <code>yarn publish</code> command would not create a fresh\nbuild and you could publish an older version that was lingering in the <code>dist</code>\nfolder.</p>\n<p>We can use a <code>preversion</code> script that will automatically get invoked when you\nrun <code>yarn publish</code> to make sure you get a fresh build in the <code>dist</code> folder\nbefore you publish</p>\n<pre class=\"shiki poimandres\" style=\"background-color: #1b1e28\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #A6ACCD\">{</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #D0679D\">...</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #E4F0FB\">scripts</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">: {</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #D0679D\">...</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #ADD7FF\">preversion</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">: </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #5DE4C7\">npm run build</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">,</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  },</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">}</span></span></code></pre>\n<h2 id=\"making-sure-you-push-your-tag-to-github-after-publish\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#making-sure-you-push-your-tag-to-github-after-publish\"><a href=\"#making-sure-you-push-your-tag-to-github-after-publish\" style=\"margin-right: 10px\">#</a></a>Making sure you push your tag to github after publish</h2>\n<p>When you run <code>yarn publish</code>, npm will automatically create a commit with the\nversion name and a git tag, it <em>will not</em> automatically push tag to your\nrepository.</p>\n<p>Add a <code>postversion</code> script that pushes the tag to your repo after your publish</p>\n<pre class=\"shiki poimandres\" style=\"background-color: #1b1e28\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #A6ACCD\">{</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #D0679D\">...</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #E4F0FB\">scripts</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">: {</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #D0679D\">...</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #ADD7FF\">postversion</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">: </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #5DE4C7\">git push --follow-tags</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">,</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  },</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">}</span></span></code></pre>\n<h2 id=\"incremental-builds\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#incremental-builds\"><a href=\"#incremental-builds\" style=\"margin-right: 10px\">#</a></a>Incremental builds</h2>\n<p>We can use this to do incremental/watch builds</p>\n<pre class=\"shiki poimandres\" style=\"background-color: #1b1e28\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #91B4D5\">npm</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">run</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">build</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">--watch</span></span>\n<span class=\"line\"><span style=\"color: #767C9DB0; font-style: italic\"># or</span></span>\n<span class=\"line\"><span style=\"color: #91B4D5\">yarn</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">build</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">--watch</span></span></code></pre>\n<h2 id=\"adding-testing-with-ts-jest\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#adding-testing-with-ts-jest\"><a href=\"#adding-testing-with-ts-jest\" style=\"margin-right: 10px\">#</a></a>Adding testing with ts-jest</h2>\n<p>You can use ts-jest to test your code. This involves installing jest,\ntypescript, ts-jest, @types/jest, and then initializing a jest.config.json</p>\n<pre class=\"shiki poimandres\" style=\"background-color: #1b1e28\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #91B4D5\">npm</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">i</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">-D</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">jest</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">typescript</span></span>\n<span class=\"line\"><span style=\"color: #767C9DB0; font-style: italic\"># or</span></span>\n<span class=\"line\"><span style=\"color: #91B4D5\">yarn</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">add</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">--dev</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">jest</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">typescript</span></span></code></pre>\n<pre class=\"shiki poimandres\" style=\"background-color: #1b1e28\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #91B4D5\">npm</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">i</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">-D</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">ts-jest</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">@types/jest</span></span>\n<span class=\"line\"><span style=\"color: #767C9DB0; font-style: italic\"># or</span></span>\n<span class=\"line\"><span style=\"color: #91B4D5\">yarn</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">add</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">--dev</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">ts-jest</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">@types/jest</span></span></code></pre>\n<pre class=\"shiki poimandres\" style=\"background-color: #1b1e28\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #91B4D5\">npx</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">ts-jest</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">config:init</span></span>\n<span class=\"line\"><span style=\"color: #767C9DB0; font-style: italic\"># or</span></span>\n<span class=\"line\"><span style=\"color: #91B4D5\">yarn</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">ts-jest</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">config:init</span></span></code></pre>\n<p>We can then create a test</p>\n<p><code>test/util.spec.ts</code></p>\n<pre class=\"shiki poimandres\" style=\"background-color: #1b1e28\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #5DE4C7\">import </span><span style=\"color: #A6ACCD\">{</span><span style=\"color: #5DE4C7\"> </span><span style=\"color: #ADD7FF\">getMessage</span><span style=\"color: #5DE4C7\"> </span><span style=\"color: #A6ACCD\">}</span><span style=\"color: #5DE4C7\"> </span><span style=\"color: #A6ACCD\">from</span><span style=\"color: #5DE4C7\"> </span><span style=\"color: #A6ACCD\">'</span><span style=\"color: #5DE4C7\">../src/util</span><span style=\"color: #A6ACCD\">'</span></span>\n<span class=\"line\"><span style=\"color: #E4F0FBD0\">test</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #A6ACCD\">'</span><span style=\"color: #5DE4C7\">expected message returned</span><span style=\"color: #A6ACCD\">'</span><span style=\"color: #A6ACCD\">, () </span><span style=\"color: #91B4D5\">=></span><span style=\"color: #A6ACCD\"> {</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #E4F0FBD0\">expect</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #E4F0FBD0\">getMessage</span><span style=\"color: #A6ACCD\">()).</span><span style=\"color: #E4F0FBD0\">toBe</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #A6ACCD\">'</span><span style=\"color: #5DE4C7\">hello</span><span style=\"color: #A6ACCD\">'</span><span style=\"color: #A6ACCD\">)</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">})</span></span></code></pre>\n<p>Then we can then create a script in the package.json that says <code>\"test\": \"jest\"</code>,\nand then we can say</p>\n<pre class=\"shiki poimandres\" style=\"background-color: #1b1e28\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #91B4D5\">npm</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">run</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">test</span></span>\n<span class=\"line\"><span style=\"color: #767C9DB0; font-style: italic\"># or</span></span>\n<span class=\"line\"><span style=\"color: #91B4D5\">yarn</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">test</span></span></code></pre>\n<p>You can also create an alternative system where you use <code>babel-eslint</code> and\nvarious babel strategies to test your code, but if you are using <code>typescript</code>,\n<code>ts-jest</code> and <code>typescript</code> works great.</p>\n<h2 id=\"add-a-gitignore\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#add-a-gitignore\"><a href=\"#add-a-gitignore\" style=\"margin-right: 10px\">#</a></a>Add a .gitignore</h2>\n<p>Create a .gitignore with just a line that references this <code>dist</code> folder and\n<code>node_modules</code> folder</p>\n<pre><code>dist\nnode_modules\n</code></pre>\n<h2 id=\"the-future-of-esm-modules\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#the-future-of-esm-modules\"><a href=\"#the-future-of-esm-modules\" style=\"margin-right: 10px\">#</a></a>The future of ESM modules</h2>\n<p>There is a shift happening where modules are changing to be pure ESM rather than\nkeeping commonjs equivalents</p>\n<p><a href=\"https://gist.github.com/sindresorhus/a39789f98801d908bbc7ff3ecc99d99c\">https://gist.github.com/sindresorhus/a39789f98801d908bbc7ff3ecc99d99c</a></p>\n<p>There are many challenges here, but one shortcut that I have used is to actually\ngo \"halfway to ESM\" and just publish a \"dual\" package: one \"main\" field in the\npackage.json referring to a commonjs file, and one \"module\" field with an ESM\nstyle build for bundlers. I do it like this:</p>\n<pre class=\"shiki poimandres\" style=\"background-color: #1b1e28\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #A6ACCD\">{</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #E4F0FB\">files</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">: [</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #5DE4C7\">dist</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">, </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #5DE4C7\">esm</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">, </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #5DE4C7\">src</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">],</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #E4F0FB\">scripts</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">: {</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">     </span><span style=\"color: #D0679D\">...</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #ADD7FF\">clean</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">: </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #5DE4C7\">rimraf dist esm</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">,</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #ADD7FF\">prebuild</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">: </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #5DE4C7\">npm run clean</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">,</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #ADD7FF\">build:cjs</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">: </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #5DE4C7\">tsc --module commonjs --ourDir dist</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">,</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #ADD7FF\">build:esm</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">: </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #5DE4C7\">tsc --target es2018 --outDir esm</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">,</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #ADD7FF\">build</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">: </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #5DE4C7\">npm run build:esm &#x26;&#x26; npm run build:cjs</span><span style=\"color: #A6ACCD\">\"</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  },</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #E4F0FB\">main</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">: </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #5DE4C7\">dist/index.js</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">,</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #E4F0FB\">module</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #A6ACCD\">: </span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #5DE4C7\">esm/index.js</span><span style=\"color: #A6ACCD\">\"</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">}</span></span></code></pre>\n<p>The \"module\" field is understood by bundlers like webpack and you can do\nslightly less polyfilling/babeling on it (hence the different <code>--target</code>\nattributes)</p>\n<p>This is not \"pure ESM\" with the \"type\":\"module\" in package.json, but it does\nhelp to have less \"babelification\" (which in our case is done by tsc) of your\nsource code.</p>\n<h2 id=\"conclusion\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#conclusion\"><a href=\"#conclusion\" style=\"margin-right: 10px\">#</a></a>Conclusion</h2>\n<p>This tutorial shows you how you can create a basic package that you can publish\nto <code>npm</code>. This little boilerplate includes these features:</p>\n<ul>\n<li>Makes clean build when running <code>yarn build</code> or <code>yarn publish</code></li>\n<li>Pushes to github after publish</li>\n<li>Uses <code>ts-jest</code> for testing</li>\n<li>Uses esm modules</li>\n</ul>\n<p>You also have full control, and understand the decisions we took to get to this\npoint. This package does not use any bundling (rollup or webpack or otherwise).\nIt just uses <code>tsc</code> is used to compile the files to the <code>dist</code> folder, and the\ndist folder is published to <code>npm</code>!</p>\n<p>If you need your package to be usable by consumers that don't themselves use\nbundlers, consider looking into <code>&#x3C;script type=\"module\"></code> for importing ESM\nmodules in the browser, or you can bundle your library using rollup or webpack\nand output e.g. a UMD bundle</p>\n<h2 id=\"final-product\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#final-product\"><a href=\"#final-product\" style=\"margin-right: 10px\">#</a></a>Final product</h2>\n<p>See <a href=\"https://github.com/cmdcolin/npm-package-tutorial/\">https://github.com/cmdcolin/npm-package-tutorial/</a></p>\n<h2 id=\"footnote-1\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#footnote-1\"><a href=\"#footnote-1\" style=\"margin-right: 10px\">#</a></a>Footnote 1</h2>\n<p>See my follow up rant\n<a href=\"https://cmdcolin.github.io/posts/2022-05-27-youmaynotneedabundler\">https://cmdcolin.github.io/posts/2022-05-27-youmaynotneedabundler</a></p>\n<h2 id=\"footnote-2\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#footnote-2\"><a href=\"#footnote-2\" style=\"margin-right: 10px\">#</a></a>Footnote 2</h2>\n<p>This is a setup that works for me, but there are many ways to publish a package\nso take it with a grain of salt!</p>"}},"__N_SSG":true}