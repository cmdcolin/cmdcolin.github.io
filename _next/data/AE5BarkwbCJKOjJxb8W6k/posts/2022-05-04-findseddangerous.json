{"pageProps":{"post":{"title":"Using find . -exec sed is dangerous in a git repo","date":"2022-05-04","slug":"2022-05-04-findseddangerous","mdxSource":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      p: \"p\",\n      a: \"a\",\n      pre: \"pre\",\n      code: \"code\",\n      h2: \"h2\"\n    }, _provideComponents(), props.components);\n    return _jsxs(_Fragment, {\n      children: [_jsx(_components.p, {\n        children: \"You want to find and replace in a code, so you google \\\"find replace directory\\nlinux command\\\". You end up here\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.a, {\n          href: \"https://stackoverflow.com/a/6759339/2129219\",\n          children: \"https://stackoverflow.com/a/6759339/2129219\"\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"They tell us\"\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-sh\",\n          children: \"find ./ -type f -exec sed -i -e 's/apple/orange/g' {} \\\\;\\n\"\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Ignoring the fact that this syntax is very long and annoying, this command is\\ndangerous to use in a git repository. Specifically, this can corrupt your .git\\ncontents.\"\n      }), \"\\n\", _jsx(_components.h2, {\n        children: \"Why?\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"This command is dangerous because, find . will enumerate dotfiles, including\\nthe .git directory, and then of course will run the find and replace inside\\nthem. We can see this in the following session\"\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-sh\",\n          children: \"> mkdir corruptme\\n> cd corruptme\\n> git init\\n> echo \\\"# README\\\" > README.md\\n> git add README.md\\n> git commit -m \\\"Initial commit\\\"\\n> echo \\\"Hello world, it is a beautiful day. I sure hope someone doesn't corrupt this git repository\\\" >> README.md\\n> git commit -am \\\"Update README.md\\\"\\n> find ./ -type f -exec sed -i -e \\\"s/README/CORRUPTME/g\\\" {} \\\\;\\n> git status\\nerror: index uses md extension, which we do not understand\\nfatal: index file corrupt\\n\"\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"In this case, you may be able to recover it e.g. with\\nhttps://stackoverflow.com/questions/1115854/how-to-resolve-error-bad-index-fatal-index-file-corrupt-when-using-git\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"If you happened to replace some random text that is actually in an object file though e.g. .git/objects\"\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-sh\",\n          children: \"> find ./ -type f -exec sed -i -e \\\"s/VHTHJM/OOOOOO/g\\\" {} \\\\;\\n> git status\\nerror: inflate: data stream error (incorrect data check)\\nerror: corrupt loose object '26cfc5964dfa5355a1747eb6eec6250aab5212d5'\\nfatal: unable to read 26cfc5964dfa5355a1747eb6eec6250aab5212d5\\n\"\n        })\n      }), \"\\n\", _jsx(_components.h2, {\n        children: \"What is better?\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"My take: Use ruplacer \", _jsx(_components.a, {\n          href: \"https://github.com/dmerejkowsky/ruplacer\",\n          children: \"https://github.com/dmerejkowsky/ruplacer\"\n        })]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"This tool respects .gitignore and won't try to replace stuff in your .git\\ndirectory. It will not spend time replacing text for your .git or anything in\\n.gitignore including e.g. node_modules. I was delighted to discover this tool\\nso, just spreading the word\"\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}}},"__N_SSG":true}