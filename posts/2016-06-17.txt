2:"$Sreact.fragment"
3:I[231,["231","static/chunks/231-fc74e6e791c0837d.js","931","static/chunks/app/page-95d4a906a5a795f0.js"],""]
4:I[9275,[],""]
5:I[1343,[],""]
7:I[3120,[],"OutletBoundary"]
9:I[3120,[],"MetadataBoundary"]
b:I[3120,[],"ViewportBoundary"]
d:I[6130,[],""]
1:HL["/_next/static/css/d19cfa26cd1ef694.css","style"]
0:{"P":null,"b":"V_rwE_Kx0SP0ot5L1k3MC","p":"","c":["","posts","2016-06-17"],"i":false,"f":[[["",{"children":["posts",{"children":[["id","2016-06-17","d"],{"children":["__PAGE__?{\"id\":\"2016-06-17\"}",{}]}]}]},"$undefined","$undefined",true],["",["$","$2","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/d19cfa26cd1ef694.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":["$","body",null,{"children":[["$","div",null,{"className":"mb-8","children":["$","$L3",null,{"href":"/","children":"Misc scribbles"}]}],["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[]}],["$","footer",null,{"className":"mt-16","children":[["$","$L3",null,{"className":"m-2","href":"/","children":"Home"}],["$","$L3",null,{"className":"m-2","href":"/archive","children":"Blog archive"}],["$","$L3",null,{"className":"m-2","href":"https://github.com/cmdcolin/","children":"Github"}],["$","$L3",null,{"className":"m-2","href":"/projects","children":"Projects"}],["$","$L3",null,{"className":"m-2","href":"/photos","children":"Photos"}],["$","$L3",null,{"className":"m-2","href":"/books","children":"Books"}],["$","$L3",null,{"className":"m-2","href":"/about","children":"About"}]]}]]}]}]]}],{"children":["posts",["$","$2","c",{"children":[null,["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","posts","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]]}],{"children":[["id","2016-06-17","d"],["$","$2","c",{"children":[null,["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","posts","children","$0:f:0:1:2:children:2:children:0","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]]}],{"children":["__PAGE__",["$","$2","c",{"children":["$L6",null,["$","$L7",null,{"children":"$L8"}]]}],{},null]},null]},null]},null],["$","$2","h",{"children":[null,["$","$2","uDcmXh1HRyAvupbGOtdVl",{"children":[["$","$L9",null,{"children":"$La"}],["$","$Lb",null,{"children":"$Lc"}],null]}]]}]]],"m":"$undefined","G":"$d","s":false,"S":true}
c:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
f:I[1458,["722","static/chunks/app/posts/%5Bid%5D/page-e50cd2f34f19f050.js"],"default",1]
e:T1d39,<p>In the past, I had found some ways to do simple queries on InterMine web
services using basic HTTP commands with R (see
<a href="https://gist.github.com/cmdcolin/4758167bdd89e6c9c055">https://gist.github.com/cmdcolin/4758167bdd89e6c9c055</a>)</p>
<p>However, the InterMineR (<a href="https://github.com/intermine/intermineR">https://github.com/intermine/intermineR</a>) package
automates some of these features and makes it easier to load the data in R.</p>
<h2 id="installation"><a aria-hidden="true" tabindex="-1" href="#installation"><a href="#installation" style="margin-right: 10px">#</a></a>Installation</h2>
<p>One way to install InterMineR is to install from github with hadley/devtools</p>
<figure data-rehype-pretty-code-figure=""><pre style="background-color:#282c34;color:#abb2bf" tabindex="0" data-language="r" data-theme="one-dark-pro"><code data-language="r" data-theme="one-dark-pro" style="display: grid;"><span data-line=""><span style="color:#56B6C2">install.packages</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"devtools"</span><span style="color:#ABB2BF">)</span></span>
<span data-line=""><span style="color:#ABB2BF">devtools</span><span style="color:#C678DD">::</span><span style="color:#61AFEF">install_github</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"hadley/devtools"</span><span style="color:#ABB2BF">)</span></span>
<span data-line=""><span style="color:#ABB2BF">devtools</span><span style="color:#C678DD">::</span><span style="color:#61AFEF">install_github</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"intermine/intermineR"</span><span style="color:#ABB2BF">)</span></span></code></pre></figure>
<h2 id="usage"><a aria-hidden="true" tabindex="-1" href="#usage"><a href="#usage" style="margin-right: 10px">#</a></a>Usage</h2>
<p>Basic usage includes loading theÂ "intermine URL" using the initInterMine
function. Then various functions can be called on this result.</p>
<figure data-rehype-pretty-code-figure=""><pre style="background-color:#282c34;color:#abb2bf" tabindex="0" data-language="r" data-theme="one-dark-pro"><code data-language="r" data-theme="one-dark-pro" style="display: grid;"><span data-line=""><span style="color:#56B6C2">library</span><span style="color:#ABB2BF">(InterMineR)</span></span>
<span data-line=""><span style="color:#E06C75;font-style:italic">mine</span><span style="color:#56B6C2">=</span><span style="color:#61AFEF">initInterMine</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"http://bovinegenome.org/bovinemine/"</span><span style="color:#ABB2BF">)</span></span>
<span data-line=""><span style="color:#61AFEF">getVersion</span><span style="color:#ABB2BF">(mine) </span><span style="color:#7F848E;font-style:italic">#18, intermine API version</span></span>
<span data-line=""><span style="color:#61AFEF">getRelease</span><span style="color:#ABB2BF">(mine) </span><span style="color:#7F848E;font-style:italic">#1.0, our data release version</span></span>
<span data-line=""><span style="color:#61AFEF">getTemplates</span><span style="color:#ABB2BF">(mine) </span><span style="color:#7F848E;font-style:italic"># lists all templates on interminer</span></span></code></pre></figure>
<h2 id="run-a-template-query"><a aria-hidden="true" tabindex="-1" href="#run-a-template-query"><a href="#run-a-template-query" style="margin-right: 10px">#</a></a>Run a template query</h2>
<p>From the getTemplates function, if you see a template query that you want to
run, you can use the getTemplateQuery function with it's name, and run it with
the runQuery function</p>
<figure data-rehype-pretty-code-figure=""><pre style="background-color:#282c34;color:#abb2bf" tabindex="0" data-language="r" data-theme="one-dark-pro"><code data-language="r" data-theme="one-dark-pro" style="display: grid;"><span data-line=""><span style="color:#61AFEF">getTemplateQuery</span><span style="color:#ABB2BF">(mine,</span><span style="color:#98C379">"TQ_protein_to_gene"</span><span style="color:#ABB2BF">) </span><span style="color:#7F848E;font-style:italic"># see what template looks like</span></span>
<span data-line=""><span style="color:#E06C75;font-style:italic">template</span><span style="color:#56B6C2">=</span><span style="color:#61AFEF">getTemplateQuery</span><span style="color:#ABB2BF">(mine,</span><span style="color:#98C379">"TQ_protein_to_gene"</span><span style="color:#ABB2BF">) </span><span style="color:#7F848E;font-style:italic"># save template</span></span>
<span data-line=""><span style="color:#61AFEF">runQuery</span><span style="color:#ABB2BF">(mine,template) </span><span style="color:#7F848E;font-style:italic"># run the template query with default params, receive data.frame</span></span></code></pre></figure>
<p>This method is good, but some improvement could be added to change default
parameters in the template query, etc.</p>
<h2 id="run-query-xml"><a aria-hidden="true" tabindex="-1" href="#run-query-xml"><a href="#run-query-xml" style="margin-right: 10px">#</a></a>Run query XML</h2>
<p>Another option for running queries is to use the query XML that you can download
from the InterMine query result pages.</p>
<figure data-rehype-pretty-code-figure=""><pre style="background-color:#282c34;color:#abb2bf" tabindex="0" data-language="r" data-theme="one-dark-pro"><code data-language="r" data-theme="one-dark-pro" style="display: grid;"><span data-line=""><span style="color:#7F848E;font-style:italic"># get all Ensembl genes on chr28 from bovinemine</span></span>
<span data-line=""><span style="color:#E06C75;font-style:italic">query</span><span style="color:#56B6C2">=</span><span style="color:#98C379">'&#x3C;query model="genomic" view="Gene.primaryIdentifier</span></span>
<span data-line=""><span style="color:#98C379">Gene.secondaryIdentifier Gene.symbol Gene.name Gene.source</span></span>
<span data-line=""><span style="color:#98C379">Gene.organism.shortName Gene.chromosome.primaryIdentifier"</span></span>
<span data-line=""><span style="color:#98C379">sortOrder="Gene.primaryIdentifier ASC" >&#x3C;constraint</span></span>
<span data-line=""><span style="color:#98C379">path="Gene.organism.shortName" op="=" value="B. taurus"</span></span>
<span data-line=""><span style="color:#98C379">/>&#x3C;constraint path="Gene.chromosome.primaryIdentifier" op="="</span></span>
<span data-line=""><span style="color:#98C379">value="GK000028.2" />&#x3C;/query>'</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#E06C75;font-style:italic">results</span><span style="color:#56B6C2">=</span><span style="color:#61AFEF">runQuery</span><span style="color:#ABB2BF">(mine, query)</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#56B6C2">head</span><span style="color:#ABB2BF">(results)</span></span></code></pre></figure>
<h2 id="conclusion"><a aria-hidden="true" tabindex="-1" href="#conclusion"><a href="#conclusion" style="margin-right: 10px">#</a></a>Conclusion</h2>
<p>The InterMineR package has a couple of nice features for getting InterMine data
with a couple of functions for looking at templates. For many use cases, copying
the Query XML from a InterMine webpage and pasting that into the runQuery
function is sufficient and produces a data frame that can be analyzed.</p>
<p>PS it is not easy to post XML on tumblr after editing the post in markdown mode.
You have to add the lt and gt shortcuts and even after that it gets filtered?!</p>6:["$","div",null,{"className":"lg:w-1/2","children":[["$","div",null,{"children":[["$","h1",null,{"children":"Querying InterMine databases using R"}],["$","h4",null,{"children":"2016-06-17"}]]}],["$","div",null,{"dangerouslySetInnerHTML":{"__html":"$e"}}],["$","$Lf",null,{}]]}]
a:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Querying InterMine databases using R"}],["$","meta","2",{"name":"description","content":"A blog"}]]
8:null
