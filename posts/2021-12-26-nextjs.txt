0:[[["",{"children":["posts",{"children":[["id","2021-12-26-nextjs","d"],{"children":["__PAGE__?{\"id\":\"2021-12-26-nextjs\"}",{}]}]}]},"$undefined","$undefined",true],"$L1",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/97dc5fe527f5d592.css","precedence":"next.js"}]],"$L2"]]]
3:I{"id":"414","chunks":["414:static/chunks/414-67273665b1a3d6a7.js","931:static/chunks/app/page-dc06b9eb7e80dd25.js"],"name":"","async":false}
4:I{"id":"9544","chunks":["272:static/chunks/webpack-3224743bbfce757e.js","667:static/chunks/2443530c-6156b7f4e8f5b2c4.js","139:static/chunks/139-f487b95f332b70cd.js"],"name":"","async":false}
5:I{"id":"99","chunks":["272:static/chunks/webpack-3224743bbfce757e.js","667:static/chunks/2443530c-6156b7f4e8f5b2c4.js","139:static/chunks/139-f487b95f332b70cd.js"],"name":"","async":false}
1:[["$","html",null,{"lang":"en","children":["$","body",null,{"children":[["$","div",null,{"style":{"marginBottom":100},"children":["$","$L3",null,{"href":"/","children":"Misc scribbles"}]}],["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L5",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","asNotFound":false,"childProp":{"current":["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","posts","children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L5",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","asNotFound":false,"childProp":{"current":["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","posts","children",["id","2021-12-26-nextjs","d"],"children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L5",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","asNotFound":false,"childProp":{"current":["$L6",[null,null]],"segment":"__PAGE__?{\"id\":\"2021-12-26-nextjs\"}"},"styles":[]}],"segment":["id","2021-12-26-nextjs","d"]},"styles":[]}],"segment":"posts"},"styles":[]}],["$","footer",null,{"style":{"marginTop":100},"children":[["$","$L3",null,{"href":"/","children":"Home"}]," ",["$","$L3",null,{"href":"/archive","children":"Blog archive"}]," ",["$","$L3",null,{"href":"https://github.com/cmdcolin/","children":"Github"}]," ",["$","$L3",null,{"href":"https://twitter.com/cmdcolin","children":"Twitter"}]," ",["$","$L3",null,{"href":"/projects","children":"Projects"}]," ",["$","$L3",null,{"href":"/photos","children":"Photos"}]," ",["$","$L3",null,{"href":"/about","children":"About"}]]}]]}]}],[null,null]]
7:I{"id":"6677","chunks":["722:static/chunks/app/posts/[id]/page-433af8cd6c54ad7f.js"],"name":"","async":false}
6:["$","article",null,{"children":[["$","div",null,{"children":[["$","h1",null,{"children":"My next.js static blog setup"}],["$","h4",null,{"children":"2021-12-26"}]]}],["$","div",null,{"dangerouslySetInnerHTML":{"__html":"<p>TL;DR src here <a href=\"https://github.com/cmdcolin/cmdcolin.github.io\">https://github.com/cmdcolin/cmdcolin.github.io</a></p>\n<p>Update 2023: converted to app directory mode, see\n<a href=\"https://cmdcolin.github.io/posts/2023-04-08-nextjs-appdir-blog\">https://cmdcolin.github.io/posts/2023-04-08-nextjs-appdir-blog</a></p>\n<p>My personal homepage originally used statocles, a perl-based static site\ngenerator (<a href=\"http://preaction.me/statocles/\">http://preaction.me/statocles/</a>). I didn't really blog using it, just\na homepage for myself plus some links to my tumblr blog. But, if I linked people\nto the tumblr blog directly, it would give people terrible popup ads and\ntrackers. So, I switched to github pages+next.js this year. I considered a\nnumber of alternative static site systems, but next.js seemed to hit some nice\ngoals</p>\n<ul>\n<li>Flexible</li>\n<li>React-based (as opposed to template-based like jekyll, eleventy, etc.)</li>\n<li>Markdown driven, and can use MDX (edit 2022: I removed MDX, I disliked the\ncomplicated that it brought. Now all posts are plain markdown, parsed with\n<code>remark-gfm</code> for github flavored markdown, and all pages are <code>tsx</code>)</li>\n<li>RSS feed (bonus)</li>\n<li>Active community</li>\n</ul>\n<p>Other systems almost worked and were attempted but aborted</p>\n<h3 id=\"first-and-second-iterations\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#first-and-second-iterations\"><a href=\"#first-and-second-iterations\" style=\"margin-right: 10px\">#</a></a>First and second iterations</h3>\n<p>The first iteration of my next.js blog</p>\n<ul>\n<li>I put every blog post in the \"pages\" folder. This worked ok but I had to\nmanually edit the index.mdx file to have long lists of stuff like this\n<code>![link to new blogpost](manually_inserted_link_here)</code></li>\n</ul>\n<p>The second iteration, I wanted to automatically generate a list of recent\nblogposts from files on disk</p>\n<ul>\n<li>\n<p>I used the next.js \"blog-template-typescript\" example folder from their\n<a href=\"https://github.com/vercel/next.js/tree/canary/examples/blog-starter-typescript\">monorepo</a>.</p>\n</li>\n<li>\n<p>The new blog posts are generated from markdown files in the <code>_posts</code> folder,\nand get rendered by the file <code>pages/posts/[slug].tsx</code> (yes, the filename\nincludes square brackets).</p>\n</li>\n<li>\n<p>getAllPosts in\n<a href=\"https://github.com/cmdcolin/cmdcolin.github.io/blob/master/lib/api.ts\"><code>lib/api.ts</code></a>\ngets a listing of the files in _posts folder, which I can call from the\n<code>getStaticProps</code> method on next.js pages</p>\n</li>\n</ul>\n<h3 id=\"stripping-off-unnecessary-stuff-from-blog-starter-typescript\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#stripping-off-unnecessary-stuff-from-blog-starter-typescript\"><a href=\"#stripping-off-unnecessary-stuff-from-blog-starter-typescript\" style=\"margin-right: 10px\">#</a></a>Stripping off unnecessary stuff from blog-starter-typescript</h3>\n<p>The <code>blog-starter-typescript</code> template has many tiny components, I removed some\nof them to make it easier for me to orient myself</p>\n<ul>\n<li><a href=\"https://github.com/vercel/next.js/tree/canary/examples/blog-starter/components\">theirs</a></li>\n<li><a href=\"https://github.com/cmdcolin/cmdcolin.github.io/tree/master/components\">mine</a></li>\n</ul>\n<h3 id=\"removing-tailwind-css\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#removing-tailwind-css\"><a href=\"#removing-tailwind-css\" style=\"margin-right: 10px\">#</a></a>Removing tailwind CSS</h3>\n<p>The <code>blog-starter-typescript</code> template uses tailwind CSS and uses \"modern web\ndesign\" (aka: gigantic \"tiles\" instead of links, images that are way too large,\netc <a href=\"https://next-blog-starter.vercel.app/\">https://next-blog-starter.vercel.app/</a>)</p>\n<p>I started making a more basic design. I tried to roll with the tailwind CSS for\na bit, but ended up removing it entirely.</p>\n<p>Tailwind CSS is sort of like a CSS-in-JS system, except every CSS attribute is\nencoded in a CSS classname. For example, here are some tailwind CSS snippets</p>\n<pre class=\"shiki poimandres\" style=\"background-color: #1b1e28\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #E4F0FB\">&#x3C;</span><span style=\"color: #5DE4C7\">div</span><span style=\"color: #E4F0FB\"> </span><span style=\"color: #5FB3A1; font-style: italic\">className</span><span style=\"color: #A6ACCD\">=</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #5DE4C7\">container mx-auto px-5</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #E4F0FB\">>&#x3C;/</span><span style=\"color: #5DE4C7\">div</span><span style=\"color: #E4F0FB\">></span></span>\n<span class=\"line\"><span style=\"color: #E4F0FB\">&#x3C;</span><span style=\"color: #5DE4C7\">footer</span><span style=\"color: #E4F0FB\"> </span><span style=\"color: #5FB3A1; font-style: italic\">className</span><span style=\"color: #A6ACCD\">=</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #5DE4C7\">bg-accent-1 border-t border-accent-2</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #E4F0FB\">>&#x3C;/</span><span style=\"color: #5DE4C7\">footer</span><span style=\"color: #E4F0FB\">></span></span>\n<span class=\"line\"><span style=\"color: #E4F0FB\">&#x3C;</span><span style=\"color: #5DE4C7\">div</span><span style=\"color: #E4F0FB\"> </span><span style=\"color: #5FB3A1; font-style: italic\">className</span><span style=\"color: #A6ACCD\">=</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #5DE4C7\">max-w-1xl mx-auto</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #E4F0FB\">>&#x3C;/</span><span style=\"color: #5DE4C7\">div</span><span style=\"color: #E4F0FB\">></span></span>\n<span class=\"line\"><span style=\"color: #E4F0FB\">&#x3C;</span><span style=\"color: #5DE4C7\">div</span><span style=\"color: #E4F0FB\"> </span><span style=\"color: #5FB3A1; font-style: italic\">className</span><span style=\"color: #A6ACCD\">=</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #5DE4C7\">min-h-screen</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #E4F0FB\">>&#x3C;/</span><span style=\"color: #5DE4C7\">div</span><span style=\"color: #E4F0FB\">></span></span>\n<span class=\"line\"><span style=\"color: #E4F0FB\">&#x3C;</span><span style=\"color: #5DE4C7\">a</span><span style=\"color: #E4F0FB\"> </span><span style=\"color: #5FB3A1; font-style: italic\">className</span><span style=\"color: #A6ACCD\">=</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #5DE4C7\">hover:underline</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #E4F0FB\">>&#x3C;/</span><span style=\"color: #5DE4C7\">a</span><span style=\"color: #E4F0FB\">></span></span>\n<span class=\"line\"><span style=\"color: #E4F0FB\">&#x3C;</span><span style=\"color: #5DE4C7\">h1</span></span>\n<span class=\"line\"><span style=\"color: #E4F0FB\">  </span><span style=\"color: #5FB3A1; font-style: italic\">className</span><span style=\"color: #A6ACCD\">=</span><span style=\"color: #A6ACCD\">\"</span><span style=\"color: #5DE4C7\">text-2xl md:text-2xl lg:text-2xl font-bold tracking-tighter leading-tight md:leading-none mb-12 text-center md:text-left</span><span style=\"color: #A6ACCD\">\"</span></span>\n<span class=\"line\"><span style=\"color: #E4F0FB\">>&#x3C;/</span><span style=\"color: #5DE4C7\">h1</span><span style=\"color: #E4F0FB\">></span></span></code></pre>\n<p>They claim this is better than using external CSS (see comparison here\n<a href=\"https://tailwindcss.com/docs/utility-first\">https://tailwindcss.com/docs/utility-first</a>) but it is yet another language to\nlearn, and kind of tricky.</p>\n<p>But, the reason I gave up with tailwind is actually because tailwind CSS resets\na lot of HTML styles so things like <code>&#x3C;h1></code>, <code>&#x3C;h2></code>, <code>&#x3C;ul></code>, <code>&#x3C;li></code>, <code>&#x3C;a></code> have\nno styling at all. This is done by <code>tailwind preflight</code>\n<a href=\"https://tailwindcss.com/docs/preflight\">https://tailwindcss.com/docs/preflight</a> (which you can disable, but it is enabled\nby default)</p>\n<p>Stackoverflow has some ways to help restore styling and keep preflight, but it\nstill struck me as odd. Examples</p>\n<ul>\n<li>\n<p><a href=\"https://stackoverflow.com/a/68853223/2129219\">Example: you have to manually restore underlines on <code>&#x3C;a></code> elements if using tailwind XSS</a></p>\n</li>\n<li>\n<p><a href=\"https://stackoverflow.com/questions/69264976/cant-display-markdown-on-nextjs\">Another example: \"It looks like you're using TailwindCSS, the default styles for elements are reset, that's why the h1 text will look like any other text.\"</a></p>\n</li>\n<li>\n<p><a href=\"https://raw.githubusercontent.com/vercel/next.js/canary/examples/blog-starter-typescript/components/markdown-styles.module.css\">Another example <code>blog-template-typescript</code> uses this file to try to style the markdown using some general styles</a></p>\n</li>\n</ul>\n<p>To me it was surprising the extend that tailwind goes to unstyle the default\nbrowser styles, removing \"idiomatic HTML\" styles, so I removed tailwind for now.\nPerhaps I'll return to it another time</p>\n<h2 id=\"using-mdx-for-blogposts-in-nextjs\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#using-mdx-for-blogposts-in-nextjs\"><a href=\"#using-mdx-for-blogposts-in-nextjs\" style=\"margin-right: 10px\">#</a></a>Using MDX for blogposts in next.js</h2>\n<p>(UPDATE 2022) I no longer use MDX in my blog, my blogposts are all plain\nmarkdown and pages tsx, but leave this here for reference</p>\n<p>In the template from next.js team, the <code>blog-template-typescript</code>, it uses a\nfairly simple <code>lib/markdownToHtml.ts</code> function right in the\n<code>pages/posts/[slug].tsx</code> file (the markdown is statically pre-rendered in the\ntrue static blog sense, using the getStaticProps function). This is,\nunfortunately, over-simplified for the MDX case, because MDX properly needs to\nhydrate the components using react on the client side also</p>\n<p>To fix, the module <a href=\"https://github.com/hashicorp/next-mdx-remote\">https://github.com/hashicorp/next-mdx-remote</a> offers a way to\nload actual MDX files.</p>\n<h2 id=\"adding-syntax-highlighting-the-nextjs-code-snippets\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#adding-syntax-highlighting-the-nextjs-code-snippets\"><a href=\"#adding-syntax-highlighting-the-nextjs-code-snippets\" style=\"margin-right: 10px\">#</a></a>Adding syntax highlighting the next.js code snippets</h2>\n<p>(UPDATE 2022) I changed to using plain remark with\n<a href=\"https://github.com/wooorm/starry-night\">https://github.com/wooorm/starry-night</a> (UPDATE 2022 v2) I changed from\nstarry-night to rehype-highlight. starry-night did not have good typescript/tsx\nsupport</p>\n<p>There are a couple results from google about how to add syntax highlighting to\nnext.js but I still found it difficult.</p>\n<p>My method ended up a bit different where I manually included the prism JS and\nCSS from a CDN essentially and it worked</p>\n<p><a href=\"https://github.com/cmdcolin/cmdcolin.github.io/blob/aa080193f45cb3e3d11ca1ead2bbd5eb2ae09633/styles/index.css#L14-L15\">https://github.com/cmdcolin/cmdcolin.github.io/blob/aa080193f45cb3e3d11ca1ead2bbd5eb2ae09633/styles/index.css#L14-L15</a></p>\n<p><a href=\"https://github.com/cmdcolin/cmdcolin.github.io/blob/aa080193f45cb3e3d11ca1ead2bbd5eb2ae09633/pages/_document.tsx#L12-L17\">https://github.com/cmdcolin/cmdcolin.github.io/blob/aa080193f45cb3e3d11ca1ead2bbd5eb2ae09633/pages/_document.tsx#L12-L17</a></p>\n<p>Other methods e.g. adding react-prism in next.config.js (like\n<a href=\"https://github.com/mikeesto/next-mdx-prism-example\">https://github.com/mikeesto/next-mdx-prism-example</a> does) I think clashed with\nMDXRemote perhaps, or maybe I was tussling with tailwind CSS too much to make a\nclear thought out of it, but syntax blocks on my blogposts should now be\nproperly highlighted</p>\n<h2 id=\"rss-feed\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#rss-feed\"><a href=\"#rss-feed\" style=\"margin-right: 10px\">#</a></a>RSS feed</h2>\n<p>I also followed this great guide to add a RSS file for next.js\n<a href=\"https://ashleemboyer.com/how-i-added-an-rss-feed-to-my-nextjs-site\">https://ashleemboyer.com/how-i-added-an-rss-feed-to-my-nextjs-site</a></p>\n<p>Link here, for your feed readers <a href=\"https://cmdcolin.github.io/rss.xml\">https://cmdcolin.github.io/rss.xml</a></p>\n<p>Not many people may use RSS much anymore, but I do use it (via feedly), and I\nlove music blogs that keep posting on blogspot year after year, and the\noccasional programming post is nice too</p>"}}],["$","$L7",null,{}]]}]
2:[[["$","meta",null,{"charSet":"utf-8"}],["$","title",null,{"children":"My next.js static blog setup"}],["$","meta",null,{"name":"description","content":"A blog"}],null,null,null,null,null,null,null,null,["$","meta",null,{"name":"viewport","content":"width=device-width, initial-scale=1"}],null,null,null,null,null,null,null,null,null,null,[]],[null,null,null,null],null,null,[null,null,null,null,null],null,null,null,null,[null,[["$","link",null,{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"any"}]],[],null]]
