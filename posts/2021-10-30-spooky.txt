0:[[["",{"children":["posts",{"children":[["id","2021-10-30-spooky","d"],{"children":["__PAGE__?{\"id\":\"2021-10-30-spooky\"}",{}]}]}]},"$undefined","$undefined",true],"$L1","$L2"]]
3:I{"id":"3619","name":"","chunks":["619:619-d3e80a47715091a2","931:app/page-59752a1737368847"],"async":false}
4:I{"id":"1300","name":"","chunks":["272:webpack-3224743bbfce757e","667:2443530c-7c83a1ec49cb3fce","961:961-0b7193e5f574b882"],"async":false}
5:I{"id":"6022","name":"","chunks":["272:webpack-3224743bbfce757e","667:2443530c-7c83a1ec49cb3fce","961:961-0b7193e5f574b882"],"async":false}
2:[[["$","meta",null,{"charSet":"utf-8"}],["$","title",null,{"children":"Misc scribblings"}],["$","meta",null,{"name":"description","content":"A blog"}],null,null,null,null,null,null,null,null,["$","meta",null,{"name":"viewport","content":"width=device-width, initial-scale=1"}],null,null,null,null,null,null,null,null,null,null,[]],[null,null,null,null],null,null,[null,null,null,null,null],null,null,null,null,null]
1:[["$","html",null,{"lang":"en","children":["$","body",null,{"children":[["$","div",null,{"style":{"marginBottom":100},"children":["$","$L3",null,{"href":"/","children":"Misc scribbles"}]}],["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L5",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":"$undefined","asNotFound":false,"childProp":{"current":["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","posts","children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L5",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","asNotFound":false,"childProp":{"current":["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","posts","children",["id","2021-10-30-spooky","d"],"children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L5",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","asNotFound":false,"childProp":{"current":["$L6","$@7"],"segment":"__PAGE__?{\"id\":\"2021-10-30-spooky\"}"}}],"segment":["id","2021-10-30-spooky","d"]}}],"segment":"posts"}}],["$","footer",null,{"style":{"marginTop":100},"children":[["$","$L3",null,{"href":"/","children":"Home"}]," ",["$","$L3",null,{"href":"/archive","children":"Blog archive"}]," ",["$","$L3",null,{"href":"https://github.com/cmdcolin/","children":"Github"}]," ",["$","$L3",null,{"href":"https://twitter.com/cmdcolin","children":"Twitter"}]," ",["$","$L3",null,{"href":"/projects","children":"Projects"}]," ",["$","$L3",null,{"href":"/photos","children":"Photos"}]," ",["$","$L3",null,{"href":"/rss.xml","children":"RSS"}]," ",["$","$L3",null,{"href":"/about","children":"About"}]]}]]}]}],"$@8"]
9:I{"id":"3591","name":"","chunks":["722:app/posts/[id]/page-cb4a6e559310dd46"],"async":false}
6:["$","article",null,{"children":[null,["$","div",null,{"children":[["$","h1",null,{"children":"A spooky error when you have a string bigger than 512MB in Chrome"}],["$","h4",null,{"children":"2021-10-30"}]]}],["$","div",null,{"dangerouslySetInnerHTML":{"__html":"<p>Now gather round for a spooky story</p>\n<p>Late one night... in the haunted office/castle the midnight candles were burning\nbright and we entered data for a user file....</p>\n<p>(hindenbugs cackling in the background, dusty technical books line the dark\nshelves)</p>\n<p>A simple 52MB gzipped datafile that we want to process in the browser. We unzip\nit, decode it, and ... we see an error!!! <strong>LIGHTNING CRACKS</strong></p>\n<p><img src=\"/media/pumpkin-dark.jpg\" alt=\"\"></p>\n<p>But... our code is so simple (we of course abide by the religion of writing\n\"simple code\" you know)...what could be happening?</p>\n<p>The code looks like this</p>\n<pre class=\"shiki poimandres\" style=\"background-color: #1b1e28\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #91B4D5\">const</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #E4F0FB\">buf</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #91B4D5\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #E4F0FBD0\">unzip</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #E4F0FB\">file</span><span style=\"color: #A6ACCD\">)</span></span>\n<span class=\"line\"><span style=\"color: #91B4D5\">const</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #E4F0FB\">str</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #91B4D5\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #5DE4C7\">new</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #E4F0FBD0\">TextDecoder</span><span style=\"color: #A6ACCD\">().</span><span style=\"color: #E4F0FBD0\">decode</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #E4F0FB\">buf</span><span style=\"color: #A6ACCD\">)</span></span></code></pre>\n<p>We trace it back and run a <code>console.log(str)</code></p>\n<p>It looks empty. We try running <code>console.log(str.length)</code> ... it prints out 0</p>\n<p>But if we look at <code>console.log(buffer.length)</code> we get 546,483,710 bytes...</p>\n<p>What could be happening?</p>\n<p>We see in the <code>TextDecoder</code> documentation that it has a note called \"fatal\". We\ntry</p>\n<pre class=\"shiki poimandres\" style=\"background-color: #1b1e28\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #91B4D5\">const</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #E4F0FB\">buf</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #91B4D5\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #E4F0FBD0\">unzip</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #E4F0FB\">file</span><span style=\"color: #A6ACCD\">)</span></span>\n<span class=\"line\"><span style=\"color: #91B4D5\">const</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #E4F0FB\">str</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #91B4D5\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #5DE4C7\">new</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #E4F0FBD0\">TextDecoder</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #A6ACCD\">'</span><span style=\"color: #5DE4C7\">utf8</span><span style=\"color: #A6ACCD\">'</span><span style=\"color: #A6ACCD\">, {</span><span style=\"color: #E4F0FB\"> </span><span style=\"color: #ADD7FF\">fatal</span><span style=\"color: #A6ACCD\">:</span><span style=\"color: #ADD7FF\"> </span><span style=\"color: #5DE4C7\">true</span><span style=\"color: #ADD7FF\"> </span><span style=\"color: #A6ACCD\">}).</span><span style=\"color: #E4F0FBD0\">decode</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #E4F0FB\">buf</span><span style=\"color: #A6ACCD\">)</span></span></code></pre>\n<p>This doesn't change the results though</p>\n<p>Then it dawns on us while the lightning hits and the thunderclap booms and the\nwind blows through the rattly windows</p>\n<p>We have hit...the maximum string length in Chrome</p>\n<p>BWAHAHAHAHA</p>\n<p>The maximum string length!!! Nooooooo</p>\n<p>It is 512MB on the dot... 536,870,888 bytes. We test this to be sure</p>\n<pre class=\"shiki poimandres\" style=\"background-color: #1b1e28\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #91B4D5\">const</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #E4F0FB\">len</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #91B4D5\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #5DE4C7\">536_870_888</span></span>\n<span class=\"line\"><span style=\"color: #91B4D5\">const</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #E4F0FB\">buf</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #91B4D5\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #5DE4C7\">new</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #E4F0FBD0\">Uint8Array</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #E4F0FB\">len</span><span style=\"color: #A6ACCD\">)</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">for (</span><span style=\"color: #91B4D5\">let</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #E4F0FB\">i</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #91B4D5\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #5DE4C7\">0</span><span style=\"color: #A6ACCD\">; </span><span style=\"color: #E4F0FB\">i</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #91B4D5\">&#x3C;</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #E4F0FB\">len</span><span style=\"color: #A6ACCD\">; </span><span style=\"color: #E4F0FB\">i</span><span style=\"color: #91B4D5\">++</span><span style=\"color: #A6ACCD\">) {</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #E4F0FB\">buf</span><span style=\"color: #A6ACCD\">[</span><span style=\"color: #E4F0FB\">i</span><span style=\"color: #A6ACCD\">] </span><span style=\"color: #91B4D5\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #A6ACCD\">'</span><span style=\"color: #5DE4C7\">a</span><span style=\"color: #A6ACCD\">'</span><span style=\"color: #A6ACCD\">.</span><span style=\"color: #E4F0FBD0\">charCodeAt</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #5DE4C7\">0</span><span style=\"color: #A6ACCD\">)</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">}</span></span>\n<span class=\"line\"><span style=\"color: #91B4D5\">const</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #E4F0FB\">str</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #91B4D5\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #5DE4C7\">new</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #E4F0FBD0\">TextDecoder</span><span style=\"color: #A6ACCD\">().</span><span style=\"color: #E4F0FBD0\">decode</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #E4F0FB\">buf</span><span style=\"color: #A6ACCD\">)</span></span>\n<span class=\"line\"><span style=\"color: #E4F0FB\">console</span><span style=\"color: #A6ACCD\">.</span><span style=\"color: #E4F0FBD0\">log</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #E4F0FB\">str</span><span style=\"color: #A6ACCD\">.</span><span style=\"color: #E4F0FB\">length</span><span style=\"color: #A6ACCD\">)</span></span></code></pre>\n<p>This is correct, outputs 536,870,888</p>\n<p>With anything, even one byte more, it fails and outputs 0</p>\n<p>happy halloween!!</p>\n<p>pumpkin photo source:\n<a href=\"http://mountainbikerak.blogspot.com/2010/11/google-chrome-pumpkin.html\">http://mountainbikerak.blogspot.com/2010/11/google-chrome-pumpkin.html</a></p>\n<ul>\n<li>\n<p>chrome 95 tested</p>\n</li>\n<li>\n<p>nodejs 15 - at 512MB+1 bytes it prints an error message\n<code>Error: Cannot create a string longer than 0x1fffffe8 characters</code> for\nsignificantly greater than 512MB e.g. 600MB it actually prints a different\nerror\n<code>TypeError [ERR_ENCODING_INVALID_ENCODED_DATA]: The encoded data was not valid for encoding utf-8</code>)</p>\n</li>\n<li>\n<p>firefox 93 - goes up to ~1GB but then gives Exception\n<code>{ name: \"NS_ERROR_OUT_OF_MEMORY\", message: \"\", result: 2147942414 }</code></p>\n</li>\n<li>\n<p>midori 6 (safari-alike/webkit) - goes up to ~2GB fine! will have to test more</p>\n</li>\n</ul>"}}],["$","$L9",null,{}]]}]
7:[null,null,[]]
8:[null,null,[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/97dc5fe527f5d592.css","precedence":"next.js"}]]]
