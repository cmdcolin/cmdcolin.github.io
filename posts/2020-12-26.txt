2:"$Sreact.fragment"
3:I[4839,["839","static/chunks/839-781fb1f9fbb32020.js","974","static/chunks/app/page-b8224092ad435855.js"],""]
4:I[5244,[],""]
5:I[3866,[],""]
7:I[6213,[],"OutletBoundary"]
9:I[6213,[],"MetadataBoundary"]
b:I[6213,[],"ViewportBoundary"]
d:I[4835,[],""]
1:HL["/_next/static/css/d19cfa26cd1ef694.css","style"]
0:{"P":null,"b":"sGaZGJoKcXKwUwhTlyj2B","p":"","c":["","posts","2020-12-26"],"i":false,"f":[[["",{"children":["posts",{"children":[["id","2020-12-26","d"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$2","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/d19cfa26cd1ef694.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":["$","body",null,{"children":[["$","div",null,{"className":"mb-8","children":["$","$L3",null,{"href":"/","children":"Misc scribbles"}]}],["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[]}],["$","footer",null,{"className":"mt-16","children":[["$","$L3",null,{"className":"m-2","href":"/","children":"Home"}],["$","$L3",null,{"className":"m-2","href":"/archive","children":"Blog archive"}],["$","$L3",null,{"className":"m-2","href":"https://github.com/cmdcolin/","children":"Github"}],["$","$L3",null,{"className":"m-2","href":"/projects","children":"Projects"}],["$","$L3",null,{"className":"m-2","href":"/photos","children":"Photos"}],["$","$L3",null,{"className":"m-2","href":"/books","children":"Books"}],["$","$L3",null,{"className":"m-2","href":"/about","children":"About"}],["$","$L3",null,{"className":"m-2","href":"/rss.xml","children":"RSS"}]]}]]}]}]]}],{"children":["posts",["$","$2","c",{"children":[null,["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","posts","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]]}],{"children":[["id","2020-12-26","d"],["$","$2","c",{"children":[null,["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","posts","children","$0:f:0:1:2:children:2:children:0","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]]}],{"children":["__PAGE__",["$","$2","c",{"children":["$L6",null,["$","$L7",null,{"children":"$L8"}]]}],{},null]},null]},null]},null],["$","$2","h",{"children":[null,["$","$2","BP6pJOeh6PRJTWiAt47T6",{"children":[["$","$L9",null,{"children":"$La"}],["$","$Lb",null,{"children":"$Lc"}],null]}]]}]]],"m":"$undefined","G":["$d","$undefined"],"s":false,"S":true}
c:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
f:I[7928,["880","static/chunks/app/posts/%5Bid%5D/page-6ba20b6c7bd62b9f.js"],"default"]
e:T12d8f,<p>This post follows onhttps://cmdcolin.github.io/2020-12-24.html</p>
<p>It is possible I zoomed ahead too fast to make this a continuous tutorial, but
overall I just wanted to post an update</p>
<p>In pt. 1 I learned how to use the <code>aws-sam</code> CLI tool. This was a great insight
for me about automating deployments. I can now simply run <code>sam deploy</code> and it
will create new dynamodb tables, lambda functions, etc.</p>
<p>After writing pt 1. I converted the existing vue-js app that was in the aws
tutorial and converted it to react. Then I extended the app to allow</p>
<ul>
<li>Posting comments on photos</li>
<li>Uploading multiple files</li>
<li>Uploading videos etc.</li>
</ul>
<p>It will be hard to summarize all the changes since now the app has taken off a
little bit but it looks like this:</p>
<p>Repo structure</p>
<figure data-rehype-pretty-code-figure=""><pre style="background-color:#282c34;color:#abb2bf" tabindex="0" data-language="sh" data-theme="one-dark-pro"><code data-language="sh" data-theme="one-dark-pro" style="display: grid;"><span data-line=""><span style="color:#61AFEF">./frontend</span></span>
<span data-line=""><span style="color:#61AFEF">./frontend/src/App.tsx</span></span>
<span data-line=""><span style="color:#61AFEF">./lambdas/</span></span>
<span data-line=""><span style="color:#61AFEF">./lambdas/postFile</span></span>
<span data-line=""><span style="color:#61AFEF">./lambdas/getFiles</span></span>
<span data-line=""><span style="color:#61AFEF">./lambdas/postComment</span></span>
<span data-line=""><span style="color:#61AFEF">./lambdas/getComments</span></span></code></pre></figure>
<p>Here is a detailed code for uploading the file. We upload one file at a time,
but the client code post to the lambda endpoint individually for each file</p>
<p>This generates a pre-signed URL to allow the client-side JS (not the lambda
itself) to directly upload to S3, and also posts a row in the S3 to the filename
that will. It is very similar code in to
<a href="https://cmdcolin.github.io/2020-12-24.html">https://cmdcolin.github.io/2020-12-24.html</a></p>
<p>./lambdas/postFile/app.js</p>
<figure data-rehype-pretty-code-figure=""><pre style="background-color:#282c34;color:#abb2bf" tabindex="0" data-language="js" data-theme="one-dark-pro"><code data-language="js" data-theme="one-dark-pro" style="display: grid;"><span data-line=""><span style="color:#98C379">'use strict'</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#C678DD">const</span><span style="color:#E5C07B"> AWS</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> require</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">'aws-sdk'</span><span style="color:#ABB2BF">)</span></span>
<span data-line=""><span style="color:#C678DD">const</span><span style="color:#E5C07B"> multipart</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> require</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">'./multipart'</span><span style="color:#ABB2BF">)</span></span>
<span data-line=""><span style="color:#E5C07B">AWS</span><span style="color:#ABB2BF">.</span><span style="color:#E5C07B">config</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">update</span><span style="color:#ABB2BF">({ </span><span style="color:#E06C75">region</span><span style="color:#ABB2BF">: </span><span style="color:#E5C07B">process</span><span style="color:#ABB2BF">.</span><span style="color:#E5C07B">env</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">AWS_REGION</span><span style="color:#ABB2BF"> })</span></span>
<span data-line=""><span style="color:#C678DD">const</span><span style="color:#E5C07B"> s3</span><span style="color:#56B6C2"> =</span><span style="color:#C678DD"> new</span><span style="color:#E5C07B"> AWS</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">S3</span><span style="color:#ABB2BF">()</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#7F848E;font-style:italic">// Change this value to adjust the signed URL's expiration</span></span>
<span data-line=""><span style="color:#C678DD">const</span><span style="color:#E5C07B"> URL_EXPIRATION_SECONDS</span><span style="color:#56B6C2"> =</span><span style="color:#D19A66"> 300</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#7F848E;font-style:italic">// Main Lambda entry point</span></span>
<span data-line=""><span style="color:#E5C07B">exports</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">handler</span><span style="color:#56B6C2"> =</span><span style="color:#C678DD"> async</span><span style="color:#E06C75;font-style:italic"> event</span><span style="color:#C678DD"> =></span><span style="color:#ABB2BF"> {</span></span>
<span data-line=""><span style="color:#C678DD">  return</span><span style="color:#C678DD"> await</span><span style="color:#61AFEF"> getUploadURL</span><span style="color:#ABB2BF">(</span><span style="color:#E06C75">event</span><span style="color:#ABB2BF">)</span></span>
<span data-line=""><span style="color:#ABB2BF">}</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#C678DD">const</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">AWS_REGION</span><span style="color:#ABB2BF">: </span><span style="color:#E5C07B">region</span><span style="color:#ABB2BF"> } </span><span style="color:#56B6C2">=</span><span style="color:#E5C07B"> process</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">env</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#C678DD">const</span><span style="color:#E5C07B"> dynamodb</span><span style="color:#56B6C2"> =</span><span style="color:#C678DD"> new</span><span style="color:#E5C07B"> AWS</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">DynamoDB</span><span style="color:#ABB2BF">({ </span><span style="color:#E06C75">apiVersion</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">'2012-08-10'</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">region</span><span style="color:#ABB2BF"> })</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#C678DD">async</span><span style="color:#C678DD"> function</span><span style="color:#61AFEF"> uploadPic</span><span style="color:#ABB2BF">({</span></span>
<span data-line=""><span style="color:#E06C75;font-style:italic">  timestamp</span><span style="color:#ABB2BF">,</span></span>
<span data-line=""><span style="color:#E06C75;font-style:italic">  filename</span><span style="color:#ABB2BF">,</span></span>
<span data-line=""><span style="color:#E06C75;font-style:italic">  message</span><span style="color:#ABB2BF">,</span></span>
<span data-line=""><span style="color:#E06C75;font-style:italic">  user</span><span style="color:#ABB2BF">,</span></span>
<span data-line=""><span style="color:#E06C75;font-style:italic">  date</span><span style="color:#ABB2BF">,</span></span>
<span data-line=""><span style="color:#E06C75;font-style:italic">  contentType</span><span style="color:#ABB2BF">,</span></span>
<span data-line=""><span style="color:#ABB2BF">}) {</span></span>
<span data-line=""><span style="color:#C678DD">  const</span><span style="color:#E5C07B"> params</span><span style="color:#56B6C2"> =</span><span style="color:#ABB2BF"> {</span></span>
<span data-line=""><span style="color:#E06C75">    Item</span><span style="color:#ABB2BF">: {</span></span>
<span data-line=""><span style="color:#E06C75">      timestamp</span><span style="color:#ABB2BF">: {</span></span>
<span data-line=""><span style="color:#E06C75">        N</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">`</span><span style="color:#C678DD">${</span><span style="color:#E06C75">timestamp</span><span style="color:#C678DD">}</span><span style="color:#98C379">`</span><span style="color:#ABB2BF">,</span></span>
<span data-line=""><span style="color:#ABB2BF">      },</span></span>
<span data-line=""><span style="color:#E06C75">      filename</span><span style="color:#ABB2BF">: {</span></span>
<span data-line=""><span style="color:#E06C75">        S</span><span style="color:#ABB2BF">: </span><span style="color:#E06C75">filename</span><span style="color:#ABB2BF">,</span></span>
<span data-line=""><span style="color:#ABB2BF">      },</span></span>
<span data-line=""><span style="color:#E06C75">      message</span><span style="color:#ABB2BF">: {</span></span>
<span data-line=""><span style="color:#E06C75">        S</span><span style="color:#ABB2BF">: </span><span style="color:#E06C75">message</span><span style="color:#ABB2BF">,</span></span>
<span data-line=""><span style="color:#ABB2BF">      },</span></span>
<span data-line=""><span style="color:#E06C75">      user</span><span style="color:#ABB2BF">: {</span></span>
<span data-line=""><span style="color:#E06C75">        S</span><span style="color:#ABB2BF">: </span><span style="color:#E06C75">user</span><span style="color:#ABB2BF">,</span></span>
<span data-line=""><span style="color:#ABB2BF">      },</span></span>
<span data-line=""><span style="color:#E06C75">      date</span><span style="color:#ABB2BF">: {</span></span>
<span data-line=""><span style="color:#E06C75">        S</span><span style="color:#ABB2BF">: </span><span style="color:#E06C75">date</span><span style="color:#ABB2BF">,</span></span>
<span data-line=""><span style="color:#ABB2BF">      },</span></span>
<span data-line=""><span style="color:#E06C75">      contentType</span><span style="color:#ABB2BF">: {</span></span>
<span data-line=""><span style="color:#E06C75">        S</span><span style="color:#ABB2BF">: </span><span style="color:#E06C75">contentType</span><span style="color:#ABB2BF">,</span></span>
<span data-line=""><span style="color:#ABB2BF">      },</span></span>
<span data-line=""><span style="color:#ABB2BF">    },</span></span>
<span data-line=""><span style="color:#E06C75">    TableName</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">'files'</span><span style="color:#ABB2BF">,</span></span>
<span data-line=""><span style="color:#ABB2BF">  }</span></span>
<span data-line=""><span style="color:#C678DD">  return</span><span style="color:#E5C07B"> dynamodb</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">putItem</span><span style="color:#ABB2BF">(</span><span style="color:#E06C75">params</span><span style="color:#ABB2BF">).</span><span style="color:#61AFEF">promise</span><span style="color:#ABB2BF">()</span></span>
<span data-line=""><span style="color:#ABB2BF">}</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#C678DD">const</span><span style="color:#61AFEF"> getUploadURL</span><span style="color:#56B6C2"> =</span><span style="color:#C678DD"> async</span><span style="color:#C678DD"> function</span><span style="color:#ABB2BF"> (</span><span style="color:#E06C75;font-style:italic">event</span><span style="color:#ABB2BF">) {</span></span>
<span data-line=""><span style="color:#C678DD">  try</span><span style="color:#ABB2BF"> {</span></span>
<span data-line=""><span style="color:#C678DD">    const</span><span style="color:#E5C07B"> data</span><span style="color:#56B6C2"> =</span><span style="color:#E5C07B"> multipart</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">parse</span><span style="color:#ABB2BF">(</span><span style="color:#E06C75">event</span><span style="color:#ABB2BF">)</span></span>
<span data-line=""><span style="color:#C678DD">    const</span><span style="color:#ABB2BF"> { </span><span style="color:#E5C07B">filename</span><span style="color:#ABB2BF">, </span><span style="color:#E5C07B">contentType</span><span style="color:#ABB2BF">, </span><span style="color:#E5C07B">user</span><span style="color:#ABB2BF">, </span><span style="color:#E5C07B">message</span><span style="color:#ABB2BF">, </span><span style="color:#E5C07B">date</span><span style="color:#ABB2BF"> } </span><span style="color:#56B6C2">=</span><span style="color:#E06C75"> data</span></span>
<span data-line=""><span style="color:#C678DD">    const</span><span style="color:#E5C07B"> timestamp</span><span style="color:#56B6C2"> =</span><span style="color:#56B6C2"> +</span><span style="color:#E5C07B">Date</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">now</span><span style="color:#ABB2BF">()</span></span>
<span data-line=""><span style="color:#C678DD">    const</span><span style="color:#E5C07B"> Key</span><span style="color:#56B6C2"> =</span><span style="color:#98C379"> `</span><span style="color:#C678DD">${</span><span style="color:#E06C75">timestamp</span><span style="color:#C678DD">}</span><span style="color:#98C379">-</span><span style="color:#C678DD">${</span><span style="color:#E06C75">filename</span><span style="color:#C678DD">}</span><span style="color:#98C379">`</span><span style="color:#7F848E;font-style:italic"> // Get signed URL from S3</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#C678DD">    const</span><span style="color:#E5C07B"> s3Params</span><span style="color:#56B6C2"> =</span><span style="color:#ABB2BF"> {</span></span>
<span data-line=""><span style="color:#E06C75">      Bucket</span><span style="color:#ABB2BF">: </span><span style="color:#E5C07B">process</span><span style="color:#ABB2BF">.</span><span style="color:#E5C07B">env</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">UploadBucket</span><span style="color:#ABB2BF">,</span></span>
<span data-line=""><span style="color:#E06C75">      Key</span><span style="color:#ABB2BF">,</span></span>
<span data-line=""><span style="color:#E06C75">      Expires</span><span style="color:#ABB2BF">: </span><span style="color:#E5C07B">URL_EXPIRATION_SECONDS</span><span style="color:#ABB2BF">,</span></span>
<span data-line=""><span style="color:#E06C75">      ContentType</span><span style="color:#ABB2BF">: </span><span style="color:#E06C75">contentType</span><span style="color:#ABB2BF">,</span></span>
<span data-line=""><span style="color:#7F848E;font-style:italic">      // This ACL makes the uploaded object publicly readable. You must also</span></span>
<span data-line=""><span style="color:#7F848E;font-style:italic">      // uncomment the extra permission for the Lambda function in the SAM</span></span>
<span data-line=""><span style="color:#7F848E;font-style:italic">      // template.</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#E06C75">      ACL</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">'public-read'</span><span style="color:#ABB2BF">,</span></span>
<span data-line=""><span style="color:#ABB2BF">    }</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#C678DD">    const</span><span style="color:#E5C07B"> uploadURL</span><span style="color:#56B6C2"> =</span><span style="color:#C678DD"> await</span><span style="color:#E5C07B"> s3</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">getSignedUrlPromise</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">'putObject'</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">s3Params</span><span style="color:#ABB2BF">)</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#C678DD">    await</span><span style="color:#61AFEF"> uploadPic</span><span style="color:#ABB2BF">({</span></span>
<span data-line=""><span style="color:#E06C75">      timestamp</span><span style="color:#ABB2BF">,</span></span>
<span data-line=""><span style="color:#E06C75">      filename</span><span style="color:#ABB2BF">: </span><span style="color:#E06C75">Key</span><span style="color:#ABB2BF">,</span></span>
<span data-line=""><span style="color:#E06C75">      message</span><span style="color:#ABB2BF">,</span></span>
<span data-line=""><span style="color:#E06C75">      user</span><span style="color:#ABB2BF">,</span></span>
<span data-line=""><span style="color:#E06C75">      date</span><span style="color:#ABB2BF">,</span></span>
<span data-line=""><span style="color:#E06C75">      contentType</span><span style="color:#ABB2BF">,</span></span>
<span data-line=""><span style="color:#ABB2BF">    })</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#C678DD">    return</span><span style="color:#E5C07B"> JSON</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">stringify</span><span style="color:#ABB2BF">({</span></span>
<span data-line=""><span style="color:#E06C75">      uploadURL</span><span style="color:#ABB2BF">,</span></span>
<span data-line=""><span style="color:#E06C75">      Key</span><span style="color:#ABB2BF">,</span></span>
<span data-line=""><span style="color:#ABB2BF">    })</span></span>
<span data-line=""><span style="color:#ABB2BF">  } </span><span style="color:#C678DD">catch</span><span style="color:#ABB2BF"> (</span><span style="color:#E06C75">e</span><span style="color:#ABB2BF">) {</span></span>
<span data-line=""><span style="color:#C678DD">    const</span><span style="color:#E5C07B"> response</span><span style="color:#56B6C2"> =</span><span style="color:#ABB2BF"> {</span></span>
<span data-line=""><span style="color:#E06C75">      statusCode</span><span style="color:#ABB2BF">: </span><span style="color:#D19A66">500</span><span style="color:#ABB2BF">,</span></span>
<span data-line=""><span style="color:#E06C75">      body</span><span style="color:#ABB2BF">: </span><span style="color:#E5C07B">JSON</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">stringify</span><span style="color:#ABB2BF">({ </span><span style="color:#E06C75">message</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">`</span><span style="color:#C678DD">${</span><span style="color:#E06C75">e</span><span style="color:#C678DD">}</span><span style="color:#98C379">`</span><span style="color:#ABB2BF"> }),</span></span>
<span data-line=""><span style="color:#ABB2BF">    }</span></span>
<span data-line=""><span style="color:#C678DD">    return</span><span style="color:#E06C75"> response</span></span>
<span data-line=""><span style="color:#ABB2BF">  }</span></span>
<span data-line=""><span style="color:#ABB2BF">}</span></span></code></pre></figure>
<p>./lambdas/getFiles/app.js</p>
<figure data-rehype-pretty-code-figure=""><pre style="background-color:#282c34;color:#abb2bf" tabindex="0" data-language="js" data-theme="one-dark-pro"><code data-language="js" data-theme="one-dark-pro" style="display: grid;"><span data-line=""><span style="color:#7F848E;font-style:italic">// eslint-disable-next-line import/no-unresolved</span></span>
<span data-line=""><span style="color:#C678DD">const</span><span style="color:#E5C07B"> AWS</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> require</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">'aws-sdk'</span><span style="color:#ABB2BF">)</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#C678DD">const</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">AWS_REGION</span><span style="color:#ABB2BF">: </span><span style="color:#E5C07B">region</span><span style="color:#ABB2BF"> } </span><span style="color:#56B6C2">=</span><span style="color:#E5C07B"> process</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">env</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#C678DD">const</span><span style="color:#E5C07B"> docClient</span><span style="color:#56B6C2"> =</span><span style="color:#C678DD"> new</span><span style="color:#E5C07B"> AWS</span><span style="color:#ABB2BF">.</span><span style="color:#E5C07B">DynamoDB</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">DocumentClient</span><span style="color:#ABB2BF">()</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#C678DD">const</span><span style="color:#61AFEF"> getItems</span><span style="color:#56B6C2"> =</span><span style="color:#C678DD"> function</span><span style="color:#ABB2BF"> () {</span></span>
<span data-line=""><span style="color:#C678DD">  const</span><span style="color:#E5C07B"> params</span><span style="color:#56B6C2"> =</span><span style="color:#ABB2BF"> {</span></span>
<span data-line=""><span style="color:#E06C75">    TableName</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">'files'</span><span style="color:#ABB2BF">,</span></span>
<span data-line=""><span style="color:#ABB2BF">  }</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#C678DD">  return</span><span style="color:#E5C07B"> docClient</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">scan</span><span style="color:#ABB2BF">(</span><span style="color:#E06C75">params</span><span style="color:#ABB2BF">).</span><span style="color:#61AFEF">promise</span><span style="color:#ABB2BF">()</span></span>
<span data-line=""><span style="color:#ABB2BF">}</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#E5C07B">exports</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">handler</span><span style="color:#56B6C2"> =</span><span style="color:#C678DD"> async</span><span style="color:#E06C75;font-style:italic"> event</span><span style="color:#C678DD"> =></span><span style="color:#ABB2BF"> {</span></span>
<span data-line=""><span style="color:#C678DD">  try</span><span style="color:#ABB2BF"> {</span></span>
<span data-line=""><span style="color:#C678DD">    const</span><span style="color:#E5C07B"> result</span><span style="color:#56B6C2"> =</span><span style="color:#C678DD"> await</span><span style="color:#61AFEF"> getItems</span><span style="color:#ABB2BF">()</span></span>
<span data-line=""><span style="color:#C678DD">    return</span><span style="color:#ABB2BF"> {</span></span>
<span data-line=""><span style="color:#E06C75">      statusCode</span><span style="color:#ABB2BF">: </span><span style="color:#D19A66">200</span><span style="color:#ABB2BF">,</span></span>
<span data-line=""><span style="color:#E06C75">      body</span><span style="color:#ABB2BF">: </span><span style="color:#E5C07B">JSON</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">stringify</span><span style="color:#ABB2BF">(</span><span style="color:#E06C75">result</span><span style="color:#ABB2BF">),</span></span>
<span data-line=""><span style="color:#ABB2BF">    }</span></span>
<span data-line=""><span style="color:#ABB2BF">  } </span><span style="color:#C678DD">catch</span><span style="color:#ABB2BF"> (</span><span style="color:#E06C75">e</span><span style="color:#ABB2BF">) {</span></span>
<span data-line=""><span style="color:#C678DD">    return</span><span style="color:#ABB2BF"> {</span></span>
<span data-line=""><span style="color:#E06C75">      statusCode</span><span style="color:#ABB2BF">: </span><span style="color:#D19A66">400</span><span style="color:#ABB2BF">,</span></span>
<span data-line=""><span style="color:#E06C75">      body</span><span style="color:#ABB2BF">: </span><span style="color:#E5C07B">JSON</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">stringify</span><span style="color:#ABB2BF">({ </span><span style="color:#E06C75">message</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">`</span><span style="color:#C678DD">${</span><span style="color:#E06C75">e</span><span style="color:#C678DD">}</span><span style="color:#98C379">`</span><span style="color:#ABB2BF"> }),</span></span>
<span data-line=""><span style="color:#ABB2BF">    }</span></span>
<span data-line=""><span style="color:#ABB2BF">  }</span></span>
<span data-line=""><span style="color:#ABB2BF">}</span></span></code></pre></figure>
<p>./frontend/src/App.tsx (excerpt)</p>
<figure data-rehype-pretty-code-figure=""><pre style="background-color:#282c34;color:#abb2bf" tabindex="0" data-language="tsx" data-theme="one-dark-pro"><code data-language="tsx" data-theme="one-dark-pro" style="display: grid;"><span data-line=""><span style="color:#C678DD">async</span><span style="color:#C678DD"> function</span><span style="color:#61AFEF"> myfetch</span><span style="color:#ABB2BF">(</span><span style="color:#E06C75;font-style:italic">params</span><span style="color:#ABB2BF">: </span><span style="color:#E5C07B">string</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75;font-style:italic">opts</span><span style="color:#C678DD">?</span><span style="color:#ABB2BF">: </span><span style="color:#E5C07B">any</span><span style="color:#ABB2BF">) {</span></span>
<span data-line=""><span style="color:#C678DD">  const</span><span style="color:#E5C07B"> response</span><span style="color:#56B6C2"> =</span><span style="color:#C678DD"> await</span><span style="color:#61AFEF"> fetch</span><span style="color:#ABB2BF">(</span><span style="color:#E06C75">params</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">opts</span><span style="color:#ABB2BF">)</span></span>
<span data-line=""><span style="color:#C678DD">  if</span><span style="color:#ABB2BF"> (</span><span style="color:#56B6C2">!</span><span style="color:#E5C07B">response</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">ok</span><span style="color:#ABB2BF">) {</span></span>
<span data-line=""><span style="color:#C678DD">    throw</span><span style="color:#C678DD"> new</span><span style="color:#61AFEF"> Error</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">`HTTP </span><span style="color:#C678DD">${</span><span style="color:#E5C07B">response</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">status</span><span style="color:#C678DD">}</span><span style="color:#C678DD"> ${</span><span style="color:#E5C07B">response</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">statusText</span><span style="color:#C678DD">}</span><span style="color:#98C379">`</span><span style="color:#ABB2BF">)</span></span>
<span data-line=""><span style="color:#ABB2BF">  }</span></span>
<span data-line=""><span style="color:#C678DD">  return</span><span style="color:#E5C07B"> response</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">json</span><span style="color:#ABB2BF">()</span></span>
<span data-line=""><span style="color:#ABB2BF">}</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#C678DD">function</span><span style="color:#61AFEF"> UploadDialog</span><span style="color:#ABB2BF">({</span></span>
<span data-line=""><span style="color:#E06C75;font-style:italic">  open</span><span style="color:#ABB2BF">,</span></span>
<span data-line=""><span style="color:#E06C75;font-style:italic">  onClose</span><span style="color:#ABB2BF">,</span></span>
<span data-line=""><span style="color:#ABB2BF">}: {</span></span>
<span data-line=""><span style="color:#E06C75">  open</span><span style="color:#ABB2BF">: </span><span style="color:#E5C07B">boolean</span></span>
<span data-line=""><span style="color:#61AFEF">  onClose</span><span style="color:#ABB2BF">: () </span><span style="color:#C678DD">=></span><span style="color:#E5C07B"> void</span></span>
<span data-line=""><span style="color:#ABB2BF">}) {</span></span>
<span data-line=""><span style="color:#C678DD">  const</span><span style="color:#ABB2BF"> [</span><span style="color:#E5C07B">images</span><span style="color:#ABB2BF">, </span><span style="color:#E5C07B">setImages</span><span style="color:#ABB2BF">] </span><span style="color:#56B6C2">=</span><span style="color:#61AFEF"> useState</span><span style="color:#ABB2BF">&#x3C;</span><span style="color:#E5C07B">FileList</span><span style="color:#ABB2BF">>()</span></span>
<span data-line=""><span style="color:#C678DD">  const</span><span style="color:#ABB2BF"> [</span><span style="color:#E5C07B">error</span><span style="color:#ABB2BF">, </span><span style="color:#E5C07B">setError</span><span style="color:#ABB2BF">] </span><span style="color:#56B6C2">=</span><span style="color:#61AFEF"> useState</span><span style="color:#ABB2BF">&#x3C;</span><span style="color:#E5C07B">Error</span><span style="color:#ABB2BF">>()</span></span>
<span data-line=""><span style="color:#C678DD">  const</span><span style="color:#ABB2BF"> [</span><span style="color:#E5C07B">loading</span><span style="color:#ABB2BF">, </span><span style="color:#E5C07B">setLoading</span><span style="color:#ABB2BF">] </span><span style="color:#56B6C2">=</span><span style="color:#61AFEF"> useState</span><span style="color:#ABB2BF">(</span><span style="color:#D19A66">false</span><span style="color:#ABB2BF">)</span></span>
<span data-line=""><span style="color:#C678DD">  const</span><span style="color:#ABB2BF"> [</span><span style="color:#E5C07B">total</span><span style="color:#ABB2BF">, </span><span style="color:#E5C07B">setTotal</span><span style="color:#ABB2BF">] </span><span style="color:#56B6C2">=</span><span style="color:#61AFEF"> useState</span><span style="color:#ABB2BF">(</span><span style="color:#D19A66">0</span><span style="color:#ABB2BF">)</span></span>
<span data-line=""><span style="color:#C678DD">  const</span><span style="color:#ABB2BF"> [</span><span style="color:#E5C07B">completed</span><span style="color:#ABB2BF">, </span><span style="color:#E5C07B">setCompleted</span><span style="color:#ABB2BF">] </span><span style="color:#56B6C2">=</span><span style="color:#61AFEF"> useState</span><span style="color:#ABB2BF">(</span><span style="color:#D19A66">0</span><span style="color:#ABB2BF">)</span></span>
<span data-line=""><span style="color:#C678DD">  const</span><span style="color:#ABB2BF"> [</span><span style="color:#E5C07B">user</span><span style="color:#ABB2BF">, </span><span style="color:#E5C07B">setUser</span><span style="color:#ABB2BF">] </span><span style="color:#56B6C2">=</span><span style="color:#61AFEF"> useState</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">''</span><span style="color:#ABB2BF">)</span></span>
<span data-line=""><span style="color:#C678DD">  const</span><span style="color:#ABB2BF"> [</span><span style="color:#E5C07B">message</span><span style="color:#ABB2BF">, </span><span style="color:#E5C07B">setMessage</span><span style="color:#ABB2BF">] </span><span style="color:#56B6C2">=</span><span style="color:#61AFEF"> useState</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">''</span><span style="color:#ABB2BF">)</span></span>
<span data-line=""><span style="color:#C678DD">  const</span><span style="color:#E5C07B"> classes</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> useStyles</span><span style="color:#ABB2BF">()</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#C678DD">  const</span><span style="color:#61AFEF"> handleClose</span><span style="color:#56B6C2"> =</span><span style="color:#ABB2BF"> () </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> {</span></span>
<span data-line=""><span style="color:#61AFEF">    setError</span><span style="color:#ABB2BF">(</span><span style="color:#D19A66">undefined</span><span style="color:#ABB2BF">)</span></span>
<span data-line=""><span style="color:#61AFEF">    setLoading</span><span style="color:#ABB2BF">(</span><span style="color:#D19A66">false</span><span style="color:#ABB2BF">)</span></span>
<span data-line=""><span style="color:#61AFEF">    setImages</span><span style="color:#ABB2BF">(</span><span style="color:#D19A66">undefined</span><span style="color:#ABB2BF">)</span></span>
<span data-line=""><span style="color:#61AFEF">    setCompleted</span><span style="color:#ABB2BF">(</span><span style="color:#D19A66">0</span><span style="color:#ABB2BF">)</span></span>
<span data-line=""><span style="color:#61AFEF">    setTotal</span><span style="color:#ABB2BF">(</span><span style="color:#D19A66">0</span><span style="color:#ABB2BF">)</span></span>
<span data-line=""><span style="color:#61AFEF">    setMessage</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">''</span><span style="color:#ABB2BF">)</span></span>
<span data-line=""><span style="color:#61AFEF">    onClose</span><span style="color:#ABB2BF">()</span></span>
<span data-line=""><span style="color:#ABB2BF">  }</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> (</span></span>
<span data-line=""><span style="color:#ABB2BF">    &#x3C;</span><span style="color:#E5C07B">Dialog</span><span style="color:#D19A66;font-style:italic"> onClose</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#E06C75">handleClose</span><span style="color:#C678DD">}</span><span style="color:#D19A66;font-style:italic"> open</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#E06C75">open</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF">></span></span>
<span data-line=""><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E5C07B">DialogTitle</span><span style="color:#ABB2BF">>upload a file (supports picture or video)&#x3C;/</span><span style="color:#E5C07B">DialogTitle</span><span style="color:#ABB2BF">></span></span>
<span data-line=""><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E5C07B">DialogContent</span><span style="color:#ABB2BF">></span></span>
<span data-line=""><span style="color:#ABB2BF">        &#x3C;</span><span style="color:#E06C75">label</span><span style="color:#D19A66;font-style:italic"> htmlFor</span><span style="color:#56B6C2">=</span><span style="color:#98C379">"user"</span><span style="color:#ABB2BF">>name (optional) &#x3C;/</span><span style="color:#E06C75">label</span><span style="color:#ABB2BF">></span></span>
<span data-line=""><span style="color:#ABB2BF">        &#x3C;</span><span style="color:#E06C75">input</span></span>
<span data-line=""><span style="color:#D19A66;font-style:italic">          type</span><span style="color:#56B6C2">=</span><span style="color:#98C379">"text"</span></span>
<span data-line=""><span style="color:#D19A66;font-style:italic">          value</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#E06C75">user</span><span style="color:#C678DD">}</span></span>
<span data-line=""><span style="color:#D19A66;font-style:italic">          onChange</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#E06C75;font-style:italic">event</span><span style="color:#C678DD"> =></span><span style="color:#61AFEF"> setUser</span><span style="color:#ABB2BF">(</span><span style="color:#E5C07B">event</span><span style="color:#ABB2BF">.</span><span style="color:#E5C07B">target</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">value</span><span style="color:#ABB2BF">)</span><span style="color:#C678DD">}</span></span>
<span data-line=""><span style="color:#D19A66;font-style:italic">          id</span><span style="color:#56B6C2">=</span><span style="color:#98C379">"user"</span></span>
<span data-line=""><span style="color:#ABB2BF">        /></span></span>
<span data-line=""><span style="color:#ABB2BF">        &#x3C;</span><span style="color:#E06C75">br</span><span style="color:#ABB2BF"> /> &#x3C;</span><span style="color:#E06C75">label</span><span style="color:#D19A66;font-style:italic"> htmlFor</span><span style="color:#56B6C2">=</span><span style="color:#98C379">"user"</span><span style="color:#ABB2BF">>message (optional) &#x3C;/</span><span style="color:#E06C75">label</span><span style="color:#ABB2BF">></span></span>
<span data-line=""><span style="color:#ABB2BF">        &#x3C;</span><span style="color:#E06C75">input</span></span>
<span data-line=""><span style="color:#D19A66;font-style:italic">          type</span><span style="color:#56B6C2">=</span><span style="color:#98C379">"text"</span></span>
<span data-line=""><span style="color:#D19A66;font-style:italic">          value</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#E06C75">message</span><span style="color:#C678DD">}</span></span>
<span data-line=""><span style="color:#D19A66;font-style:italic">          onChange</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#E06C75;font-style:italic">event</span><span style="color:#C678DD"> =></span><span style="color:#61AFEF"> setMessage</span><span style="color:#ABB2BF">(</span><span style="color:#E5C07B">event</span><span style="color:#ABB2BF">.</span><span style="color:#E5C07B">target</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">value</span><span style="color:#ABB2BF">)</span><span style="color:#C678DD">}</span></span>
<span data-line=""><span style="color:#D19A66;font-style:italic">          id</span><span style="color:#56B6C2">=</span><span style="color:#98C379">"message"</span></span>
<span data-line=""><span style="color:#ABB2BF">        /></span></span>
<span data-line=""><span style="color:#ABB2BF">        &#x3C;</span><span style="color:#E06C75">br</span><span style="color:#ABB2BF"> /></span></span>
<span data-line=""><span style="color:#ABB2BF">        &#x3C;</span><span style="color:#E06C75">input</span></span>
<span data-line=""><span style="color:#D19A66;font-style:italic">          multiple</span></span>
<span data-line=""><span style="color:#D19A66;font-style:italic">          type</span><span style="color:#56B6C2">=</span><span style="color:#98C379">"file"</span></span>
<span data-line=""><span style="color:#D19A66;font-style:italic">          onChange</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#E06C75;font-style:italic">e</span><span style="color:#C678DD"> =></span><span style="color:#ABB2BF"> {</span></span>
<span data-line=""><span style="color:#C678DD">            let</span><span style="color:#E06C75"> files</span><span style="color:#56B6C2"> =</span><span style="color:#E5C07B"> e</span><span style="color:#ABB2BF">.</span><span style="color:#E5C07B">target</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">files</span></span>
<span data-line=""><span style="color:#C678DD">            if</span><span style="color:#ABB2BF"> (</span><span style="color:#E06C75">files</span><span style="color:#56B6C2"> &#x26;&#x26;</span><span style="color:#E5C07B"> files</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">length</span><span style="color:#ABB2BF">) {</span></span>
<span data-line=""><span style="color:#61AFEF">              setImages</span><span style="color:#ABB2BF">(</span><span style="color:#E06C75">files</span><span style="color:#ABB2BF">)</span></span>
<span data-line=""><span style="color:#ABB2BF">            }</span></span>
<span data-line=""><span style="color:#ABB2BF">          }</span><span style="color:#C678DD">}</span></span>
<span data-line=""><span style="color:#ABB2BF">        /> </span><span style="color:#C678DD">{</span><span style="color:#E06C75">error</span><span style="color:#C678DD"> ?</span><span style="color:#ABB2BF"> (</span></span>
<span data-line=""><span style="color:#ABB2BF">          &#x3C;</span><span style="color:#E06C75">div</span><span style="color:#D19A66;font-style:italic"> className</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#E5C07B">classes</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">error</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF">></span><span style="color:#C678DD">{</span><span style="color:#98C379">`</span><span style="color:#C678DD">${</span><span style="color:#E06C75">error</span><span style="color:#C678DD">}</span><span style="color:#98C379">`</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF">&#x3C;/</span><span style="color:#E06C75">div</span><span style="color:#ABB2BF">></span></span>
<span data-line=""><span style="color:#ABB2BF">        ) </span><span style="color:#C678DD">:</span><span style="color:#E06C75"> loading</span><span style="color:#C678DD"> ?</span><span style="color:#ABB2BF"> (</span></span>
<span data-line=""><span style="color:#98C379">          `Uploading...</span><span style="color:#C678DD">${</span><span style="color:#E06C75">completed</span><span style="color:#C678DD">}</span><span style="color:#98C379">/</span><span style="color:#C678DD">${</span><span style="color:#E06C75">total</span><span style="color:#C678DD">}</span><span style="color:#98C379">`</span></span>
<span data-line=""><span style="color:#ABB2BF">        ) </span><span style="color:#C678DD">:</span><span style="color:#E06C75"> completed</span><span style="color:#C678DD"> ?</span><span style="color:#ABB2BF"> (</span></span>
<span data-line=""><span style="color:#ABB2BF">          &#x3C;</span><span style="color:#E06C75">h2</span><span style="color:#ABB2BF">>Uploaded &#x3C;/</span><span style="color:#E06C75">h2</span><span style="color:#ABB2BF">></span></span>
<span data-line=""><span style="color:#ABB2BF">        ) </span><span style="color:#C678DD">:</span><span style="color:#D19A66"> null</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF"> &#x3C;</span><span style="color:#E5C07B">DialogActions</span><span style="color:#ABB2BF">></span></span>
<span data-line=""><span style="color:#ABB2BF">          &#x3C;</span><span style="color:#E5C07B">Button</span></span>
<span data-line=""><span style="color:#D19A66;font-style:italic">            style</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#ABB2BF">{ </span><span style="color:#E06C75">textTransform</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">'none'</span><span style="color:#ABB2BF"> }</span><span style="color:#C678DD">}</span></span>
<span data-line=""><span style="color:#D19A66;font-style:italic">            onClick</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{async</span><span style="color:#ABB2BF"> () </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> {</span></span>
<span data-line=""><span style="color:#C678DD">              try</span><span style="color:#ABB2BF"> {</span></span>
<span data-line=""><span style="color:#C678DD">                if</span><span style="color:#ABB2BF"> (</span><span style="color:#E06C75">images</span><span style="color:#ABB2BF">) {</span></span>
<span data-line=""><span style="color:#61AFEF">                  setLoading</span><span style="color:#ABB2BF">(</span><span style="color:#D19A66">true</span><span style="color:#ABB2BF">)</span></span>
<span data-line=""><span style="color:#61AFEF">                  setError</span><span style="color:#ABB2BF">(</span><span style="color:#D19A66">undefined</span><span style="color:#ABB2BF">)</span></span>
<span data-line=""><span style="color:#61AFEF">                  setCompleted</span><span style="color:#ABB2BF">(</span><span style="color:#D19A66">0</span><span style="color:#ABB2BF">)</span></span>
<span data-line=""><span style="color:#61AFEF">                  setTotal</span><span style="color:#ABB2BF">(</span><span style="color:#E5C07B">images</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">length</span><span style="color:#ABB2BF">)</span></span>
<span data-line=""><span style="color:#C678DD">                  await</span><span style="color:#E5C07B"> Promise</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">all</span><span style="color:#ABB2BF">(</span></span>
<span data-line=""><span style="color:#E5C07B">                    Array</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">from</span><span style="color:#ABB2BF">(</span><span style="color:#E06C75">images</span><span style="color:#ABB2BF">).</span><span style="color:#61AFEF">map</span><span style="color:#ABB2BF">(</span><span style="color:#C678DD">async</span><span style="color:#E06C75;font-style:italic"> image</span><span style="color:#C678DD"> =></span><span style="color:#ABB2BF"> {</span></span>
<span data-line=""><span style="color:#C678DD">                      const</span><span style="color:#E5C07B"> data</span><span style="color:#56B6C2"> =</span><span style="color:#C678DD"> new</span><span style="color:#61AFEF"> FormData</span><span style="color:#ABB2BF">()</span></span>
<span data-line=""><span style="color:#E5C07B">                      data</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">append</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">'message'</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">message</span><span style="color:#ABB2BF">)</span></span>
<span data-line=""><span style="color:#E5C07B">                      data</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">append</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">'user'</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">user</span><span style="color:#ABB2BF">)</span></span>
<span data-line=""><span style="color:#E5C07B">                      data</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">append</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">'date'</span><span style="color:#ABB2BF">, </span><span style="color:#C678DD">new</span><span style="color:#61AFEF"> Date</span><span style="color:#ABB2BF">().</span><span style="color:#61AFEF">toLocaleString</span><span style="color:#ABB2BF">())</span></span>
<span data-line=""><span style="color:#E5C07B">                      data</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">append</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">'filename'</span><span style="color:#ABB2BF">, </span><span style="color:#E5C07B">image</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">name</span><span style="color:#ABB2BF">)</span></span>
<span data-line=""><span style="color:#E5C07B">                      data</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">append</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">'contentType'</span><span style="color:#ABB2BF">, </span><span style="color:#E5C07B">image</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">type</span><span style="color:#ABB2BF">)</span></span>
<span data-line=""><span style="color:#C678DD">                      const</span><span style="color:#E5C07B"> res</span><span style="color:#56B6C2"> =</span><span style="color:#C678DD"> await</span><span style="color:#61AFEF"> myfetch</span><span style="color:#ABB2BF">(</span><span style="color:#E5C07B">API_ENDPOINT</span><span style="color:#56B6C2"> +</span><span style="color:#98C379"> '/postFile'</span><span style="color:#ABB2BF">, {</span></span>
<span data-line=""><span style="color:#E06C75">                        method</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">'POST'</span><span style="color:#ABB2BF">,</span></span>
<span data-line=""><span style="color:#E06C75">                        body</span><span style="color:#ABB2BF">: </span><span style="color:#E06C75">data</span><span style="color:#ABB2BF">,</span></span>
<span data-line=""><span style="color:#ABB2BF">                      })</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#C678DD">                      await</span><span style="color:#61AFEF"> myfetch</span><span style="color:#ABB2BF">(</span><span style="color:#E5C07B">res</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">uploadURL</span><span style="color:#ABB2BF">, {</span></span>
<span data-line=""><span style="color:#E06C75">                        method</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">'PUT'</span><span style="color:#ABB2BF">,</span></span>
<span data-line=""><span style="color:#E06C75">                        body</span><span style="color:#ABB2BF">: </span><span style="color:#E06C75">image</span><span style="color:#ABB2BF">,</span></span>
<span data-line=""><span style="color:#ABB2BF">                      })</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#61AFEF">                      setCompleted</span><span style="color:#ABB2BF">(</span><span style="color:#E06C75;font-style:italic">completed</span><span style="color:#C678DD"> =></span><span style="color:#E06C75"> completed</span><span style="color:#56B6C2"> +</span><span style="color:#D19A66"> 1</span><span style="color:#ABB2BF">)</span></span>
<span data-line=""><span style="color:#ABB2BF">                    }),</span></span>
<span data-line=""><span style="color:#ABB2BF">                  )</span></span>
<span data-line=""><span style="color:#61AFEF">                  setTimeout</span><span style="color:#ABB2BF">(() </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> {</span></span>
<span data-line=""><span style="color:#61AFEF">                    handleClose</span><span style="color:#ABB2BF">()</span></span>
<span data-line=""><span style="color:#ABB2BF">                  }, </span><span style="color:#D19A66">500</span><span style="color:#ABB2BF">)</span></span>
<span data-line=""><span style="color:#ABB2BF">                }</span></span>
<span data-line=""><span style="color:#ABB2BF">              } </span><span style="color:#C678DD">catch</span><span style="color:#ABB2BF"> (</span><span style="color:#E06C75">e</span><span style="color:#ABB2BF">) {</span></span>
<span data-line=""><span style="color:#61AFEF">                setError</span><span style="color:#ABB2BF">(</span><span style="color:#E06C75">e</span><span style="color:#ABB2BF">)</span></span>
<span data-line=""><span style="color:#ABB2BF">              }</span></span>
<span data-line=""><span style="color:#ABB2BF">            }</span><span style="color:#C678DD">}</span></span>
<span data-line=""><span style="color:#D19A66;font-style:italic">            color</span><span style="color:#56B6C2">=</span><span style="color:#98C379">"primary"</span></span>
<span data-line=""><span style="color:#ABB2BF">          ></span></span>
<span data-line=""><span style="color:#ABB2BF">            upload</span></span>
<span data-line=""><span style="color:#ABB2BF">          &#x3C;/</span><span style="color:#E5C07B">Button</span><span style="color:#ABB2BF">></span></span>
<span data-line=""><span style="color:#ABB2BF">          &#x3C;</span><span style="color:#E5C07B">Button</span></span>
<span data-line=""><span style="color:#D19A66;font-style:italic">            onClick</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#E06C75">handleClose</span><span style="color:#C678DD">}</span></span>
<span data-line=""><span style="color:#D19A66;font-style:italic">            color</span><span style="color:#56B6C2">=</span><span style="color:#98C379">"primary"</span></span>
<span data-line=""><span style="color:#D19A66;font-style:italic">            style</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#ABB2BF">{ </span><span style="color:#E06C75">textTransform</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">'none'</span><span style="color:#ABB2BF"> }</span><span style="color:#C678DD">}</span></span>
<span data-line=""><span style="color:#ABB2BF">          ></span></span>
<span data-line=""><span style="color:#ABB2BF">            cancel</span></span>
<span data-line=""><span style="color:#ABB2BF">          &#x3C;/</span><span style="color:#E5C07B">Button</span><span style="color:#ABB2BF">></span></span>
<span data-line=""><span style="color:#ABB2BF">        &#x3C;/</span><span style="color:#E5C07B">DialogActions</span><span style="color:#ABB2BF">></span></span>
<span data-line=""><span style="color:#ABB2BF">      &#x3C;/</span><span style="color:#E5C07B">DialogContent</span><span style="color:#ABB2BF">></span></span>
<span data-line=""><span style="color:#ABB2BF">    &#x3C;/</span><span style="color:#E5C07B">Dialog</span><span style="color:#ABB2BF">></span></span>
<span data-line=""><span style="color:#ABB2BF">  )</span></span>
<span data-line=""><span style="color:#ABB2BF">}</span></span></code></pre></figure>
<p>template.yaml for AWS</p>
<figure data-rehype-pretty-code-figure=""><pre style="background-color:#282c34;color:#abb2bf" tabindex="0" data-language="yaml" data-theme="one-dark-pro"><code data-language="yaml" data-theme="one-dark-pro" style="display: grid;"><span data-line=""><span style="color:#E06C75">AWSTemplateFormatVersion</span><span style="color:#ABB2BF">: </span><span style="color:#D19A66">2010-09-09</span></span>
<span data-line=""><span style="color:#E06C75">Transform</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">AWS::Serverless-2016-10-31</span></span>
<span data-line=""><span style="color:#E06C75">Description</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">S3 Uploader</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#E06C75">Resources</span><span style="color:#ABB2BF">:</span></span>
<span data-line=""><span style="color:#E06C75">  filesDynamoDBTable</span><span style="color:#ABB2BF">:</span></span>
<span data-line=""><span style="color:#E06C75">    Type</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">AWS::DynamoDB::Table</span></span>
<span data-line=""><span style="color:#E06C75">    Properties</span><span style="color:#ABB2BF">:</span></span>
<span data-line=""><span style="color:#E06C75">      AttributeDefinitions</span><span style="color:#ABB2BF">:</span></span>
<span data-line=""><span style="color:#ABB2BF">        - </span><span style="color:#E06C75">AttributeName</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">'timestamp'</span></span>
<span data-line=""><span style="color:#E06C75">          AttributeType</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">'N'</span></span>
<span data-line=""><span style="color:#E06C75">      KeySchema</span><span style="color:#ABB2BF">:</span></span>
<span data-line=""><span style="color:#ABB2BF">        - </span><span style="color:#E06C75">AttributeName</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">'timestamp'</span></span>
<span data-line=""><span style="color:#E06C75">          KeyType</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">'HASH'</span></span>
<span data-line=""><span style="color:#E06C75">      ProvisionedThroughput</span><span style="color:#ABB2BF">:</span></span>
<span data-line=""><span style="color:#E06C75">        ReadCapacityUnits</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">'5'</span></span>
<span data-line=""><span style="color:#E06C75">        WriteCapacityUnits</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">'5'</span></span>
<span data-line=""><span style="color:#E06C75">      TableName</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">'files'</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#7F848E;font-style:italic">  # HTTP API</span></span>
<span data-line=""><span style="color:#E06C75">  MyApi</span><span style="color:#ABB2BF">:</span></span>
<span data-line=""><span style="color:#E06C75">    Type</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">AWS::Serverless::HttpApi</span></span>
<span data-line=""><span style="color:#E06C75">    Properties</span><span style="color:#ABB2BF">:</span></span>
<span data-line=""><span style="color:#7F848E;font-style:italic">      # CORS configuration - this is open for development only and should be restricted in prod.</span></span>
<span data-line=""><span style="color:#7F848E;font-style:italic">      # See https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-httpapi-httpapicorsconfiguration.html</span></span>
<span data-line=""><span style="color:#E06C75">      CorsConfiguration</span><span style="color:#ABB2BF">:</span></span>
<span data-line=""><span style="color:#E06C75">        AllowMethods</span><span style="color:#ABB2BF">:</span></span>
<span data-line=""><span style="color:#ABB2BF">          - </span><span style="color:#98C379">GET</span></span>
<span data-line=""><span style="color:#ABB2BF">          - </span><span style="color:#98C379">POST</span></span>
<span data-line=""><span style="color:#ABB2BF">          - </span><span style="color:#98C379">DELETE</span></span>
<span data-line=""><span style="color:#ABB2BF">          - </span><span style="color:#98C379">OPTIONS</span></span>
<span data-line=""><span style="color:#E06C75">        AllowHeaders</span><span style="color:#ABB2BF">:</span></span>
<span data-line=""><span style="color:#ABB2BF">          - </span><span style="color:#98C379">'*'</span></span>
<span data-line=""><span style="color:#E06C75">        AllowOrigins</span><span style="color:#ABB2BF">:</span></span>
<span data-line=""><span style="color:#ABB2BF">          - </span><span style="color:#98C379">'*'</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#E06C75">  UploadRequestFunction</span><span style="color:#ABB2BF">:</span></span>
<span data-line=""><span style="color:#E06C75">    Type</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">AWS::Serverless::Function</span></span>
<span data-line=""><span style="color:#E06C75">    Properties</span><span style="color:#ABB2BF">:</span></span>
<span data-line=""><span style="color:#E06C75">      CodeUri</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">lambdas/postFile/</span></span>
<span data-line=""><span style="color:#E06C75">      Handler</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">app.handler</span></span>
<span data-line=""><span style="color:#E06C75">      Runtime</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">nodejs12.x</span></span>
<span data-line=""><span style="color:#E06C75">      Timeout</span><span style="color:#ABB2BF">: </span><span style="color:#D19A66">3</span></span>
<span data-line=""><span style="color:#E06C75">      MemorySize</span><span style="color:#ABB2BF">: </span><span style="color:#D19A66">128</span></span>
<span data-line=""><span style="color:#E06C75">      Environment</span><span style="color:#ABB2BF">:</span></span>
<span data-line=""><span style="color:#E06C75">        Variables</span><span style="color:#ABB2BF">:</span></span>
<span data-line=""><span style="color:#E06C75">          UploadBucket</span><span style="color:#ABB2BF">: </span><span style="color:#C678DD">!Ref</span><span style="color:#98C379"> S3UploadBucket</span></span>
<span data-line=""><span style="color:#E06C75">      Policies</span><span style="color:#ABB2BF">:</span></span>
<span data-line=""><span style="color:#ABB2BF">        - </span><span style="color:#98C379">AmazonDynamoDBFullAccess</span></span>
<span data-line=""><span style="color:#ABB2BF">        - </span><span style="color:#E06C75">S3WritePolicy</span><span style="color:#ABB2BF">:</span></span>
<span data-line=""><span style="color:#E06C75">            BucketName</span><span style="color:#ABB2BF">: </span><span style="color:#C678DD">!Ref</span><span style="color:#98C379"> S3UploadBucket</span></span>
<span data-line=""><span style="color:#ABB2BF">        - </span><span style="color:#E06C75">Statement</span><span style="color:#ABB2BF">:</span></span>
<span data-line=""><span style="color:#ABB2BF">            - </span><span style="color:#E06C75">Effect</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">Allow</span></span>
<span data-line=""><span style="color:#E06C75">              Resource</span><span style="color:#ABB2BF">: </span><span style="color:#C678DD">!Sub</span><span style="color:#98C379"> 'arn:aws:s3:::${S3UploadBucket}/'</span></span>
<span data-line=""><span style="color:#E06C75">              Action</span><span style="color:#ABB2BF">:</span></span>
<span data-line=""><span style="color:#ABB2BF">                - </span><span style="color:#98C379">s3:putObjectAcl</span></span>
<span data-line=""><span style="color:#E06C75">      Events</span><span style="color:#ABB2BF">:</span></span>
<span data-line=""><span style="color:#E06C75">        UploadAssetAPI</span><span style="color:#ABB2BF">:</span></span>
<span data-line=""><span style="color:#E06C75">          Type</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">HttpApi</span></span>
<span data-line=""><span style="color:#E06C75">          Properties</span><span style="color:#ABB2BF">:</span></span>
<span data-line=""><span style="color:#E06C75">            Path</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">/postFile</span></span>
<span data-line=""><span style="color:#E06C75">            Method</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">post</span></span>
<span data-line=""><span style="color:#E06C75">            ApiId</span><span style="color:#ABB2BF">: </span><span style="color:#C678DD">!Ref</span><span style="color:#98C379"> MyApi</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#E06C75">  FileReadFunction</span><span style="color:#ABB2BF">:</span></span>
<span data-line=""><span style="color:#E06C75">    Type</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">AWS::Serverless::Function</span></span>
<span data-line=""><span style="color:#E06C75">    Properties</span><span style="color:#ABB2BF">:</span></span>
<span data-line=""><span style="color:#E06C75">      CodeUri</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">lambdas/getFiles/</span></span>
<span data-line=""><span style="color:#E06C75">      Handler</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">app.handler</span></span>
<span data-line=""><span style="color:#E06C75">      Runtime</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">nodejs12.x</span></span>
<span data-line=""><span style="color:#E06C75">      Timeout</span><span style="color:#ABB2BF">: </span><span style="color:#D19A66">3</span></span>
<span data-line=""><span style="color:#E06C75">      MemorySize</span><span style="color:#ABB2BF">: </span><span style="color:#D19A66">128</span></span>
<span data-line=""><span style="color:#E06C75">      Policies</span><span style="color:#ABB2BF">:</span></span>
<span data-line=""><span style="color:#ABB2BF">        - </span><span style="color:#98C379">AmazonDynamoDBFullAccess</span></span>
<span data-line=""><span style="color:#E06C75">      Events</span><span style="color:#ABB2BF">:</span></span>
<span data-line=""><span style="color:#E06C75">        UploadAssetAPI</span><span style="color:#ABB2BF">:</span></span>
<span data-line=""><span style="color:#E06C75">          Type</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">HttpApi</span></span>
<span data-line=""><span style="color:#E06C75">          Properties</span><span style="color:#ABB2BF">:</span></span>
<span data-line=""><span style="color:#E06C75">            Path</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">/getFiles</span></span>
<span data-line=""><span style="color:#E06C75">            Method</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">get</span></span>
<span data-line=""><span style="color:#E06C75">            ApiId</span><span style="color:#ABB2BF">: </span><span style="color:#C678DD">!Ref</span><span style="color:#98C379"> MyApi</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#7F848E;font-style:italic">  ## S3 bucket</span></span>
<span data-line=""><span style="color:#E06C75">  S3UploadBucket</span><span style="color:#ABB2BF">:</span></span>
<span data-line=""><span style="color:#E06C75">    Type</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">AWS::S3::Bucket</span></span>
<span data-line=""><span style="color:#E06C75">    Properties</span><span style="color:#ABB2BF">:</span></span>
<span data-line=""><span style="color:#E06C75">      CorsConfiguration</span><span style="color:#ABB2BF">:</span></span>
<span data-line=""><span style="color:#E06C75">        CorsRules</span><span style="color:#ABB2BF">:</span></span>
<span data-line=""><span style="color:#ABB2BF">          - </span><span style="color:#E06C75">AllowedHeaders</span><span style="color:#ABB2BF">:</span></span>
<span data-line=""><span style="color:#ABB2BF">              - </span><span style="color:#98C379">'*'</span></span>
<span data-line=""><span style="color:#E06C75">            AllowedMethods</span><span style="color:#ABB2BF">:</span></span>
<span data-line=""><span style="color:#ABB2BF">              - </span><span style="color:#98C379">GET</span></span>
<span data-line=""><span style="color:#ABB2BF">              - </span><span style="color:#98C379">PUT</span></span>
<span data-line=""><span style="color:#ABB2BF">              - </span><span style="color:#98C379">HEAD</span></span>
<span data-line=""><span style="color:#E06C75">            AllowedOrigins</span><span style="color:#ABB2BF">:</span></span>
<span data-line=""><span style="color:#ABB2BF">              - </span><span style="color:#98C379">'*'</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#7F848E;font-style:italic">## Take a note of the outputs for deploying the workflow templates in this sample application</span></span>
<span data-line=""><span style="color:#E06C75">Outputs</span><span style="color:#ABB2BF">:</span></span>
<span data-line=""><span style="color:#E06C75">  APIendpoint</span><span style="color:#ABB2BF">:</span></span>
<span data-line=""><span style="color:#E06C75">    Description</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">'HTTP API endpoint URL'</span></span>
<span data-line=""><span style="color:#E06C75">    Value</span><span style="color:#ABB2BF">: </span><span style="color:#C678DD">!Sub</span><span style="color:#98C379"> 'https://${MyApi}.execute-api.${AWS::Region}.amazonaws.com'</span></span>
<span data-line=""><span style="color:#E06C75">  S3UploadBucketName</span><span style="color:#ABB2BF">:</span></span>
<span data-line=""><span style="color:#E06C75">    Description</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">'S3 bucket for application uploads'</span></span>
<span data-line=""><span style="color:#E06C75">    Value</span><span style="color:#ABB2BF">: </span><span style="color:#C678DD">!Ref</span><span style="color:#98C379"> 'S3UploadBucket'</span></span></code></pre></figure>
<p>To display all the pictures I use a switch from video or img tag based on
contentType.startsWith('video'). I also use the "figcaption" HTML tag to have a
little caption on the pics/videos</p>
<p>./frontend/src/App.tsx</p>
<figure data-rehype-pretty-code-figure=""><pre style="background-color:#282c34;color:#abb2bf" tabindex="0" data-language="tsx" data-theme="one-dark-pro"><code data-language="tsx" data-theme="one-dark-pro" style="display: grid;"><span data-line=""><span style="color:#C678DD">function</span><span style="color:#61AFEF"> Media</span><span style="color:#ABB2BF">({</span></span>
<span data-line=""><span style="color:#E06C75;font-style:italic">  file</span><span style="color:#ABB2BF">,</span></span>
<span data-line=""><span style="color:#E06C75;font-style:italic">  style</span><span style="color:#ABB2BF">,</span></span>
<span data-line=""><span style="color:#E06C75;font-style:italic">  onClick</span><span style="color:#ABB2BF">,</span></span>
<span data-line=""><span style="color:#E06C75;font-style:italic">  children</span><span style="color:#ABB2BF">,</span></span>
<span data-line=""><span style="color:#ABB2BF">}: {</span></span>
<span data-line=""><span style="color:#E06C75">  file</span><span style="color:#ABB2BF">: </span><span style="color:#E5C07B">File</span></span>
<span data-line=""><span style="color:#61AFEF">  onClick</span><span style="color:#C678DD">?</span><span style="color:#ABB2BF">: </span><span style="color:#E5C07B">Function</span></span>
<span data-line=""><span style="color:#E06C75">  style</span><span style="color:#C678DD">?</span><span style="color:#ABB2BF">: </span><span style="color:#E5C07B">React</span><span style="color:#ABB2BF">.</span><span style="color:#E5C07B">CSSProperties</span></span>
<span data-line=""><span style="color:#E06C75">  children</span><span style="color:#C678DD">?</span><span style="color:#ABB2BF">: </span><span style="color:#E5C07B">React</span><span style="color:#ABB2BF">.</span><span style="color:#E5C07B">ReactNode</span></span>
<span data-line=""><span style="color:#ABB2BF">}) {</span></span>
<span data-line=""><span style="color:#C678DD">  const</span><span style="color:#ABB2BF"> { </span><span style="color:#E5C07B">filename</span><span style="color:#ABB2BF">, </span><span style="color:#E5C07B">contentType</span><span style="color:#ABB2BF"> } </span><span style="color:#56B6C2">=</span><span style="color:#E06C75"> file</span></span>
<span data-line=""><span style="color:#C678DD">  const</span><span style="color:#E5C07B"> src</span><span style="color:#56B6C2"> =</span><span style="color:#98C379"> `</span><span style="color:#C678DD">${</span><span style="color:#E5C07B">BUCKET</span><span style="color:#C678DD">}</span><span style="color:#98C379">/</span><span style="color:#C678DD">${</span><span style="color:#E06C75">filename</span><span style="color:#C678DD">}</span><span style="color:#98C379">`</span></span>
<span data-line=""><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> (</span></span>
<span data-line=""><span style="color:#ABB2BF">    &#x3C;</span><span style="color:#E06C75">figure</span><span style="color:#D19A66;font-style:italic"> style</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#ABB2BF">{ </span><span style="color:#E06C75">display</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">'inline-block'</span><span style="color:#ABB2BF"> }</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF">></span></span>
<span data-line=""><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E06C75">picture</span><span style="color:#ABB2BF">></span></span>
<span data-line=""><span style="color:#C678DD">        {</span><span style="color:#E5C07B">contentType</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">startsWith</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">'video'</span><span style="color:#ABB2BF">) </span><span style="color:#C678DD">?</span><span style="color:#ABB2BF"> (</span></span>
<span data-line=""><span style="color:#ABB2BF">          &#x3C;</span><span style="color:#E06C75">video</span><span style="color:#D19A66;font-style:italic"> style</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#E06C75">style</span><span style="color:#C678DD">}</span><span style="color:#D19A66;font-style:italic"> src</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#E06C75">src</span><span style="color:#C678DD">}</span><span style="color:#D19A66;font-style:italic"> controls</span><span style="color:#D19A66;font-style:italic"> onClick</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#E06C75">onClick</span><span style="color:#C678DD"> as</span><span style="color:#E5C07B"> any</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF"> /></span></span>
<span data-line=""><span style="color:#ABB2BF">        ) </span><span style="color:#C678DD">:</span><span style="color:#ABB2BF"> (</span></span>
<span data-line=""><span style="color:#ABB2BF">          &#x3C;</span><span style="color:#E06C75">img</span><span style="color:#D19A66;font-style:italic"> style</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#E06C75">style</span><span style="color:#C678DD">}</span><span style="color:#D19A66;font-style:italic"> src</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#E06C75">src</span><span style="color:#C678DD">}</span><span style="color:#D19A66;font-style:italic"> onClick</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#E06C75">onClick</span><span style="color:#C678DD"> as</span><span style="color:#E5C07B"> any</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF"> /></span></span>
<span data-line=""><span style="color:#ABB2BF">        )</span><span style="color:#C678DD">}</span></span>
<span data-line=""><span style="color:#ABB2BF">      &#x3C;/</span><span style="color:#E06C75">picture</span><span style="color:#ABB2BF">></span></span>
<span data-line=""><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E06C75">figcaption</span><span style="color:#ABB2BF">></span><span style="color:#C678DD">{</span><span style="color:#E06C75">children</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF">&#x3C;/</span><span style="color:#E06C75">figcaption</span><span style="color:#ABB2BF">></span></span>
<span data-line=""><span style="color:#ABB2BF">    &#x3C;/</span><span style="color:#E06C75">figure</span><span style="color:#ABB2BF">></span></span>
<span data-line=""><span style="color:#ABB2BF">  )</span></span>
<span data-line=""><span style="color:#ABB2BF">}</span></span></code></pre></figure>
<p>Now the really fun part: if you get an image of a picture frame like
<a href="https://www.amazon.com/Paintings-Frames-Antique-Shatterproof-Osafs2-Gld-A3/dp/B06XNQ8W9T">https://www.amazon.com/Paintings-Frames-Antique-Shatterproof-Osafs2-Gld-A3/dp/B06XNQ8W9T</a></p>
<p>You can make it a border for any image or video using border-image CSS</p>
<figure data-rehype-pretty-code-figure=""><pre style="background-color:#282c34;color:#abb2bf" tabindex="0" data-language="js" data-theme="one-dark-pro"><code data-language="js" data-theme="one-dark-pro" style="display: grid;"><span data-line=""><span style="color:#E06C75">style</span><span style="color:#56B6C2"> =</span><span style="color:#ABB2BF"> {</span></span>
<span data-line=""><span style="color:#E06C75">  border</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">'30px solid'</span><span style="color:#ABB2BF">,</span></span>
<span data-line=""><span style="color:#E06C75">  borderImage</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">`url(borders/</span><span style="color:#C678DD">${</span><span style="color:#E06C75">border</span><span style="color:#C678DD">}</span><span style="color:#98C379">) 30 round`</span><span style="color:#ABB2BF">,</span></span>
<span data-line=""><span style="color:#ABB2BF">}</span></span></code></pre></figure>
<p><img src="/media/638602799897329664_0.png" alt=""></p>
<h2 id="summary"><a aria-hidden="true" tabindex="-1" href="#summary"><a href="#summary" style="margin-right: 10px">#</a></a>Summary</h2>
<p>The template.yaml automatically deploys the lambdas for postFile/getFile and the
files table in dynamoDB</p>
<p>The React app uses postFile for each file in an <code>&#x3C;input type="file"/></code>, the code
uses React hooks and functional components but is hopefully not too complex</p>
<p>I also added commenting on photos. The code is not shown here but you can look
in the source code for details</p>
<p><img src="/media/638602799897329664_1.png" alt=""></p>
<p>Overall this has been a good experience learning to develop this app and
learning to automate the cloud deployment is really good for ensuring
reliability and fast iteration.</p>
<p>Also quick note on serverless CLI vs aws-sam. I had tried a serverless CLI
tutorial from another user but it didn't click with me, while the aws-sam
tutorial from
<a href="https://searchvoidstar.tumblr.com/post/638408397901987840/making-a-serverless-website-for-photo-upload-pt-1">https://searchvoidstar.tumblr.com/post/638408397901987840/making-a-serverless-website-for-photo-upload-pt-1</a>
was a great kick start for me. I am sure the serverless CLI is great too and it
ensures a bit less vendor lock in, but then is also a little bit removed from
the native aws config schemas. Probably fine though</p>
<h2 id="source-code"><a aria-hidden="true" tabindex="-1" href="#source-code"><a href="#source-code" style="margin-right: 10px">#</a></a>Source code</h2>
<p><a href="https://github.com/cmdcolin/aws_photo_gallery/">https://github.com/cmdcolin/aws_photo_gallery/</a></p>6:["$","div",null,{"className":"lg:w-1/2","children":[["$","div",null,{"children":[["$","h1",null,{"children":"Making a serverless website for photo and video upload pt. 2"}],["$","h4",null,{"children":"2020-12-26"}]]}],["$","div",null,{"dangerouslySetInnerHTML":{"__html":"$e"}}],["$","$Lf",null,{}]]}]
a:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Making a serverless website for photo and video upload pt. 2"}],["$","meta","2",{"name":"description","content":"A blog"}]]
8:null
