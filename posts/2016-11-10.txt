0:[[["",{"children":["posts",{"children":[["id","2016-11-10","d"],{"children":["__PAGE__?{\"id\":\"2016-11-10\"}",{}]}]}]},"$undefined","$undefined",true],"$L1","$L2"]]
3:I{"id":"3619","name":"","chunks":["619:619-d3e80a47715091a2","931:app/page-59752a1737368847"],"async":false}
4:I{"id":"1300","name":"","chunks":["272:webpack-3224743bbfce757e","667:2443530c-7c83a1ec49cb3fce","961:961-0b7193e5f574b882"],"async":false}
5:I{"id":"6022","name":"","chunks":["272:webpack-3224743bbfce757e","667:2443530c-7c83a1ec49cb3fce","961:961-0b7193e5f574b882"],"async":false}
1:[["$","html",null,{"lang":"en","children":["$","body",null,{"children":[["$","div",null,{"style":{"marginBottom":100},"children":["$","$L3",null,{"href":"/","children":"Misc scribbles"}]}],["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L5",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":"$undefined","asNotFound":false,"childProp":{"current":["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","posts","children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L5",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","asNotFound":false,"childProp":{"current":["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","posts","children",["id","2016-11-10","d"],"children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L5",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","asNotFound":false,"childProp":{"current":["$L6","$@7"],"segment":"__PAGE__?{\"id\":\"2016-11-10\"}"}}],"segment":["id","2016-11-10","d"]}}],"segment":"posts"}}],["$","footer",null,{"style":{"marginTop":100},"children":[["$","$L3",null,{"href":"/","children":"Home"}]," ",["$","$L3",null,{"href":"/archive","children":"Blog archive"}]," ",["$","$L3",null,{"href":"https://github.com/cmdcolin/","children":"Github"}]," ",["$","$L3",null,{"href":"https://twitter.com/cmdcolin","children":"Twitter"}]," ",["$","$L3",null,{"href":"/projects","children":"Projects"}]," ",["$","$L3",null,{"href":"/photos","children":"Photos"}]," ",["$","$L3",null,{"href":"/rss.xml","children":"RSS"}]," ",["$","$L3",null,{"href":"/about","children":"About"}]]}]]}]}],"$@8"]
7:[null,null,[]]
8:[null,null,[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/97dc5fe527f5d592.css","precedence":"next.js"}]]]
2:[[["$","meta",null,{"charSet":"utf-8"}],["$","title",null,{"children":"Creating a JBrowse plugin"}],["$","meta",null,{"name":"description","content":"A blog"}],null,null,null,null,null,null,null,null,["$","meta",null,{"name":"viewport","content":"width=device-width, initial-scale=1"}],null,null,null,null,null,null,null,null,null,null,[]],[null,null,null,null],null,null,[null,null,null,null,null],null,null,null,null,[null,[["$","link",null,{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"any"}]],[],null]]
9:I{"id":"3591","name":"","chunks":["722:app/posts/[id]/page-cb4a6e559310dd46"],"async":false}
6:["$","article",null,{"children":[["$","div",null,{"children":[["$","h1",null,{"children":"Creating a JBrowse plugin"}],["$","h4",null,{"children":"2016-11-10"}]]}],["$","div",null,{"dangerouslySetInnerHTML":{"__html":"<p>I have been very impressed with peoples creativity and willingness to dig into\nall the details of JBrowse to customize it's features. One great way to do this\nin a modular way is to create a \"JBrowse plugin\". This concept sounds hard but\nyou can set up a simple couple of files and refresh your browser and it will\n\"just work\"!</p>\n<h2 id=\"introduction-to-the-plugin-mindset\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#introduction-to-the-plugin-mindset\"><a href=\"#introduction-to-the-plugin-mindset\" style=\"margin-right: 10px\">#</a></a>Introduction to the plugin mindset</h2>\n<p>In a plugin, you can define new things like custom track types, custom adaptors\nto new file types, new track selectors, or something really different. A key\ninsight about the custom types of tracks and things though is that you can put\nthe name of your new custom class in the jbrowse config file which will then\nfind the code in your plugin and run it. Plugins can do other things, but the\nability to just swap out track types or other components in the config file is a\ngreat benefit.</p>\n<h2 id=\"a-scenario\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#a-scenario\"><a href=\"#a-scenario\" style=\"margin-right: 10px\">#</a></a>A scenario</h2>\n<p>One example that was talked about on the mailing list might involve adding new\nmenu items for a given track. We might consider a plugin that defines a custom\ntrack type to add that functionality.</p>\n<p>Basically, we can use object- oriented principles to \"inherit\" from some\nexisting track type like CanvasFeatures and then extend its functionality by\noverriding the functions.</p>\n<p>If you are not familiar with object-oriented javascript, dojo makes it pretty\neasy (but, especially get a background on this if you need to, see footnotes\nbelow).</p>\n<p>We can inherit a new track type by using the \"define\" function to include the\ndependencies needed in a file, and they are listed in an array at the top of\nyour file.</p>\n<p>Then the \"declare\" function creates a new class. The first argument to declare\nis the is your parent class, like CanvasFeatures, and we type \"return declare\"\nbecause we are returning our new track class from the module.</p>\n<pre class=\"shiki poimandres\" style=\"background-color: #1b1e28\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #E4F0FBD0\">define</span><span style=\"color: #A6ACCD\">([</span><span style=\"color: #A6ACCD\">'</span><span style=\"color: #5DE4C7\">dojo/_base/declare</span><span style=\"color: #A6ACCD\">'</span><span style=\"color: #A6ACCD\">, </span><span style=\"color: #A6ACCD\">'</span><span style=\"color: #5DE4C7\">JBrowse/View/Track/CanvasFeatures</span><span style=\"color: #A6ACCD\">'</span><span style=\"color: #A6ACCD\">], </span><span style=\"color: #91B4D5\">function</span><span style=\"color: #A6ACCD\"> (</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #E4F0FB\">declare</span><span style=\"color: #A6ACCD\">,</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #E4F0FB\">CanvasFeatures</span><span style=\"color: #A6ACCD\">,</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">) {</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #5DE4C7C0\">return</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #E4F0FBD0\">declare</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #E4F0FB\">CanvasFeatures</span><span style=\"color: #A6ACCD\">, {</span></span>\n<span class=\"line\"><span style=\"color: #E4F0FB\">    </span><span style=\"color: #ADD7FF\">_trackMenuOptions</span><span style=\"color: #A6ACCD\">:</span><span style=\"color: #ADD7FF\"> </span><span style=\"color: #91B4D5\">function</span><span style=\"color: #ADD7FF\"> </span><span style=\"color: #A6ACCD\">()</span><span style=\"color: #ADD7FF\"> </span><span style=\"color: #A6ACCD\">{</span></span>\n<span class=\"line\"><span style=\"color: #ADD7FF\">      </span><span style=\"color: #91B4D5\">var</span><span style=\"color: #ADD7FF\"> </span><span style=\"color: #E4F0FB\">opts</span><span style=\"color: #ADD7FF\"> </span><span style=\"color: #91B4D5\">=</span><span style=\"color: #ADD7FF\"> </span><span style=\"color: #5DE4C7; font-style: italic\">this</span><span style=\"color: #A6ACCD\">.</span><span style=\"color: #E4F0FBD0\">inherited</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #ADD7FF; font-style: italic\">arguments</span><span style=\"color: #A6ACCD\">)</span><span style=\"color: #ADD7FF\"> </span><span style=\"color: #767C9DB0; font-style: italic\">//call the parent classes function</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #ADD7FF\">      </span><span style=\"color: #E4F0FB\">opts</span><span style=\"color: #A6ACCD\">.</span><span style=\"color: #E4F0FBD0\">push</span><span style=\"color: #A6ACCD\">(</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">        </span><span style=\"color: #767C9DB0; font-style: italic\">// add an extra menu item to the array returned from parent class function</span></span>\n<span class=\"line\"><span style=\"color: #ADD7FF\">        </span><span style=\"color: #A6ACCD\">{</span></span>\n<span class=\"line\"><span style=\"color: #E4F0FB\">          </span><span style=\"color: #ADD7FF\">label</span><span style=\"color: #A6ACCD\">:</span><span style=\"color: #ADD7FF\"> </span><span style=\"color: #A6ACCD\">'</span><span style=\"color: #5DE4C7\">Custom item</span><span style=\"color: #A6ACCD\">'</span><span style=\"color: #A6ACCD\">,</span></span>\n<span class=\"line\"><span style=\"color: #E4F0FB\">          </span><span style=\"color: #ADD7FF\">type</span><span style=\"color: #A6ACCD\">:</span><span style=\"color: #ADD7FF\"> </span><span style=\"color: #A6ACCD\">'</span><span style=\"color: #5DE4C7\">dijit/CheckedMenuItem</span><span style=\"color: #A6ACCD\">'</span><span style=\"color: #A6ACCD\">,</span></span>\n<span class=\"line\"><span style=\"color: #E4F0FB\">          </span><span style=\"color: #ADD7FF\">onClick</span><span style=\"color: #A6ACCD\">:</span><span style=\"color: #ADD7FF\"> </span><span style=\"color: #91B4D5\">function</span><span style=\"color: #ADD7FF\"> </span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #E4F0FB\">event</span><span style=\"color: #A6ACCD\">)</span><span style=\"color: #ADD7FF\"> </span><span style=\"color: #A6ACCD\">{</span></span>\n<span class=\"line\"><span style=\"color: #ADD7FF\">            </span><span style=\"color: #E4F0FB\">console</span><span style=\"color: #A6ACCD\">.</span><span style=\"color: #E4F0FBD0\">log</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #A6ACCD\">'</span><span style=\"color: #5DE4C7\">Clicked</span><span style=\"color: #A6ACCD\">'</span><span style=\"color: #A6ACCD\">)</span></span>\n<span class=\"line\"><span style=\"color: #ADD7FF\">          </span><span style=\"color: #A6ACCD\">},</span></span>\n<span class=\"line\"><span style=\"color: #E4F0FB\">          </span><span style=\"color: #ADD7FF\">iconClass</span><span style=\"color: #A6ACCD\">:</span><span style=\"color: #ADD7FF\"> </span><span style=\"color: #A6ACCD\">'</span><span style=\"color: #5DE4C7\">dijitIconPackage</span><span style=\"color: #A6ACCD\">'</span><span style=\"color: #A6ACCD\">,</span></span>\n<span class=\"line\"><span style=\"color: #E4F0FB\">        </span><span style=\"color: #A6ACCD\">},</span></span>\n<span class=\"line\"><span style=\"color: #ADD7FF\">      </span><span style=\"color: #A6ACCD\">)</span></span>\n<span class=\"line\"><span style=\"color: #ADD7FF\">      </span><span style=\"color: #5DE4C7C0\">return</span><span style=\"color: #ADD7FF\"> </span><span style=\"color: #E4F0FB\">opts</span></span>\n<span class=\"line\"><span style=\"color: #ADD7FF\">    </span><span style=\"color: #A6ACCD\">},</span></span>\n<span class=\"line\"><span style=\"color: #E4F0FB\">  </span><span style=\"color: #A6ACCD\">})</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">})</span></span></code></pre>\n<p>Code listing 1. an example custom track type, MyTrack.js, that adds an extra\ntrack menu item</p>\n<h2 id=\"now-how-do-we-make-this-a-plugin\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#now-how-do-we-make-this-a-plugin\"><a href=\"#now-how-do-we-make-this-a-plugin\" style=\"margin-right: 10px\">#</a></a>Now how do we make this a plugin?</h2>\n<p>In the above section, we created a new track subclass with a custom menu option.\nHow do we use this track? We want to turn it into part of afine the boilerplate\ncode from the\n<a href=\"http://gmod.org/wiki/JBrowse_Configuration_Guide#Writing_JBrowse_Plugins\">Writing plugins</a>\nguide.</p>\n<pre class=\"shiki poimandres\" style=\"background-color: #1b1e28\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #E4F0FBD0\">define</span><span style=\"color: #A6ACCD\">([</span><span style=\"color: #A6ACCD\">'</span><span style=\"color: #5DE4C7\">dojo/_base/declare</span><span style=\"color: #A6ACCD\">'</span><span style=\"color: #A6ACCD\">, </span><span style=\"color: #A6ACCD\">'</span><span style=\"color: #5DE4C7\">JBrowse/Plugin</span><span style=\"color: #A6ACCD\">'</span><span style=\"color: #A6ACCD\">], </span><span style=\"color: #91B4D5\">function</span><span style=\"color: #A6ACCD\"> (</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #E4F0FB\">declare</span><span style=\"color: #A6ACCD\">,</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #E4F0FB\">JBrowsePlugin</span><span style=\"color: #A6ACCD\">,</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">) {</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #5DE4C7C0\">return</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #E4F0FBD0\">declare</span><span style=\"color: #A6ACCD\">(</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #E4F0FB\">JBrowsePlugin</span><span style=\"color: #A6ACCD\">, </span><span style=\"color: #767C9DB0; font-style: italic\">// this line says our plugin's main.js derives from the \"JBrowse/Plugin\" base class</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    {</span></span>\n<span class=\"line\"><span style=\"color: #E4F0FB\">      </span><span style=\"color: #ADD7FF\">constructor</span><span style=\"color: #A6ACCD\">:</span><span style=\"color: #ADD7FF\"> </span><span style=\"color: #91B4D5\">function</span><span style=\"color: #ADD7FF\"> </span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #E4F0FB\">args</span><span style=\"color: #A6ACCD\">)</span><span style=\"color: #ADD7FF\"> </span><span style=\"color: #A6ACCD\">{</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">        </span><span style=\"color: #767C9DB0; font-style: italic\">//don't necessarily have to do any initializing here, but you</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">        </span><span style=\"color: #767C9DB0; font-style: italic\">//can get a handle to various jbrowse components if any initialization</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">        </span><span style=\"color: #767C9DB0; font-style: italic\">//is needed from the args.browser variable</span></span>\n<span class=\"line\"><span style=\"color: #ADD7FF\">      </span><span style=\"color: #A6ACCD\">},</span></span>\n<span class=\"line\"><span style=\"color: #E4F0FB\">    </span><span style=\"color: #A6ACCD\">},</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  )</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">})</span></span></code></pre>\n<p>Code listing 2. Our plugin's main.js</p>\n<p>After this, we create the plugin directory structure</p>\n<blockquote>\n<p>jbrowse/plugins/MyPlugin</p>\n<blockquote>\n<p>jbrowse/plugins/MyPlugin/js</p>\n<blockquote>\n<p>jbrowse/plugins/MyPlugin/js/main.js</p>\n<p>jbrowse/plugins/MyPlugin/js/MyTrack.js</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<p>Then we can add our new plugin to a config file like <code>jbrowse_conf.json</code> as\n<code>\"plugins\": [\"MyPlugin\"]</code> and then make a track in <code>trackList.json</code> have\n<code>\"type\": \"MyPlugin/MyTrack\"</code> instead of for example <code>\"type\": \"CanvasFeatures\"</code>.\nThat will tell jbrowse to load the <code>MyTrack</code> class from your plugin instead of\nthe normal <code>CanvasFeatures</code> class.</p>\n<p>That's about it!</p>\n<p>Note that the <code>bin/new-plugin.pl</code> script can automatically initialize some of\nthis directory structure too. Try running <code>bin/new-plugin.pl MyPlugin</code> and see\nwhat happens.</p>\n<h3 id=\"footnotes\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#footnotes\"><a href=\"#footnotes\" style=\"margin-right: 10px\">#</a></a>Footnotes:</h3>\n<p>It is important to understand the module format (AMD) which is what the \"define\"\nfunction is about and the dojo way of defining classes using the \"declare\"\nfunction. Together, this allows the dojo to create object-oriented programs that\nare modular in javascript. See\n<a href=\"http://dojotoolkit.org/reference-guide/1.10/dojo/_base/declare.html\">http://dojotoolkit.org/reference-guide/1.10/dojo/_base/declare.html</a> and\n<a href=\"http://dojotoolkit.org/documentation/tutorials/1.9/modules/\">http://dojotoolkit.org/documentation/tutorials/1.9/modules/</a> (understanding this\nhelps you understand the \"preamble\" for declaring a jbrowse plugin)</p>"}}],["$","$L9",null,{}]]}]
