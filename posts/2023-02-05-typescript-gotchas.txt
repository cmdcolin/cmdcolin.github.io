1:HL["/_next/static/css/97dc5fe527f5d592.css",{"as":"style"}]
0:[[["",{"children":["posts",{"children":[["id","2023-02-05-typescript-gotchas","d"],{"children":["__PAGE__?{\"id\":\"2023-02-05-typescript-gotchas\"}",{}]}]}]},"$undefined","$undefined",true],"$L2",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/97dc5fe527f5d592.css","precedence":"next"}]],["$L3",null]]]]
4:I{"id":"414","chunks":["414:static/chunks/414-6d6e10881f5d1a2e.js","467:static/chunks/app/archive/page-b9afc96c23d1c7f9.js"],"name":"","async":false}
5:I{"id":"9544","chunks":["272:static/chunks/webpack-3224743bbfce757e.js","667:static/chunks/2443530c-b193ff79fd6a1567.js","139:static/chunks/139-a55d005ec0ce8e4f.js"],"name":"","async":false}
6:I{"id":"99","chunks":["272:static/chunks/webpack-3224743bbfce757e.js","667:static/chunks/2443530c-b193ff79fd6a1567.js","139:static/chunks/139-a55d005ec0ce8e4f.js"],"name":"","async":false}
2:[["$","html",null,{"lang":"en","children":["$","body",null,{"children":[["$","div",null,{"style":{"marginBottom":100},"children":["$","$L4",null,{"href":"/","children":"Misc scribbles"}]}],["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L6",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","asNotFound":"$undefined","childProp":{"current":["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","posts","children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L6",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","asNotFound":"$undefined","childProp":{"current":["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","posts","children",["id","2023-02-05-typescript-gotchas","d"],"children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L6",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","asNotFound":"$undefined","childProp":{"current":["$L7",null],"segment":"__PAGE__?{\"id\":\"2023-02-05-typescript-gotchas\"}"},"styles":[]}],"segment":["id","2023-02-05-typescript-gotchas","d"]},"styles":[]}],"segment":"posts"},"styles":[]}],["$","footer",null,{"style":{"marginTop":100},"children":[["$","$L4",null,{"href":"/","children":"Home"}]," ",["$","$L4",null,{"href":"/archive","children":"Blog archive"}]," ",["$","$L4",null,{"href":"https://github.com/cmdcolin/","children":"Github"}]," ",["$","$L4",null,{"href":"https://twitter.com/cmdcolin","children":"Twitter"}]," ",["$","$L4",null,{"href":"/projects","children":"Projects"}]," ",["$","$L4",null,{"href":"/photos","children":"Photos"}]," ",["$","$L4",null,{"href":"/about","children":"About"}]]}]]}]}],null]
3:[[["$","meta",null,{"charSet":"utf-8"}],["$","title",null,{"children":"Things typescript didn't catch that should probably be lint rules"}],["$","meta",null,{"name":"description","content":"A blog"}],null,null,null,null,null,null,null,null,["$","meta",null,{"name":"viewport","content":"width=device-width, initial-scale=1"}],null,null,null,null,null,null,null,null,null,null,[]],[null,null,null,null],null,null,[null,null,null,null,null],null,null,null,null,[null,[["$","link",null,{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"any"}]],[],null]]
8:I{"id":"6677","chunks":["722:static/chunks/app/posts/[id]/page-29425205b46f5335.js"],"name":"","async":false}
7:["$","article",null,{"children":[["$","div",null,{"children":[["$","h1",null,{"children":"Things typescript didn't catch that should probably be lint rules"}],["$","h4",null,{"children":"2023-02-05"}]]}],["$","div",null,{"dangerouslySetInnerHTML":{"__html":"<p>This is a short list of silly things that I wish Typescript would have caught\nfor me, but are silly logic errors</p>\n<h2 id=\"using-objectentries-accidentally-instead-of-objectfromentries\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#using-objectentries-accidentally-instead-of-objectfromentries\"><a href=\"#using-objectentries-accidentally-instead-of-objectfromentries\" style=\"margin-right: 10px\">#</a></a>Using <code>Object.entries</code> accidentally instead of <code>Object.fromEntries</code></h2>\n<p>Typescript will not complain if you use <code>Object.entries</code> instead of\n<code>Object.fromEntries</code></p>\n<pre class=\"shiki poimandres\" style=\"background-color: #1b1e28\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #91B4D5\">const</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #E4F0FB\">stuff</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #91B4D5\">=</span><span style=\"color: #A6ACCD\"> [</span><span style=\"color: #5DE4C7\">1</span><span style=\"color: #A6ACCD\">, </span><span style=\"color: #5DE4C7\">2</span><span style=\"color: #A6ACCD\">, </span><span style=\"color: #5DE4C7\">3</span><span style=\"color: #A6ACCD\">]</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #767C9DB0; font-style: italic\">// woops, meant to use Object.fromEntries</span></span>\n<span class=\"line\"><span style=\"color: #E4F0FB\">Object</span><span style=\"color: #A6ACCD\">.</span><span style=\"color: #E4F0FBD0\">entries</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #E4F0FB\">stuff</span><span style=\"color: #A6ACCD\">.</span><span style=\"color: #E4F0FBD0\">map</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #E4F0FB\">entry</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #91B4D5\">=></span><span style=\"color: #A6ACCD\"> [</span><span style=\"color: #E4F0FB\">entry</span><span style=\"color: #A6ACCD\">, {</span><span style=\"color: #E4F0FB\"> </span><span style=\"color: #ADD7FF\">id</span><span style=\"color: #A6ACCD\">:</span><span style=\"color: #ADD7FF\"> </span><span style=\"color: #E4F0FB\">entry</span><span style=\"color: #ADD7FF\"> </span><span style=\"color: #A6ACCD\">}]))</span></span></code></pre>\n<p><a href=\"https://www.typescriptlang.org/play?#code/FAYw9gdgzgLgBLArgM2QXgNoEYA0AmHAZgF1gB5AIwCsBTEGAOhohgCcBLGqACiVQYC2AQwAO3ZmwCeaAHwYJrSTjgBvdgBMAXAskBfYgEoDQA\">playground</a></p>\n<p>Summary: should probably be a lint rule (a \"types required\" lint rule, a la\n@typescript-eslint) not to accept arrays for Object.entries</p>\n<p>Update 02-27-23: Proposing this rule here\n<a href=\"https://github.com/typescript-eslint/typescript-eslint/issues/6537\">https://github.com/typescript-eslint/typescript-eslint/issues/6537</a></p>\n<h2 id=\"passing-garbage-to-the-second-argument-of-arrayprototypemap-accidentally\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#passing-garbage-to-the-second-argument-of-arrayprototypemap-accidentally\"><a href=\"#passing-garbage-to-the-second-argument-of-arrayprototypemap-accidentally\" style=\"margin-right: 10px\">#</a></a>Passing garbage to the second argument of Array.prototype.map accidentally</h2>\n<pre class=\"shiki poimandres\" style=\"background-color: #1b1e28\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #91B4D5\">function</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">doStuff</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #E4F0FB\">arr</span><span style=\"color: #91B4D5\">:</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #A6ACCDC0\">number</span><span style=\"color: #A6ACCD\">[], </span><span style=\"color: #E4F0FB\">extra</span><span style=\"color: #91B4D5\">?:</span><span style=\"color: #A6ACCD\"> { sayHiToMom</span><span style=\"color: #91B4D5\">:</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #A6ACCDC0\">boolean</span><span style=\"color: #A6ACCD\"> }) {</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  if (</span><span style=\"color: #E4F0FB\">extra</span><span style=\"color: #A6ACCD\">?.</span><span style=\"color: #E4F0FB\">sayHiToMom</span><span style=\"color: #A6ACCD\">) {</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #E4F0FB\">console</span><span style=\"color: #A6ACCD\">.</span><span style=\"color: #E4F0FBD0\">log</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #A6ACCD\">'</span><span style=\"color: #5DE4C7\">Hi mom</span><span style=\"color: #A6ACCD\">'</span><span style=\"color: #A6ACCD\">)</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  }</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #5DE4C7C0\">return</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #E4F0FB\">arr</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #91B4D5\">const</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #E4F0FB\">stuff</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #91B4D5\">=</span><span style=\"color: #A6ACCD\"> [</span><span style=\"color: #5DE4C7\">1</span><span style=\"color: #A6ACCD\">, </span><span style=\"color: #5DE4C7\">2</span><span style=\"color: #A6ACCD\">, </span><span style=\"color: #5DE4C7\">3</span><span style=\"color: #A6ACCD\">]</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #767C9DB0; font-style: italic\">// woops, meant to pass that as second argument to doStuff</span></span>\n<span class=\"line\"><span style=\"color: #E4F0FBD0\">doStuff</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #E4F0FB\">stuff</span><span style=\"color: #A6ACCD\">.</span><span style=\"color: #E4F0FBD0\">map</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #E4F0FB\">a</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #91B4D5\">=></span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #E4F0FB\">a</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #91B4D5\">*</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #5DE4C7\">2</span><span style=\"color: #A6ACCD\">, {</span><span style=\"color: #E4F0FB\"> </span><span style=\"color: #ADD7FF\">sayHiToMom</span><span style=\"color: #A6ACCD\">:</span><span style=\"color: #ADD7FF\"> </span><span style=\"color: #5DE4C7\">true</span><span style=\"color: #ADD7FF\"> </span><span style=\"color: #A6ACCD\">}))</span></span></code></pre>\n<p><a href=\"https://www.typescriptlang.org/play?#code/FAMwrgdgxgLglgewgAgCYIMozCEAKAQwCciAuCMAWwCMBTIgbQF0AaZWgDxiIIH5SA3gGcCATwAScACoIAsgkqlqCBABtaBCAF8AlMgHBkyOPk7c+AOhETpchXoNGjUJELW0LqhAHM8AcklkSgU-HUNkLXCiWmwiFGIiYEjgFwghGGR0nBAAXgYARhYAJhYAZiZgdCxsvCzcC0oCAAdCHIA+AgAqEuExSRl5RW4wWl0dIA\">playground</a></p>\n<p>This one would be difficult for typescript to catch, the second arg is\n\"thisArg\", what the callback refers to as <code>this</code></p>\n<p>Summary: should probably be a lint rule to avoid this second arg, as it is\nobscure</p>\n<p>Update 02-27-23: This lint rule exists already :)\n<a href=\"https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-array-method-this-argument.md#disallow-using-the-this-argument-in-array-methods\">https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-array-method-this-argument.md#disallow-using-the-this-argument-in-array-methods</a></p>\n<h2 id=\"any-others\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#any-others\"><a href=\"#any-others\" style=\"margin-right: 10px\">#</a></a>Any others?</h2>\n<p>Any other ones that you find in your work? This is just from the past week for\nme :)</p>\n<p>I will need to learn how to make eslint rules!</p>"}}],["$","$L8",null,{}]]}]
