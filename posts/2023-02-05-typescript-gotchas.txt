0:[[["",{"children":["posts",{"children":[["id","2023-02-05-typescript-gotchas","d"],{"children":["__PAGE__?{\"id\":\"2023-02-05-typescript-gotchas\"}",{}]}]}]},"$undefined","$undefined",true],"$L1","$L2"]]
3:I{"id":"3619","name":"","chunks":["619:619-d3e80a47715091a2","931:app/page-59752a1737368847"],"async":false}
4:I{"id":"1300","name":"","chunks":["272:webpack-3224743bbfce757e","667:2443530c-7c83a1ec49cb3fce","961:961-0b7193e5f574b882"],"async":false}
5:I{"id":"6022","name":"","chunks":["272:webpack-3224743bbfce757e","667:2443530c-7c83a1ec49cb3fce","961:961-0b7193e5f574b882"],"async":false}
1:[["$","html",null,{"lang":"en","children":["$","body",null,{"children":[["$","div",null,{"style":{"marginBottom":100},"children":["$","$L3",null,{"href":"/","children":"Misc scribbles"}]}],["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L5",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":"$undefined","asNotFound":false,"childProp":{"current":["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","posts","children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L5",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","asNotFound":false,"childProp":{"current":["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","posts","children",["id","2023-02-05-typescript-gotchas","d"],"children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L5",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","asNotFound":false,"childProp":{"current":["$L6","$@7"],"segment":"__PAGE__?{\"id\":\"2023-02-05-typescript-gotchas\"}"}}],"segment":["id","2023-02-05-typescript-gotchas","d"]}}],"segment":"posts"}}],["$","footer",null,{"style":{"marginTop":100},"children":[["$","$L3",null,{"href":"/","children":"Home"}]," ",["$","$L3",null,{"href":"/archive","children":"Blog archive"}]," ",["$","$L3",null,{"href":"https://github.com/cmdcolin/","children":"Github"}]," ",["$","$L3",null,{"href":"https://twitter.com/cmdcolin","children":"Twitter"}]," ",["$","$L3",null,{"href":"/projects","children":"Projects"}]," ",["$","$L3",null,{"href":"/photos","children":"Photos"}]," ",["$","$L3",null,{"href":"/about","children":"About"}]]}]]}]}],"$@8"]
2:[[["$","meta",null,{"charSet":"utf-8"}],["$","title",null,{"children":"Things typescript didn't catch that should probably be lint rules"}],["$","meta",null,{"name":"description","content":"A blog"}],null,null,null,null,null,null,null,null,["$","meta",null,{"name":"viewport","content":"width=device-width, initial-scale=1"}],null,null,null,null,null,null,null,null,null,null,[]],[null,null,null,null],null,null,[null,null,null,null,null],null,null,null,null,[null,[["$","link",null,{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"any"}]],[],null]]
9:I{"id":"3591","name":"","chunks":["722:app/posts/[id]/page-cb4a6e559310dd46"],"async":false}
7:[null,null,[]]
8:[null,null,[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/97dc5fe527f5d592.css","precedence":"next.js"}]]]
6:["$","article",null,{"children":[["$","div",null,{"children":[["$","h1",null,{"children":"Things typescript didn't catch that should probably be lint rules"}],["$","h4",null,{"children":"2023-02-05"}]]}],["$","div",null,{"dangerouslySetInnerHTML":{"__html":"<p>This is a short list of silly things that I wish Typescript would have caught\nfor me, but are silly logic errors</p>\n<h2 id=\"using-objectentries-accidentally-instead-of-objectfromentries\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#using-objectentries-accidentally-instead-of-objectfromentries\"><a href=\"#using-objectentries-accidentally-instead-of-objectfromentries\" style=\"margin-right: 10px\">#</a></a>Using <code>Object.entries</code> accidentally instead of <code>Object.fromEntries</code></h2>\n<p>Typescript will not complain if you use <code>Object.entries</code> instead of\n<code>Object.fromEntries</code></p>\n<pre class=\"shiki poimandres\" style=\"background-color: #1b1e28\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #91B4D5\">const</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #E4F0FB\">stuff</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #91B4D5\">=</span><span style=\"color: #A6ACCD\"> [</span><span style=\"color: #5DE4C7\">1</span><span style=\"color: #A6ACCD\">, </span><span style=\"color: #5DE4C7\">2</span><span style=\"color: #A6ACCD\">, </span><span style=\"color: #5DE4C7\">3</span><span style=\"color: #A6ACCD\">]</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #767C9DB0; font-style: italic\">// woops, meant to use Object.fromEntries</span></span>\n<span class=\"line\"><span style=\"color: #E4F0FB\">Object</span><span style=\"color: #A6ACCD\">.</span><span style=\"color: #E4F0FBD0\">entries</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #E4F0FB\">stuff</span><span style=\"color: #A6ACCD\">.</span><span style=\"color: #E4F0FBD0\">map</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #E4F0FB\">entry</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #91B4D5\">=></span><span style=\"color: #A6ACCD\"> [</span><span style=\"color: #E4F0FB\">entry</span><span style=\"color: #A6ACCD\">, {</span><span style=\"color: #E4F0FB\"> </span><span style=\"color: #ADD7FF\">id</span><span style=\"color: #A6ACCD\">:</span><span style=\"color: #ADD7FF\"> </span><span style=\"color: #E4F0FB\">entry</span><span style=\"color: #ADD7FF\"> </span><span style=\"color: #A6ACCD\">}]))</span></span></code></pre>\n<p><a href=\"https://www.typescriptlang.org/play?#code/FAYw9gdgzgLgBLArgM2QXgNoEYA0AmHAZgF1gB5AIwCsBTEGAOhohgCcBLGqACiVQYC2AQwAO3ZmwCeaAHwYJrSTjgBvdgBMAXAskBfYgEoDQA\">playground</a></p>\n<p>Summary: should probably be a lint rule (a \"types required\" lint rule, a la\n@typescript-eslint) not to accept arrays for Object.entries</p>\n<p>Update 02-27-23: Proposing this rule here\n<a href=\"https://github.com/typescript-eslint/typescript-eslint/issues/6537\">https://github.com/typescript-eslint/typescript-eslint/issues/6537</a></p>\n<h2 id=\"passing-garbage-to-the-second-argument-of-arrayprototypemap-accidentally\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#passing-garbage-to-the-second-argument-of-arrayprototypemap-accidentally\"><a href=\"#passing-garbage-to-the-second-argument-of-arrayprototypemap-accidentally\" style=\"margin-right: 10px\">#</a></a>Passing garbage to the second argument of Array.prototype.map accidentally</h2>\n<pre class=\"shiki poimandres\" style=\"background-color: #1b1e28\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #91B4D5\">function</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #ADD7FF\">doStuff</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #E4F0FB\">arr</span><span style=\"color: #91B4D5\">:</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #A6ACCDC0\">number</span><span style=\"color: #A6ACCD\">[], </span><span style=\"color: #E4F0FB\">extra</span><span style=\"color: #91B4D5\">?:</span><span style=\"color: #A6ACCD\"> { sayHiToMom</span><span style=\"color: #91B4D5\">:</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #A6ACCDC0\">boolean</span><span style=\"color: #A6ACCD\"> }) {</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  if (</span><span style=\"color: #E4F0FB\">extra</span><span style=\"color: #A6ACCD\">?.</span><span style=\"color: #E4F0FB\">sayHiToMom</span><span style=\"color: #A6ACCD\">) {</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">    </span><span style=\"color: #E4F0FB\">console</span><span style=\"color: #A6ACCD\">.</span><span style=\"color: #E4F0FBD0\">log</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #A6ACCD\">'</span><span style=\"color: #5DE4C7\">Hi mom</span><span style=\"color: #A6ACCD\">'</span><span style=\"color: #A6ACCD\">)</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  }</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #5DE4C7C0\">return</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #E4F0FB\">arr</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #91B4D5\">const</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #E4F0FB\">stuff</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #91B4D5\">=</span><span style=\"color: #A6ACCD\"> [</span><span style=\"color: #5DE4C7\">1</span><span style=\"color: #A6ACCD\">, </span><span style=\"color: #5DE4C7\">2</span><span style=\"color: #A6ACCD\">, </span><span style=\"color: #5DE4C7\">3</span><span style=\"color: #A6ACCD\">]</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #767C9DB0; font-style: italic\">// woops, meant to pass that as second argument to doStuff</span></span>\n<span class=\"line\"><span style=\"color: #E4F0FBD0\">doStuff</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #E4F0FB\">stuff</span><span style=\"color: #A6ACCD\">.</span><span style=\"color: #E4F0FBD0\">map</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #E4F0FB\">a</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #91B4D5\">=></span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #E4F0FB\">a</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #91B4D5\">*</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #5DE4C7\">2</span><span style=\"color: #A6ACCD\">, {</span><span style=\"color: #E4F0FB\"> </span><span style=\"color: #ADD7FF\">sayHiToMom</span><span style=\"color: #A6ACCD\">:</span><span style=\"color: #ADD7FF\"> </span><span style=\"color: #5DE4C7\">true</span><span style=\"color: #ADD7FF\"> </span><span style=\"color: #A6ACCD\">}))</span></span></code></pre>\n<p><a href=\"https://www.typescriptlang.org/play?#code/FAMwrgdgxgLglgewgAgCYIMozCEAKAQwCciAuCMAWwCMBTIgbQF0AaZWgDxiIIH5SA3gGcCATwAScACoIAsgkqlqCBABtaBCAF8AlMgHBkyOPk7c+AOhETpchXoNGjUJELW0LqhAHM8AcklkSgU-HUNkLXCiWmwiFGIiYEjgFwghGGR0nBAAXgYARhYAJhYAZiZgdCxsvCzcC0oCAAdCHIA+AgAqEuExSRl5RW4wWl0dIA\">playground</a></p>\n<p>This one would be difficult for typescript to catch, the second arg is\n\"thisArg\", what the callback refers to as <code>this</code></p>\n<p>Summary: should probably be a lint rule to avoid this second arg, as it is\nobscure</p>\n<p>Update 02-27-23: This lint rule exists already :)\n<a href=\"https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-array-method-this-argument.md#disallow-using-the-this-argument-in-array-methods\">https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-array-method-this-argument.md#disallow-using-the-this-argument-in-array-methods</a></p>\n<h2 id=\"any-others\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#any-others\"><a href=\"#any-others\" style=\"margin-right: 10px\">#</a></a>Any others?</h2>\n<p>Any other ones that you find in your work? This is just from the past week for\nme :)</p>\n<p>I will need to learn how to make eslint rules!</p>"}}],["$","$L9",null,{}]]}]
