1:"$Sreact.fragment"
2:I[8173,["173","static/chunks/173-c4204d8a61969f1d.js","974","static/chunks/app/page-587629221be7b0d2.js"],""]
3:I[5244,[],""]
4:I[3866,[],""]
6:I[6213,[],"OutletBoundary"]
8:I[6213,[],"MetadataBoundary"]
a:I[6213,[],"ViewportBoundary"]
c:I[4835,[],""]
:HL["/_next/static/css/53ac0649e8acd1de.css","style"]
0:{"P":null,"b":"dxDsFH0zMJFVFYK_5YMT3","p":"","c":["","posts","2025-02-23-vitelibrarymode"],"i":false,"f":[[["",{"children":["posts",{"children":[["id","2025-02-23-vitelibrarymode","d"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/53ac0649e8acd1de.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":["$","body",null,{"children":[["$","div",null,{"className":"mb-8","children":["$","$L2",null,{"href":"/","children":"Misc scribbles"}]}],["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[],[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]]],"forbidden":"$undefined","unauthorized":"$undefined"}],["$","footer",null,{"className":"mt-16","children":[["$","$L2",null,{"className":"m-2","href":"/","children":"Home"}],["$","$L2",null,{"className":"m-2","href":"/archive","children":"Blog archive"}],["$","$L2",null,{"className":"m-2","href":"https://github.com/cmdcolin/","children":"Github"}],["$","$L2",null,{"className":"m-2","href":"/projects","children":"Projects"}],["$","$L2",null,{"className":"m-2","href":"/photos","children":"Photos"}],["$","$L2",null,{"className":"m-2","href":"/books","children":"Books"}],["$","$L2",null,{"className":"m-2","href":"/about","children":"About"}],["$","$L2",null,{"className":"m-2","href":"/rss.xml","children":"RSS"}]]}]]}]}]]}],{"children":["posts",["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","posts","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":[["id","2025-02-23-vitelibrarymode","d"],["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","posts","children","$0:f:0:1:2:children:2:children:0","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L5",null,["$","$L6",null,{"children":"$L7"}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","Lhp1L70U4WpdqSMMLVEMZ",{"children":[["$","$L8",null,{"children":"$L9"}],["$","$La",null,{"children":"$Lb"}],null]}]]}],false]],"m":"$undefined","G":["$c","$undefined"],"s":false,"S":true}
b:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
e:I[7928,["880","static/chunks/app/posts/%5Bid%5D/page-cc4771b5e3a551f2.js"],"default"]
d:T4474,<p><img src="/chiblets.jpg" alt="my cats"></p>
<p>Vite is a very popular "build tool" for making all sorts of javascript apps. It
is most commonly used for making single page apps, but it also has a feature
called <a href="https://vite.dev/guide/build#library-mode">"library mode"</a> which helps
you publish things that you have written on NPM. I imagine it is much less
commonly used than vite itself, but I wanted to comment on it because it has a
behavior I'm not a big fan of...</p>
<h2 id="vite-library-mode-completely-minifiesbundles-all-your-dependencies"><a aria-hidden="true" tabindex="-1" href="#vite-library-mode-completely-minifiesbundles-all-your-dependencies"><a href="#vite-library-mode-completely-minifiesbundles-all-your-dependencies" style="margin-right: 10px">#</a></a>Vite library mode completely minifies+bundles all your dependencies</h2>
<p>For example, if your library that is using vite library mode has</p>
<pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#E06C75"> leftPad</span><span style="color:#C678DD"> from</span><span style="color:#98C379"> 'left-pad'</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD">const</span><span style="color:#E5C07B"> str</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> leftPad</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">'foobar'</span><span style="color:#ABB2BF">, </span><span style="color:#D19A66">6</span><span style="color:#ABB2BF">)</span></span></code></pre>
<p>then it is turned into this in the dist folder by vite library mode</p>
<pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">function</span><span style="color:#61AFEF"> d</span><span style="color:#ABB2BF">(</span><span style="color:#E06C75;font-style:italic">t</span><span style="color:#ABB2BF">) {</span></span>
<span class="line"><span style="color:#C678DD">  return</span><span style="color:#E06C75"> t</span><span style="color:#56B6C2"> &#x26;&#x26;</span><span style="color:#E5C07B"> t</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">__esModule</span><span style="color:#56B6C2"> &#x26;&#x26;</span><span style="color:#E5C07B"> Object</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">prototype</span><span style="color:#ABB2BF">.</span><span style="color:#E5C07B">hasOwnProperty</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">call</span><span style="color:#ABB2BF">(</span><span style="color:#E06C75">t</span><span style="color:#ABB2BF">, </span><span style="color:#98C379">'default'</span><span style="color:#ABB2BF">)</span></span>
<span class="line"><span style="color:#C678DD">    ?</span><span style="color:#E5C07B"> t</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">default</span></span>
<span class="line"><span style="color:#C678DD">    :</span><span style="color:#E06C75"> t</span></span>
<span class="line"><span style="color:#ABB2BF">}</span></span>
<span class="line"><span style="color:#C678DD">var</span><span style="color:#E06C75"> f</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">o</span></span>
<span class="line"><span style="color:#C678DD">function</span><span style="color:#61AFEF"> n</span><span style="color:#ABB2BF">() {</span></span>
<span class="line"><span style="color:#C678DD">  if</span><span style="color:#ABB2BF"> (</span><span style="color:#E06C75">o</span><span style="color:#ABB2BF">) </span><span style="color:#C678DD">return</span><span style="color:#E06C75"> f</span></span>
<span class="line"><span style="color:#ABB2BF">  ;(</span><span style="color:#E06C75">o</span><span style="color:#56B6C2"> =</span><span style="color:#D19A66"> 1</span><span style="color:#ABB2BF">), (</span><span style="color:#E06C75">f</span><span style="color:#56B6C2"> =</span><span style="color:#E06C75"> i</span><span style="color:#ABB2BF">)</span></span>
<span class="line"><span style="color:#C678DD">  var</span><span style="color:#E06C75"> t</span><span style="color:#56B6C2"> =</span><span style="color:#ABB2BF"> [</span></span>
<span class="line"><span style="color:#98C379">    ''</span><span style="color:#ABB2BF">,</span></span>
<span class="line"><span style="color:#98C379">    ' '</span><span style="color:#ABB2BF">,</span></span>
<span class="line"><span style="color:#98C379">    '  '</span><span style="color:#ABB2BF">,</span></span>
<span class="line"><span style="color:#98C379">    '   '</span><span style="color:#ABB2BF">,</span></span>
<span class="line"><span style="color:#98C379">    '    '</span><span style="color:#ABB2BF">,</span></span>
<span class="line"><span style="color:#98C379">    '     '</span><span style="color:#ABB2BF">,</span></span>
<span class="line"><span style="color:#98C379">    '      '</span><span style="color:#ABB2BF">,</span></span>
<span class="line"><span style="color:#98C379">    '       '</span><span style="color:#ABB2BF">,</span></span>
<span class="line"><span style="color:#98C379">    '        '</span><span style="color:#ABB2BF">,</span></span>
<span class="line"><span style="color:#98C379">    '         '</span><span style="color:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF">  ]</span></span>
<span class="line"><span style="color:#C678DD">  function</span><span style="color:#61AFEF"> i</span><span style="color:#ABB2BF">(</span><span style="color:#E06C75;font-style:italic">a</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75;font-style:italic">r</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75;font-style:italic">e</span><span style="color:#ABB2BF">) {</span></span>
<span class="line"><span style="color:#C678DD">    if</span><span style="color:#ABB2BF"> (((</span><span style="color:#E06C75">a</span><span style="color:#56B6C2"> =</span><span style="color:#E06C75"> a</span><span style="color:#56B6C2"> +</span><span style="color:#98C379"> ''</span><span style="color:#ABB2BF">), (</span><span style="color:#E06C75">r</span><span style="color:#56B6C2"> =</span><span style="color:#E06C75"> r</span><span style="color:#56B6C2"> -</span><span style="color:#E5C07B"> a</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">length</span><span style="color:#ABB2BF">), </span><span style="color:#E06C75">r</span><span style="color:#56B6C2"> &#x3C;=</span><span style="color:#D19A66"> 0</span><span style="color:#ABB2BF">)) </span><span style="color:#C678DD">return</span><span style="color:#E06C75"> a</span></span>
<span class="line"><span style="color:#C678DD">    if</span><span style="color:#ABB2BF"> ((</span><span style="color:#56B6C2">!</span><span style="color:#E06C75">e</span><span style="color:#56B6C2"> &#x26;&#x26;</span><span style="color:#E06C75"> e</span><span style="color:#56B6C2"> !==</span><span style="color:#D19A66"> 0</span><span style="color:#56B6C2"> &#x26;&#x26;</span><span style="color:#ABB2BF"> (</span><span style="color:#E06C75">e</span><span style="color:#56B6C2"> =</span><span style="color:#98C379"> ' '</span><span style="color:#ABB2BF">), (</span><span style="color:#E06C75">e</span><span style="color:#56B6C2"> =</span><span style="color:#E06C75"> e</span><span style="color:#56B6C2"> +</span><span style="color:#98C379"> ''</span><span style="color:#ABB2BF">), </span><span style="color:#E06C75">e</span><span style="color:#56B6C2"> ===</span><span style="color:#98C379"> ' '</span><span style="color:#56B6C2"> &#x26;&#x26;</span><span style="color:#E06C75"> r</span><span style="color:#56B6C2"> &#x3C;</span><span style="color:#D19A66"> 10</span><span style="color:#ABB2BF">))</span></span>
<span class="line"><span style="color:#C678DD">      return</span><span style="color:#E06C75"> t</span><span style="color:#ABB2BF">[</span><span style="color:#E06C75">r</span><span style="color:#ABB2BF">] </span><span style="color:#56B6C2">+</span><span style="color:#E06C75"> a</span></span>
<span class="line"><span style="color:#C678DD">    for</span><span style="color:#ABB2BF"> (</span><span style="color:#C678DD">var</span><span style="color:#E06C75"> u</span><span style="color:#56B6C2"> =</span><span style="color:#98C379"> ''</span><span style="color:#ABB2BF">; </span><span style="color:#E06C75">r</span><span style="color:#56B6C2"> &#x26;</span><span style="color:#D19A66"> 1</span><span style="color:#56B6C2"> &#x26;&#x26;</span><span style="color:#ABB2BF"> (</span><span style="color:#E06C75">u</span><span style="color:#56B6C2"> +=</span><span style="color:#E06C75"> e</span><span style="color:#ABB2BF">), (</span><span style="color:#E06C75">r</span><span style="color:#C678DD"> >>=</span><span style="color:#D19A66"> 1</span><span style="color:#ABB2BF">), </span><span style="color:#E06C75">r</span><span style="color:#ABB2BF">; ) </span><span style="color:#E06C75">e</span><span style="color:#56B6C2"> +=</span><span style="color:#E06C75"> e</span></span>
<span class="line"><span style="color:#C678DD">    return</span><span style="color:#E06C75"> u</span><span style="color:#56B6C2"> +</span><span style="color:#E06C75"> a</span></span>
<span class="line"><span style="color:#ABB2BF">  }</span></span>
<span class="line"><span style="color:#C678DD">  return</span><span style="color:#E06C75"> f</span></span>
<span class="line"><span style="color:#ABB2BF">}</span></span>
<span class="line"><span style="color:#C678DD">var</span><span style="color:#E5C07B"> P</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> n</span><span style="color:#ABB2BF">()</span></span>
<span class="line"><span style="color:#C678DD">const</span><span style="color:#E5C07B"> l</span><span style="color:#56B6C2"> =</span><span style="color:#7F848E;font-style:italic"> /* @__PURE__ */</span><span style="color:#61AFEF"> d</span><span style="color:#ABB2BF">(</span><span style="color:#E5C07B">P</span><span style="color:#ABB2BF">)</span></span>
<span class="line"><span style="color:#61AFEF">l</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">'foobar'</span><span style="color:#ABB2BF">, </span><span style="color:#D19A66">6</span><span style="color:#ABB2BF">)</span></span></code></pre>
<p>yes, that's the left-pad source code, inlined into your library's distribution</p>
<p>I personally believe this is bad. It could have just put this into the dist
folder:</p>
<pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#E06C75"> leftPad</span><span style="color:#C678DD"> from</span><span style="color:#98C379"> 'left-pad'</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD">const</span><span style="color:#E5C07B"> str</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> leftPad</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">'foobar'</span><span style="color:#ABB2BF">, </span><span style="color:#D19A66">6</span><span style="color:#ABB2BF">)</span></span></code></pre>
<p>then, any consumer of your library can trace the import from your library to
left-pad, which is responsibly declared in your package.json "dependencies", and
everything is fine and normal.</p>
<p>But this is not how vite library mode does it, so I must construct some strawmen
to wonder why anyone would do this</p>
<h3 id="why-someone-might-bundle-their-dependencies-they-upload-to-npm"><a aria-hidden="true" tabindex="-1" href="#why-someone-might-bundle-their-dependencies-they-upload-to-npm"><a href="#why-someone-might-bundle-their-dependencies-they-upload-to-npm" style="margin-right: 10px">#</a></a>Why someone might bundle their dependencies they upload to NPM</h3>
<ul>
<li>They are anti-toolchain enthusiasts or appeasing anti-toolchain
enthusiasts/luddites and want a single javascript file that they can put in a
script tag, from unpkg or similar</li>
<li>They think they are helping against supply chain attacks by bundling all their
dependencies to a fixed version. After all, left-pad happened one time</li>
<li>They do not care about the opinions of people like me</li>
<li>They don't realize they are doing it</li>
</ul>
<h3 id="why-someone-might-minify-the-things-they-upload-to-npm"><a aria-hidden="true" tabindex="-1" href="#why-someone-might-minify-the-things-they-upload-to-npm"><a href="#why-someone-might-minify-the-things-they-upload-to-npm" style="margin-right: 10px">#</a></a>Why someone might minify the things they upload to NPM</h3>
<ul>
<li>They are anti-toolchain enthusiasts (see above) and yet they want the optimal
byte size savings from minification</li>
<li>They feel deeply connected to memes about node_modules folders being a black
hole and think minifying might help</li>
<li>They feel bad for NPMs servers having to serve so much data, and think
minifying could help save the internet (see articles titled "I saved NPM from
serving 440gb per week by removing THIS ONE LINER")</li>
<li>They like inscrutable things</li>
</ul>
<p>(you can likely toggle minification in vite library mode settings, but it
minifies by default)</p>
<h3 id="why-i-think-it-is-bad-to-bundle-your-dependencies-for-artifacts-that-you-upload-to-npm"><a aria-hidden="true" tabindex="-1" href="#why-i-think-it-is-bad-to-bundle-your-dependencies-for-artifacts-that-you-upload-to-npm"><a href="#why-i-think-it-is-bad-to-bundle-your-dependencies-for-artifacts-that-you-upload-to-npm" style="margin-right: 10px">#</a></a>Why I think it is bad to bundle your dependencies for artifacts that you upload to NPM</h3>
<ul>
<li>Consumers of your library will not get semver updates from your
sub-dependencies</li>
<li>Consumers might think they are getting semver updates from your
sub-dependencies if you list these in the "dependencies" in your package.json,
but since you effectively hard-coded the particular version at build time via
bundling, they are not getting the updates</li>
<li>They may end up with duplicate dependencies, that could even be incompatible
in insane ways</li>
<li>The vite library technique only (to my knowledge) has the technique of
one-by-one externalizing dependencies e.g. only externalize React. Personal
note: I really don't like this. Why do you think that you externalize React in
particular? Yes, it is because having multiple versions of React on a page
causes the most insane error messages the world has ever seen. I only wrote
this blogpost because of one of these errors. I wasn't able to consume a plain
old function component that I exported from a package I tried to make with
vite library mode.</li>
<li>Users of your library will have very little recourse to fix the issue
(particularly combined with the minification), so they will not be able to use
a yarn <code>resolution</code> to lock to a working version or use <code>yarn link</code> to get a
patched version</li>
<li>Couple more reasons listed here
<a href="https://cmdcolin.github.io/posts/2022-05-27-youmaynotneedabundler#why-would-you-not-want-a-bundler-for-your-library">https://cmdcolin.github.io/posts/2022-05-27-youmaynotneedabundler#why-would-you-not-want-a-bundler-for-your-library</a></li>
</ul>
<h3 id="why-i-think-it-is-bad-to-minify-the-libraries-that-you-upload-to-npm"><a aria-hidden="true" tabindex="-1" href="#why-i-think-it-is-bad-to-minify-the-libraries-that-you-upload-to-npm"><a href="#why-i-think-it-is-bad-to-minify-the-libraries-that-you-upload-to-npm" style="margin-right: 10px">#</a></a>Why I think it is bad to minify the libraries that you upload to NPM</h3>
<ul>
<li>It is an obscure mess that is difficult to inspect</li>
<li>Consumers of the app should do minification if they need it</li>
</ul>
<h2 id="conclusions"><a aria-hidden="true" tabindex="-1" href="#conclusions"><a href="#conclusions" style="margin-right: 10px">#</a></a>Conclusions</h2>
<p>I am a dependencies apologist. I like libraries, they do good things for me, and
I enjoy getting regular bugfixes and improvements. I like good library hygiene</p>
<p>I have previously written about why you may NOT need a bundler for your library
here <a href="https://cmdcolin.github.io/posts/2022-05-27-youmaynotneedabundler">https://cmdcolin.github.io/posts/2022-05-27-youmaynotneedabundler</a>.</p>
<p>I also wrote a small article about a bundler-less way to make a pure-ESM
typescript packages here <a href="https://cmdcolin.github.io/posts/2025-01-12-pureesm">https://cmdcolin.github.io/posts/2025-01-12-pureesm</a></p>
<h2 id="footnote-1"><a aria-hidden="true" tabindex="-1" href="#footnote-1"><a href="#footnote-1" style="margin-right: 10px">#</a></a>Footnote 1</h2>
<p>I am not trying to pick on vite here. They do great work for the community. I
bet many other quickstart NPM library creation kits have this same trouble (e.g.
from my list <a href="https://cmdcolin.github.io/posts/2022-05-27-youmaynotneedabundler">https://cmdcolin.github.io/posts/2022-05-27-youmaynotneedabundler</a>)</p>
<p>For example, the first one on that list, microbundle, has a full wiki page to
justify doing things this way, but has even more complex subtle behavior
<a href="https://github.com/developit/microbundle/wiki/How-Microbundle-decides-which-dependencies-to-bundle">https://github.com/developit/microbundle/wiki/How-Microbundle-decides-which-dependencies-to-bundle</a></p>5:["$","div",null,{"className":"lg:w-1/2 m-auto","children":[["$","div",null,{"children":[["$","h1",null,{"children":"Vite library mode bundles your library's dependencies (which I don't think is good)"}],["$","h4",null,{"children":"2025-02-23"}]]}],["$","div",null,{"dangerouslySetInnerHTML":{"__html":"$d"}}],["$","$Le",null,{}]]}]
9:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Vite library mode bundles your library's dependencies (which I don't think is good)"}],["$","meta","2",{"name":"description","content":"A blog"}]]
7:null
